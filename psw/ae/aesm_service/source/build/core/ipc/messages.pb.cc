// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "messages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace aesm {
namespace message {

void protobuf_ShutdownFile_messages_2eproto() {
  delete Request::default_instance_;
  delete Request_InitQuoteRequest::default_instance_;
  delete Request_GetQuoteRequest::default_instance_;
  delete Request_GetLaunchTokenRequest::default_instance_;
  delete Request_ReportAttestationErrorRequest::default_instance_;
  delete Request_CheckUpdateStatusRequest::default_instance_;
  delete Request_GetWhiteListSizeRequest::default_instance_;
  delete Request_GetWhiteListRequest::default_instance_;
  delete Request_SGXGetExtendedEpidGroupIdRequest::default_instance_;
  delete Request_SGXSwitchExtendedEpidGroupRequest::default_instance_;
  delete Request_SGXRegisterRequest::default_instance_;
  delete Request_InitQuoteExRequest::default_instance_;
  delete Request_SelectAttKeyIDRequest::default_instance_;
  delete Request_GetQuoteSizeExRequest::default_instance_;
  delete Request_GetQuoteExRequest::default_instance_;
  delete Request_GetSupportedAttKeyIDNumRequest::default_instance_;
  delete Request_GetSupportedAttKeyIDsRequest::default_instance_;
  delete Response::default_instance_;
  delete Response_InitQuoteResponse::default_instance_;
  delete Response_GetQuoteResponse::default_instance_;
  delete Response_GetLaunchTokenResponse::default_instance_;
  delete Response_ReportAttestationErrorResponse::default_instance_;
  delete Response_CheckUpdateStatusResponse::default_instance_;
  delete Response_GetWhiteListSizeResponse::default_instance_;
  delete Response_GetWhiteListResponse::default_instance_;
  delete Response_SGXGetExtendedEpidGroupIdResponse::default_instance_;
  delete Response_SGXSwitchExtendedEpidGroupResponse::default_instance_;
  delete Response_SGXRegisterResponse::default_instance_;
  delete Response_SelectAttKeyIDResponse::default_instance_;
  delete Response_InitQuoteExResponse::default_instance_;
  delete Response_GetQuoteSizeExResponse::default_instance_;
  delete Response_GetQuoteExResponse::default_instance_;
  delete Response_UnsupportedRequestResponse::default_instance_;
  delete Response_GetSupportedAttKeyIDNumResponse::default_instance_;
  delete Response_GetSupportedAttKeyIDsResponse::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_messages_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_messages_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_messages_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  Request::default_instance_ = new Request();
  Request_InitQuoteRequest::default_instance_ = new Request_InitQuoteRequest();
  Request_GetQuoteRequest::default_instance_ = new Request_GetQuoteRequest();
  Request_GetLaunchTokenRequest::default_instance_ = new Request_GetLaunchTokenRequest();
  Request_ReportAttestationErrorRequest::default_instance_ = new Request_ReportAttestationErrorRequest();
  Request_CheckUpdateStatusRequest::default_instance_ = new Request_CheckUpdateStatusRequest();
  Request_GetWhiteListSizeRequest::default_instance_ = new Request_GetWhiteListSizeRequest();
  Request_GetWhiteListRequest::default_instance_ = new Request_GetWhiteListRequest();
  Request_SGXGetExtendedEpidGroupIdRequest::default_instance_ = new Request_SGXGetExtendedEpidGroupIdRequest();
  Request_SGXSwitchExtendedEpidGroupRequest::default_instance_ = new Request_SGXSwitchExtendedEpidGroupRequest();
  Request_SGXRegisterRequest::default_instance_ = new Request_SGXRegisterRequest();
  Request_InitQuoteExRequest::default_instance_ = new Request_InitQuoteExRequest();
  Request_SelectAttKeyIDRequest::default_instance_ = new Request_SelectAttKeyIDRequest();
  Request_GetQuoteSizeExRequest::default_instance_ = new Request_GetQuoteSizeExRequest();
  Request_GetQuoteExRequest::default_instance_ = new Request_GetQuoteExRequest();
  Request_GetSupportedAttKeyIDNumRequest::default_instance_ = new Request_GetSupportedAttKeyIDNumRequest();
  Request_GetSupportedAttKeyIDsRequest::default_instance_ = new Request_GetSupportedAttKeyIDsRequest();
  Response::default_instance_ = new Response();
  Response_InitQuoteResponse::default_instance_ = new Response_InitQuoteResponse();
  Response_GetQuoteResponse::default_instance_ = new Response_GetQuoteResponse();
  Response_GetLaunchTokenResponse::default_instance_ = new Response_GetLaunchTokenResponse();
  Response_ReportAttestationErrorResponse::default_instance_ = new Response_ReportAttestationErrorResponse();
  Response_CheckUpdateStatusResponse::default_instance_ = new Response_CheckUpdateStatusResponse();
  Response_GetWhiteListSizeResponse::default_instance_ = new Response_GetWhiteListSizeResponse();
  Response_GetWhiteListResponse::default_instance_ = new Response_GetWhiteListResponse();
  Response_SGXGetExtendedEpidGroupIdResponse::default_instance_ = new Response_SGXGetExtendedEpidGroupIdResponse();
  Response_SGXSwitchExtendedEpidGroupResponse::default_instance_ = new Response_SGXSwitchExtendedEpidGroupResponse();
  Response_SGXRegisterResponse::default_instance_ = new Response_SGXRegisterResponse();
  Response_SelectAttKeyIDResponse::default_instance_ = new Response_SelectAttKeyIDResponse();
  Response_InitQuoteExResponse::default_instance_ = new Response_InitQuoteExResponse();
  Response_GetQuoteSizeExResponse::default_instance_ = new Response_GetQuoteSizeExResponse();
  Response_GetQuoteExResponse::default_instance_ = new Response_GetQuoteExResponse();
  Response_UnsupportedRequestResponse::default_instance_ = new Response_UnsupportedRequestResponse();
  Response_GetSupportedAttKeyIDNumResponse::default_instance_ = new Response_GetSupportedAttKeyIDNumResponse();
  Response_GetSupportedAttKeyIDsResponse::default_instance_ = new Response_GetSupportedAttKeyIDsResponse();
  Request::default_instance_->InitAsDefaultInstance();
  Request_InitQuoteRequest::default_instance_->InitAsDefaultInstance();
  Request_GetQuoteRequest::default_instance_->InitAsDefaultInstance();
  Request_GetLaunchTokenRequest::default_instance_->InitAsDefaultInstance();
  Request_ReportAttestationErrorRequest::default_instance_->InitAsDefaultInstance();
  Request_CheckUpdateStatusRequest::default_instance_->InitAsDefaultInstance();
  Request_GetWhiteListSizeRequest::default_instance_->InitAsDefaultInstance();
  Request_GetWhiteListRequest::default_instance_->InitAsDefaultInstance();
  Request_SGXGetExtendedEpidGroupIdRequest::default_instance_->InitAsDefaultInstance();
  Request_SGXSwitchExtendedEpidGroupRequest::default_instance_->InitAsDefaultInstance();
  Request_SGXRegisterRequest::default_instance_->InitAsDefaultInstance();
  Request_InitQuoteExRequest::default_instance_->InitAsDefaultInstance();
  Request_SelectAttKeyIDRequest::default_instance_->InitAsDefaultInstance();
  Request_GetQuoteSizeExRequest::default_instance_->InitAsDefaultInstance();
  Request_GetQuoteExRequest::default_instance_->InitAsDefaultInstance();
  Request_GetSupportedAttKeyIDNumRequest::default_instance_->InitAsDefaultInstance();
  Request_GetSupportedAttKeyIDsRequest::default_instance_->InitAsDefaultInstance();
  Response::default_instance_->InitAsDefaultInstance();
  Response_InitQuoteResponse::default_instance_->InitAsDefaultInstance();
  Response_GetQuoteResponse::default_instance_->InitAsDefaultInstance();
  Response_GetLaunchTokenResponse::default_instance_->InitAsDefaultInstance();
  Response_ReportAttestationErrorResponse::default_instance_->InitAsDefaultInstance();
  Response_CheckUpdateStatusResponse::default_instance_->InitAsDefaultInstance();
  Response_GetWhiteListSizeResponse::default_instance_->InitAsDefaultInstance();
  Response_GetWhiteListResponse::default_instance_->InitAsDefaultInstance();
  Response_SGXGetExtendedEpidGroupIdResponse::default_instance_->InitAsDefaultInstance();
  Response_SGXSwitchExtendedEpidGroupResponse::default_instance_->InitAsDefaultInstance();
  Response_SGXRegisterResponse::default_instance_->InitAsDefaultInstance();
  Response_SelectAttKeyIDResponse::default_instance_->InitAsDefaultInstance();
  Response_InitQuoteExResponse::default_instance_->InitAsDefaultInstance();
  Response_GetQuoteSizeExResponse::default_instance_->InitAsDefaultInstance();
  Response_GetQuoteExResponse::default_instance_->InitAsDefaultInstance();
  Response_UnsupportedRequestResponse::default_instance_->InitAsDefaultInstance();
  Response_GetSupportedAttKeyIDNumResponse::default_instance_->InitAsDefaultInstance();
  Response_GetSupportedAttKeyIDsResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_messages_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_messages_2eproto_once_);
void protobuf_AddDesc_messages_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_messages_2eproto_once_,
                 &protobuf_AddDesc_messages_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_messages_2eproto {
  StaticDescriptorInitializer_messages_2eproto() {
    protobuf_AddDesc_messages_2eproto();
  }
} static_descriptor_initializer_messages_2eproto_;
#endif

// ===================================================================

static ::std::string* MutableUnknownFieldsForRequest(
    Request* ptr) {
  return ptr->mutable_unknown_fields();
}

static ::std::string* MutableUnknownFieldsForRequest_InitQuoteRequest(
    Request_InitQuoteRequest* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_InitQuoteRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_InitQuoteRequest::Request_InitQuoteRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.InitQuoteRequest)
}

void Request_InitQuoteRequest::InitAsDefaultInstance() {
}

Request_InitQuoteRequest::Request_InitQuoteRequest(const Request_InitQuoteRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.InitQuoteRequest)
}

void Request_InitQuoteRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeout_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request_InitQuoteRequest::~Request_InitQuoteRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.InitQuoteRequest)
  SharedDtor();
}

void Request_InitQuoteRequest::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Request_InitQuoteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Request_InitQuoteRequest& Request_InitQuoteRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Request_InitQuoteRequest* Request_InitQuoteRequest::default_instance_ = NULL;

Request_InitQuoteRequest* Request_InitQuoteRequest::New(::google::protobuf::Arena* arena) const {
  Request_InitQuoteRequest* n = new Request_InitQuoteRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request_InitQuoteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.InitQuoteRequest)
  timeout_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Request_InitQuoteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForRequest_InitQuoteRequest, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Request.InitQuoteRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 timeout = 9;
      case 9: {
        if (tag == 72) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
          set_has_timeout();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.InitQuoteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.InitQuoteRequest)
  return false;
#undef DO_
}

void Request_InitQuoteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.InitQuoteRequest)
  // optional uint32 timeout = 9;
  if (has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.InitQuoteRequest)
}

int Request_InitQuoteRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.InitQuoteRequest)
  int total_size = 0;

  // optional uint32 timeout = 9;
  if (has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeout());
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_InitQuoteRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Request_InitQuoteRequest*>(&from));
}

void Request_InitQuoteRequest::MergeFrom(const Request_InitQuoteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.InitQuoteRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_timeout()) {
      set_timeout(from.timeout());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Request_InitQuoteRequest::CopyFrom(const Request_InitQuoteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.InitQuoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_InitQuoteRequest::IsInitialized() const {

  return true;
}

void Request_InitQuoteRequest::Swap(Request_InitQuoteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_InitQuoteRequest::InternalSwap(Request_InitQuoteRequest* other) {
  std::swap(timeout_, other->timeout_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Request_InitQuoteRequest::GetTypeName() const {
  return "aesm.message.Request.InitQuoteRequest";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForRequest_GetQuoteRequest(
    Request_GetQuoteRequest* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_GetQuoteRequest::kReportFieldNumber;
const int Request_GetQuoteRequest::kQuoteTypeFieldNumber;
const int Request_GetQuoteRequest::kSpidFieldNumber;
const int Request_GetQuoteRequest::kNonceFieldNumber;
const int Request_GetQuoteRequest::kSigRlFieldNumber;
const int Request_GetQuoteRequest::kBufSizeFieldNumber;
const int Request_GetQuoteRequest::kQeReportFieldNumber;
const int Request_GetQuoteRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_GetQuoteRequest::Request_GetQuoteRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.GetQuoteRequest)
}

void Request_GetQuoteRequest::InitAsDefaultInstance() {
}

Request_GetQuoteRequest::Request_GetQuoteRequest(const Request_GetQuoteRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.GetQuoteRequest)
}

void Request_GetQuoteRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  report_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quote_type_ = 0u;
  spid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sig_rl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buf_size_ = 0u;
  qe_report_ = false;
  timeout_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request_GetQuoteRequest::~Request_GetQuoteRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.GetQuoteRequest)
  SharedDtor();
}

void Request_GetQuoteRequest::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  report_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sig_rl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Request_GetQuoteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Request_GetQuoteRequest& Request_GetQuoteRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Request_GetQuoteRequest* Request_GetQuoteRequest::default_instance_ = NULL;

Request_GetQuoteRequest* Request_GetQuoteRequest::New(::google::protobuf::Arena* arena) const {
  Request_GetQuoteRequest* n = new Request_GetQuoteRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request_GetQuoteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.GetQuoteRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Request_GetQuoteRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Request_GetQuoteRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(quote_type_, buf_size_);
    ZR_(qe_report_, timeout_);
    if (has_report()) {
      report_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_spid()) {
      spid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_nonce()) {
      nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_sig_rl()) {
      sig_rl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Request_GetQuoteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForRequest_GetQuoteRequest, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Request.GetQuoteRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes report = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_report()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_quote_type;
        break;
      }

      // required uint32 quote_type = 2;
      case 2: {
        if (tag == 16) {
         parse_quote_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quote_type_)));
          set_has_quote_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_spid;
        break;
      }

      // required bytes spid = 3;
      case 3: {
        if (tag == 26) {
         parse_spid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_spid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_nonce;
        break;
      }

      // optional bytes nonce = 4;
      case 4: {
        if (tag == 34) {
         parse_nonce:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nonce()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sig_rl;
        break;
      }

      // optional bytes sig_rl = 5;
      case 5: {
        if (tag == 42) {
         parse_sig_rl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sig_rl()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_buf_size;
        break;
      }

      // required uint32 buf_size = 6;
      case 6: {
        if (tag == 48) {
         parse_buf_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buf_size_)));
          set_has_buf_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_qe_report;
        break;
      }

      // optional bool qe_report = 7;
      case 7: {
        if (tag == 56) {
         parse_qe_report:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &qe_report_)));
          set_has_qe_report();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_timeout;
        break;
      }

      // optional uint32 timeout = 9;
      case 9: {
        if (tag == 72) {
         parse_timeout:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
          set_has_timeout();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.GetQuoteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.GetQuoteRequest)
  return false;
#undef DO_
}

void Request_GetQuoteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.GetQuoteRequest)
  // required bytes report = 1;
  if (has_report()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->report(), output);
  }

  // required uint32 quote_type = 2;
  if (has_quote_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->quote_type(), output);
  }

  // required bytes spid = 3;
  if (has_spid()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->spid(), output);
  }

  // optional bytes nonce = 4;
  if (has_nonce()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->nonce(), output);
  }

  // optional bytes sig_rl = 5;
  if (has_sig_rl()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->sig_rl(), output);
  }

  // required uint32 buf_size = 6;
  if (has_buf_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->buf_size(), output);
  }

  // optional bool qe_report = 7;
  if (has_qe_report()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->qe_report(), output);
  }

  // optional uint32 timeout = 9;
  if (has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.GetQuoteRequest)
}

int Request_GetQuoteRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:aesm.message.Request.GetQuoteRequest)
  int total_size = 0;

  if (has_report()) {
    // required bytes report = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->report());
  }

  if (has_quote_type()) {
    // required uint32 quote_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quote_type());
  }

  if (has_spid()) {
    // required bytes spid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->spid());
  }

  if (has_buf_size()) {
    // required uint32 buf_size = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->buf_size());
  }

  return total_size;
}
int Request_GetQuoteRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.GetQuoteRequest)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000027) ^ 0x00000027) == 0) {  // All required fields are present.
    // required bytes report = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->report());

    // required uint32 quote_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quote_type());

    // required bytes spid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->spid());

    // required uint32 buf_size = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->buf_size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[3 / 32] & 216u) {
    // optional bytes nonce = 4;
    if (has_nonce()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->nonce());
    }

    // optional bytes sig_rl = 5;
    if (has_sig_rl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sig_rl());
    }

    // optional bool qe_report = 7;
    if (has_qe_report()) {
      total_size += 1 + 1;
    }

    // optional uint32 timeout = 9;
    if (has_timeout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timeout());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_GetQuoteRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Request_GetQuoteRequest*>(&from));
}

void Request_GetQuoteRequest::MergeFrom(const Request_GetQuoteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.GetQuoteRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_report()) {
      set_has_report();
      report_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.report_);
    }
    if (from.has_quote_type()) {
      set_quote_type(from.quote_type());
    }
    if (from.has_spid()) {
      set_has_spid();
      spid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spid_);
    }
    if (from.has_nonce()) {
      set_has_nonce();
      nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_);
    }
    if (from.has_sig_rl()) {
      set_has_sig_rl();
      sig_rl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sig_rl_);
    }
    if (from.has_buf_size()) {
      set_buf_size(from.buf_size());
    }
    if (from.has_qe_report()) {
      set_qe_report(from.qe_report());
    }
    if (from.has_timeout()) {
      set_timeout(from.timeout());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Request_GetQuoteRequest::CopyFrom(const Request_GetQuoteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.GetQuoteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_GetQuoteRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000027) != 0x00000027) return false;

  return true;
}

void Request_GetQuoteRequest::Swap(Request_GetQuoteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_GetQuoteRequest::InternalSwap(Request_GetQuoteRequest* other) {
  report_.Swap(&other->report_);
  std::swap(quote_type_, other->quote_type_);
  spid_.Swap(&other->spid_);
  nonce_.Swap(&other->nonce_);
  sig_rl_.Swap(&other->sig_rl_);
  std::swap(buf_size_, other->buf_size_);
  std::swap(qe_report_, other->qe_report_);
  std::swap(timeout_, other->timeout_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Request_GetQuoteRequest::GetTypeName() const {
  return "aesm.message.Request.GetQuoteRequest";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForRequest_GetLaunchTokenRequest(
    Request_GetLaunchTokenRequest* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_GetLaunchTokenRequest::kMrEnclaveFieldNumber;
const int Request_GetLaunchTokenRequest::kMrSignerFieldNumber;
const int Request_GetLaunchTokenRequest::kSeAttributesFieldNumber;
const int Request_GetLaunchTokenRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_GetLaunchTokenRequest::Request_GetLaunchTokenRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.GetLaunchTokenRequest)
}

void Request_GetLaunchTokenRequest::InitAsDefaultInstance() {
}

Request_GetLaunchTokenRequest::Request_GetLaunchTokenRequest(const Request_GetLaunchTokenRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.GetLaunchTokenRequest)
}

void Request_GetLaunchTokenRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mr_enclave_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mr_signer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  se_attributes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeout_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request_GetLaunchTokenRequest::~Request_GetLaunchTokenRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.GetLaunchTokenRequest)
  SharedDtor();
}

void Request_GetLaunchTokenRequest::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mr_enclave_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mr_signer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  se_attributes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Request_GetLaunchTokenRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Request_GetLaunchTokenRequest& Request_GetLaunchTokenRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Request_GetLaunchTokenRequest* Request_GetLaunchTokenRequest::default_instance_ = NULL;

Request_GetLaunchTokenRequest* Request_GetLaunchTokenRequest::New(::google::protobuf::Arena* arena) const {
  Request_GetLaunchTokenRequest* n = new Request_GetLaunchTokenRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request_GetLaunchTokenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.GetLaunchTokenRequest)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_mr_enclave()) {
      mr_enclave_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_mr_signer()) {
      mr_signer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_se_attributes()) {
      se_attributes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    timeout_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Request_GetLaunchTokenRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForRequest_GetLaunchTokenRequest, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Request.GetLaunchTokenRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes mr_enclave = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mr_enclave()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_mr_signer;
        break;
      }

      // required bytes mr_signer = 2;
      case 2: {
        if (tag == 18) {
         parse_mr_signer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mr_signer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_se_attributes;
        break;
      }

      // required bytes se_attributes = 3;
      case 3: {
        if (tag == 26) {
         parse_se_attributes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_se_attributes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_timeout;
        break;
      }

      // optional uint32 timeout = 9;
      case 9: {
        if (tag == 72) {
         parse_timeout:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
          set_has_timeout();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.GetLaunchTokenRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.GetLaunchTokenRequest)
  return false;
#undef DO_
}

void Request_GetLaunchTokenRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.GetLaunchTokenRequest)
  // required bytes mr_enclave = 1;
  if (has_mr_enclave()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->mr_enclave(), output);
  }

  // required bytes mr_signer = 2;
  if (has_mr_signer()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->mr_signer(), output);
  }

  // required bytes se_attributes = 3;
  if (has_se_attributes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->se_attributes(), output);
  }

  // optional uint32 timeout = 9;
  if (has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.GetLaunchTokenRequest)
}

int Request_GetLaunchTokenRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:aesm.message.Request.GetLaunchTokenRequest)
  int total_size = 0;

  if (has_mr_enclave()) {
    // required bytes mr_enclave = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mr_enclave());
  }

  if (has_mr_signer()) {
    // required bytes mr_signer = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mr_signer());
  }

  if (has_se_attributes()) {
    // required bytes se_attributes = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->se_attributes());
  }

  return total_size;
}
int Request_GetLaunchTokenRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.GetLaunchTokenRequest)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required bytes mr_enclave = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mr_enclave());

    // required bytes mr_signer = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mr_signer());

    // required bytes se_attributes = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->se_attributes());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional uint32 timeout = 9;
  if (has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeout());
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_GetLaunchTokenRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Request_GetLaunchTokenRequest*>(&from));
}

void Request_GetLaunchTokenRequest::MergeFrom(const Request_GetLaunchTokenRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.GetLaunchTokenRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mr_enclave()) {
      set_has_mr_enclave();
      mr_enclave_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mr_enclave_);
    }
    if (from.has_mr_signer()) {
      set_has_mr_signer();
      mr_signer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mr_signer_);
    }
    if (from.has_se_attributes()) {
      set_has_se_attributes();
      se_attributes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.se_attributes_);
    }
    if (from.has_timeout()) {
      set_timeout(from.timeout());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Request_GetLaunchTokenRequest::CopyFrom(const Request_GetLaunchTokenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.GetLaunchTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_GetLaunchTokenRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void Request_GetLaunchTokenRequest::Swap(Request_GetLaunchTokenRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_GetLaunchTokenRequest::InternalSwap(Request_GetLaunchTokenRequest* other) {
  mr_enclave_.Swap(&other->mr_enclave_);
  mr_signer_.Swap(&other->mr_signer_);
  se_attributes_.Swap(&other->se_attributes_);
  std::swap(timeout_, other->timeout_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Request_GetLaunchTokenRequest::GetTypeName() const {
  return "aesm.message.Request.GetLaunchTokenRequest";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForRequest_ReportAttestationErrorRequest(
    Request_ReportAttestationErrorRequest* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_ReportAttestationErrorRequest::kPlatformInfoFieldNumber;
const int Request_ReportAttestationErrorRequest::kAttestationErrorCodeFieldNumber;
const int Request_ReportAttestationErrorRequest::kUpdateInfoSizeFieldNumber;
const int Request_ReportAttestationErrorRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_ReportAttestationErrorRequest::Request_ReportAttestationErrorRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.ReportAttestationErrorRequest)
}

void Request_ReportAttestationErrorRequest::InitAsDefaultInstance() {
}

Request_ReportAttestationErrorRequest::Request_ReportAttestationErrorRequest(const Request_ReportAttestationErrorRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.ReportAttestationErrorRequest)
}

void Request_ReportAttestationErrorRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attestation_error_code_ = 0u;
  update_info_size_ = 0u;
  timeout_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request_ReportAttestationErrorRequest::~Request_ReportAttestationErrorRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.ReportAttestationErrorRequest)
  SharedDtor();
}

void Request_ReportAttestationErrorRequest::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Request_ReportAttestationErrorRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Request_ReportAttestationErrorRequest& Request_ReportAttestationErrorRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Request_ReportAttestationErrorRequest* Request_ReportAttestationErrorRequest::default_instance_ = NULL;

Request_ReportAttestationErrorRequest* Request_ReportAttestationErrorRequest::New(::google::protobuf::Arena* arena) const {
  Request_ReportAttestationErrorRequest* n = new Request_ReportAttestationErrorRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request_ReportAttestationErrorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.ReportAttestationErrorRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Request_ReportAttestationErrorRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Request_ReportAttestationErrorRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(attestation_error_code_, timeout_);
    if (has_platform_info()) {
      platform_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Request_ReportAttestationErrorRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForRequest_ReportAttestationErrorRequest, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Request.ReportAttestationErrorRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes platform_info = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_platform_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_attestation_error_code;
        break;
      }

      // required uint32 attestation_error_code = 2;
      case 2: {
        if (tag == 16) {
         parse_attestation_error_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attestation_error_code_)));
          set_has_attestation_error_code();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_update_info_size;
        break;
      }

      // required uint32 update_info_size = 3;
      case 3: {
        if (tag == 24) {
         parse_update_info_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &update_info_size_)));
          set_has_update_info_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_timeout;
        break;
      }

      // optional uint32 timeout = 9;
      case 9: {
        if (tag == 72) {
         parse_timeout:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
          set_has_timeout();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.ReportAttestationErrorRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.ReportAttestationErrorRequest)
  return false;
#undef DO_
}

void Request_ReportAttestationErrorRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.ReportAttestationErrorRequest)
  // required bytes platform_info = 1;
  if (has_platform_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->platform_info(), output);
  }

  // required uint32 attestation_error_code = 2;
  if (has_attestation_error_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->attestation_error_code(), output);
  }

  // required uint32 update_info_size = 3;
  if (has_update_info_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->update_info_size(), output);
  }

  // optional uint32 timeout = 9;
  if (has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.ReportAttestationErrorRequest)
}

int Request_ReportAttestationErrorRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:aesm.message.Request.ReportAttestationErrorRequest)
  int total_size = 0;

  if (has_platform_info()) {
    // required bytes platform_info = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->platform_info());
  }

  if (has_attestation_error_code()) {
    // required uint32 attestation_error_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->attestation_error_code());
  }

  if (has_update_info_size()) {
    // required uint32 update_info_size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->update_info_size());
  }

  return total_size;
}
int Request_ReportAttestationErrorRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.ReportAttestationErrorRequest)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required bytes platform_info = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->platform_info());

    // required uint32 attestation_error_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->attestation_error_code());

    // required uint32 update_info_size = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->update_info_size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional uint32 timeout = 9;
  if (has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeout());
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_ReportAttestationErrorRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Request_ReportAttestationErrorRequest*>(&from));
}

void Request_ReportAttestationErrorRequest::MergeFrom(const Request_ReportAttestationErrorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.ReportAttestationErrorRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_platform_info()) {
      set_has_platform_info();
      platform_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_info_);
    }
    if (from.has_attestation_error_code()) {
      set_attestation_error_code(from.attestation_error_code());
    }
    if (from.has_update_info_size()) {
      set_update_info_size(from.update_info_size());
    }
    if (from.has_timeout()) {
      set_timeout(from.timeout());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Request_ReportAttestationErrorRequest::CopyFrom(const Request_ReportAttestationErrorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.ReportAttestationErrorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_ReportAttestationErrorRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void Request_ReportAttestationErrorRequest::Swap(Request_ReportAttestationErrorRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_ReportAttestationErrorRequest::InternalSwap(Request_ReportAttestationErrorRequest* other) {
  platform_info_.Swap(&other->platform_info_);
  std::swap(attestation_error_code_, other->attestation_error_code_);
  std::swap(update_info_size_, other->update_info_size_);
  std::swap(timeout_, other->timeout_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Request_ReportAttestationErrorRequest::GetTypeName() const {
  return "aesm.message.Request.ReportAttestationErrorRequest";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForRequest_CheckUpdateStatusRequest(
    Request_CheckUpdateStatusRequest* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_CheckUpdateStatusRequest::kPlatformInfoFieldNumber;
const int Request_CheckUpdateStatusRequest::kUpdateInfoSizeFieldNumber;
const int Request_CheckUpdateStatusRequest::kConfigFieldNumber;
const int Request_CheckUpdateStatusRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_CheckUpdateStatusRequest::Request_CheckUpdateStatusRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.CheckUpdateStatusRequest)
}

void Request_CheckUpdateStatusRequest::InitAsDefaultInstance() {
}

Request_CheckUpdateStatusRequest::Request_CheckUpdateStatusRequest(const Request_CheckUpdateStatusRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.CheckUpdateStatusRequest)
}

void Request_CheckUpdateStatusRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  update_info_size_ = 0u;
  config_ = 0u;
  timeout_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request_CheckUpdateStatusRequest::~Request_CheckUpdateStatusRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.CheckUpdateStatusRequest)
  SharedDtor();
}

void Request_CheckUpdateStatusRequest::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Request_CheckUpdateStatusRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Request_CheckUpdateStatusRequest& Request_CheckUpdateStatusRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Request_CheckUpdateStatusRequest* Request_CheckUpdateStatusRequest::default_instance_ = NULL;

Request_CheckUpdateStatusRequest* Request_CheckUpdateStatusRequest::New(::google::protobuf::Arena* arena) const {
  Request_CheckUpdateStatusRequest* n = new Request_CheckUpdateStatusRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request_CheckUpdateStatusRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.CheckUpdateStatusRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Request_CheckUpdateStatusRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Request_CheckUpdateStatusRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(update_info_size_, timeout_);
    if (has_platform_info()) {
      platform_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Request_CheckUpdateStatusRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForRequest_CheckUpdateStatusRequest, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Request.CheckUpdateStatusRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes platform_info = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_platform_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_update_info_size;
        break;
      }

      // required uint32 update_info_size = 2;
      case 2: {
        if (tag == 16) {
         parse_update_info_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &update_info_size_)));
          set_has_update_info_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_config;
        break;
      }

      // required uint32 config = 3;
      case 3: {
        if (tag == 24) {
         parse_config:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_)));
          set_has_config();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_timeout;
        break;
      }

      // optional uint32 timeout = 9;
      case 9: {
        if (tag == 72) {
         parse_timeout:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
          set_has_timeout();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.CheckUpdateStatusRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.CheckUpdateStatusRequest)
  return false;
#undef DO_
}

void Request_CheckUpdateStatusRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.CheckUpdateStatusRequest)
  // optional bytes platform_info = 1;
  if (has_platform_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->platform_info(), output);
  }

  // required uint32 update_info_size = 2;
  if (has_update_info_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->update_info_size(), output);
  }

  // required uint32 config = 3;
  if (has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->config(), output);
  }

  // optional uint32 timeout = 9;
  if (has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.CheckUpdateStatusRequest)
}

int Request_CheckUpdateStatusRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:aesm.message.Request.CheckUpdateStatusRequest)
  int total_size = 0;

  if (has_update_info_size()) {
    // required uint32 update_info_size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->update_info_size());
  }

  if (has_config()) {
    // required uint32 config = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config());
  }

  return total_size;
}
int Request_CheckUpdateStatusRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.CheckUpdateStatusRequest)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 update_info_size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->update_info_size());

    // required uint32 config = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 9u) {
    // optional bytes platform_info = 1;
    if (has_platform_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->platform_info());
    }

    // optional uint32 timeout = 9;
    if (has_timeout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timeout());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_CheckUpdateStatusRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Request_CheckUpdateStatusRequest*>(&from));
}

void Request_CheckUpdateStatusRequest::MergeFrom(const Request_CheckUpdateStatusRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.CheckUpdateStatusRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_platform_info()) {
      set_has_platform_info();
      platform_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_info_);
    }
    if (from.has_update_info_size()) {
      set_update_info_size(from.update_info_size());
    }
    if (from.has_config()) {
      set_config(from.config());
    }
    if (from.has_timeout()) {
      set_timeout(from.timeout());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Request_CheckUpdateStatusRequest::CopyFrom(const Request_CheckUpdateStatusRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.CheckUpdateStatusRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_CheckUpdateStatusRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;

  return true;
}

void Request_CheckUpdateStatusRequest::Swap(Request_CheckUpdateStatusRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_CheckUpdateStatusRequest::InternalSwap(Request_CheckUpdateStatusRequest* other) {
  platform_info_.Swap(&other->platform_info_);
  std::swap(update_info_size_, other->update_info_size_);
  std::swap(config_, other->config_);
  std::swap(timeout_, other->timeout_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Request_CheckUpdateStatusRequest::GetTypeName() const {
  return "aesm.message.Request.CheckUpdateStatusRequest";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForRequest_GetWhiteListSizeRequest(
    Request_GetWhiteListSizeRequest* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_GetWhiteListSizeRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_GetWhiteListSizeRequest::Request_GetWhiteListSizeRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.GetWhiteListSizeRequest)
}

void Request_GetWhiteListSizeRequest::InitAsDefaultInstance() {
}

Request_GetWhiteListSizeRequest::Request_GetWhiteListSizeRequest(const Request_GetWhiteListSizeRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.GetWhiteListSizeRequest)
}

void Request_GetWhiteListSizeRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeout_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request_GetWhiteListSizeRequest::~Request_GetWhiteListSizeRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.GetWhiteListSizeRequest)
  SharedDtor();
}

void Request_GetWhiteListSizeRequest::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Request_GetWhiteListSizeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Request_GetWhiteListSizeRequest& Request_GetWhiteListSizeRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Request_GetWhiteListSizeRequest* Request_GetWhiteListSizeRequest::default_instance_ = NULL;

Request_GetWhiteListSizeRequest* Request_GetWhiteListSizeRequest::New(::google::protobuf::Arena* arena) const {
  Request_GetWhiteListSizeRequest* n = new Request_GetWhiteListSizeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request_GetWhiteListSizeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.GetWhiteListSizeRequest)
  timeout_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Request_GetWhiteListSizeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForRequest_GetWhiteListSizeRequest, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Request.GetWhiteListSizeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 timeout = 9;
      case 9: {
        if (tag == 72) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
          set_has_timeout();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.GetWhiteListSizeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.GetWhiteListSizeRequest)
  return false;
#undef DO_
}

void Request_GetWhiteListSizeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.GetWhiteListSizeRequest)
  // optional uint32 timeout = 9;
  if (has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.GetWhiteListSizeRequest)
}

int Request_GetWhiteListSizeRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.GetWhiteListSizeRequest)
  int total_size = 0;

  // optional uint32 timeout = 9;
  if (has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeout());
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_GetWhiteListSizeRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Request_GetWhiteListSizeRequest*>(&from));
}

void Request_GetWhiteListSizeRequest::MergeFrom(const Request_GetWhiteListSizeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.GetWhiteListSizeRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_timeout()) {
      set_timeout(from.timeout());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Request_GetWhiteListSizeRequest::CopyFrom(const Request_GetWhiteListSizeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.GetWhiteListSizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_GetWhiteListSizeRequest::IsInitialized() const {

  return true;
}

void Request_GetWhiteListSizeRequest::Swap(Request_GetWhiteListSizeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_GetWhiteListSizeRequest::InternalSwap(Request_GetWhiteListSizeRequest* other) {
  std::swap(timeout_, other->timeout_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Request_GetWhiteListSizeRequest::GetTypeName() const {
  return "aesm.message.Request.GetWhiteListSizeRequest";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForRequest_GetWhiteListRequest(
    Request_GetWhiteListRequest* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_GetWhiteListRequest::kWhiteListSizeFieldNumber;
const int Request_GetWhiteListRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_GetWhiteListRequest::Request_GetWhiteListRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.GetWhiteListRequest)
}

void Request_GetWhiteListRequest::InitAsDefaultInstance() {
}

Request_GetWhiteListRequest::Request_GetWhiteListRequest(const Request_GetWhiteListRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.GetWhiteListRequest)
}

void Request_GetWhiteListRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  white_list_size_ = 0u;
  timeout_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request_GetWhiteListRequest::~Request_GetWhiteListRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.GetWhiteListRequest)
  SharedDtor();
}

void Request_GetWhiteListRequest::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Request_GetWhiteListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Request_GetWhiteListRequest& Request_GetWhiteListRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Request_GetWhiteListRequest* Request_GetWhiteListRequest::default_instance_ = NULL;

Request_GetWhiteListRequest* Request_GetWhiteListRequest::New(::google::protobuf::Arena* arena) const {
  Request_GetWhiteListRequest* n = new Request_GetWhiteListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request_GetWhiteListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.GetWhiteListRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Request_GetWhiteListRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Request_GetWhiteListRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(white_list_size_, timeout_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Request_GetWhiteListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForRequest_GetWhiteListRequest, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Request.GetWhiteListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 white_list_size = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &white_list_size_)));
          set_has_white_list_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_timeout;
        break;
      }

      // optional uint32 timeout = 9;
      case 9: {
        if (tag == 72) {
         parse_timeout:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
          set_has_timeout();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.GetWhiteListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.GetWhiteListRequest)
  return false;
#undef DO_
}

void Request_GetWhiteListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.GetWhiteListRequest)
  // optional uint32 white_list_size = 1;
  if (has_white_list_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->white_list_size(), output);
  }

  // optional uint32 timeout = 9;
  if (has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.GetWhiteListRequest)
}

int Request_GetWhiteListRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.GetWhiteListRequest)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 white_list_size = 1;
    if (has_white_list_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->white_list_size());
    }

    // optional uint32 timeout = 9;
    if (has_timeout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timeout());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_GetWhiteListRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Request_GetWhiteListRequest*>(&from));
}

void Request_GetWhiteListRequest::MergeFrom(const Request_GetWhiteListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.GetWhiteListRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_white_list_size()) {
      set_white_list_size(from.white_list_size());
    }
    if (from.has_timeout()) {
      set_timeout(from.timeout());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Request_GetWhiteListRequest::CopyFrom(const Request_GetWhiteListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.GetWhiteListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_GetWhiteListRequest::IsInitialized() const {

  return true;
}

void Request_GetWhiteListRequest::Swap(Request_GetWhiteListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_GetWhiteListRequest::InternalSwap(Request_GetWhiteListRequest* other) {
  std::swap(white_list_size_, other->white_list_size_);
  std::swap(timeout_, other->timeout_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Request_GetWhiteListRequest::GetTypeName() const {
  return "aesm.message.Request.GetWhiteListRequest";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForRequest_SGXGetExtendedEpidGroupIdRequest(
    Request_SGXGetExtendedEpidGroupIdRequest* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_SGXGetExtendedEpidGroupIdRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_SGXGetExtendedEpidGroupIdRequest::Request_SGXGetExtendedEpidGroupIdRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
}

void Request_SGXGetExtendedEpidGroupIdRequest::InitAsDefaultInstance() {
}

Request_SGXGetExtendedEpidGroupIdRequest::Request_SGXGetExtendedEpidGroupIdRequest(const Request_SGXGetExtendedEpidGroupIdRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
}

void Request_SGXGetExtendedEpidGroupIdRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeout_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request_SGXGetExtendedEpidGroupIdRequest::~Request_SGXGetExtendedEpidGroupIdRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
  SharedDtor();
}

void Request_SGXGetExtendedEpidGroupIdRequest::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Request_SGXGetExtendedEpidGroupIdRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Request_SGXGetExtendedEpidGroupIdRequest& Request_SGXGetExtendedEpidGroupIdRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Request_SGXGetExtendedEpidGroupIdRequest* Request_SGXGetExtendedEpidGroupIdRequest::default_instance_ = NULL;

Request_SGXGetExtendedEpidGroupIdRequest* Request_SGXGetExtendedEpidGroupIdRequest::New(::google::protobuf::Arena* arena) const {
  Request_SGXGetExtendedEpidGroupIdRequest* n = new Request_SGXGetExtendedEpidGroupIdRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request_SGXGetExtendedEpidGroupIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
  timeout_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Request_SGXGetExtendedEpidGroupIdRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForRequest_SGXGetExtendedEpidGroupIdRequest, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 timeout = 9;
      case 9: {
        if (tag == 72) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
          set_has_timeout();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
  return false;
#undef DO_
}

void Request_SGXGetExtendedEpidGroupIdRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
  // optional uint32 timeout = 9;
  if (has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
}

int Request_SGXGetExtendedEpidGroupIdRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
  int total_size = 0;

  // optional uint32 timeout = 9;
  if (has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeout());
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_SGXGetExtendedEpidGroupIdRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Request_SGXGetExtendedEpidGroupIdRequest*>(&from));
}

void Request_SGXGetExtendedEpidGroupIdRequest::MergeFrom(const Request_SGXGetExtendedEpidGroupIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_timeout()) {
      set_timeout(from.timeout());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Request_SGXGetExtendedEpidGroupIdRequest::CopyFrom(const Request_SGXGetExtendedEpidGroupIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_SGXGetExtendedEpidGroupIdRequest::IsInitialized() const {

  return true;
}

void Request_SGXGetExtendedEpidGroupIdRequest::Swap(Request_SGXGetExtendedEpidGroupIdRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_SGXGetExtendedEpidGroupIdRequest::InternalSwap(Request_SGXGetExtendedEpidGroupIdRequest* other) {
  std::swap(timeout_, other->timeout_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Request_SGXGetExtendedEpidGroupIdRequest::GetTypeName() const {
  return "aesm.message.Request.SGXGetExtendedEpidGroupIdRequest";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForRequest_SGXSwitchExtendedEpidGroupRequest(
    Request_SGXSwitchExtendedEpidGroupRequest* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_SGXSwitchExtendedEpidGroupRequest::kXGroupIdFieldNumber;
const int Request_SGXSwitchExtendedEpidGroupRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_SGXSwitchExtendedEpidGroupRequest::Request_SGXSwitchExtendedEpidGroupRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
}

void Request_SGXSwitchExtendedEpidGroupRequest::InitAsDefaultInstance() {
}

Request_SGXSwitchExtendedEpidGroupRequest::Request_SGXSwitchExtendedEpidGroupRequest(const Request_SGXSwitchExtendedEpidGroupRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
}

void Request_SGXSwitchExtendedEpidGroupRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_group_id_ = 0u;
  timeout_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request_SGXSwitchExtendedEpidGroupRequest::~Request_SGXSwitchExtendedEpidGroupRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
  SharedDtor();
}

void Request_SGXSwitchExtendedEpidGroupRequest::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Request_SGXSwitchExtendedEpidGroupRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Request_SGXSwitchExtendedEpidGroupRequest& Request_SGXSwitchExtendedEpidGroupRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Request_SGXSwitchExtendedEpidGroupRequest* Request_SGXSwitchExtendedEpidGroupRequest::default_instance_ = NULL;

Request_SGXSwitchExtendedEpidGroupRequest* Request_SGXSwitchExtendedEpidGroupRequest::New(::google::protobuf::Arena* arena) const {
  Request_SGXSwitchExtendedEpidGroupRequest* n = new Request_SGXSwitchExtendedEpidGroupRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request_SGXSwitchExtendedEpidGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Request_SGXSwitchExtendedEpidGroupRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Request_SGXSwitchExtendedEpidGroupRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x_group_id_, timeout_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Request_SGXSwitchExtendedEpidGroupRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForRequest_SGXSwitchExtendedEpidGroupRequest, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 x_group_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_group_id_)));
          set_has_x_group_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_timeout;
        break;
      }

      // optional uint32 timeout = 9;
      case 9: {
        if (tag == 72) {
         parse_timeout:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
          set_has_timeout();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
  return false;
#undef DO_
}

void Request_SGXSwitchExtendedEpidGroupRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
  // optional uint32 x_group_id = 1;
  if (has_x_group_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->x_group_id(), output);
  }

  // optional uint32 timeout = 9;
  if (has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
}

int Request_SGXSwitchExtendedEpidGroupRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 x_group_id = 1;
    if (has_x_group_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->x_group_id());
    }

    // optional uint32 timeout = 9;
    if (has_timeout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timeout());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_SGXSwitchExtendedEpidGroupRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Request_SGXSwitchExtendedEpidGroupRequest*>(&from));
}

void Request_SGXSwitchExtendedEpidGroupRequest::MergeFrom(const Request_SGXSwitchExtendedEpidGroupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x_group_id()) {
      set_x_group_id(from.x_group_id());
    }
    if (from.has_timeout()) {
      set_timeout(from.timeout());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Request_SGXSwitchExtendedEpidGroupRequest::CopyFrom(const Request_SGXSwitchExtendedEpidGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_SGXSwitchExtendedEpidGroupRequest::IsInitialized() const {

  return true;
}

void Request_SGXSwitchExtendedEpidGroupRequest::Swap(Request_SGXSwitchExtendedEpidGroupRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_SGXSwitchExtendedEpidGroupRequest::InternalSwap(Request_SGXSwitchExtendedEpidGroupRequest* other) {
  std::swap(x_group_id_, other->x_group_id_);
  std::swap(timeout_, other->timeout_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Request_SGXSwitchExtendedEpidGroupRequest::GetTypeName() const {
  return "aesm.message.Request.SGXSwitchExtendedEpidGroupRequest";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForRequest_SGXRegisterRequest(
    Request_SGXRegisterRequest* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_SGXRegisterRequest::kBufFieldNumber;
const int Request_SGXRegisterRequest::kDataTypeFieldNumber;
const int Request_SGXRegisterRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_SGXRegisterRequest::Request_SGXRegisterRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.SGXRegisterRequest)
}

void Request_SGXRegisterRequest::InitAsDefaultInstance() {
}

Request_SGXRegisterRequest::Request_SGXRegisterRequest(const Request_SGXRegisterRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.SGXRegisterRequest)
}

void Request_SGXRegisterRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_type_ = 0u;
  timeout_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request_SGXRegisterRequest::~Request_SGXRegisterRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.SGXRegisterRequest)
  SharedDtor();
}

void Request_SGXRegisterRequest::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Request_SGXRegisterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Request_SGXRegisterRequest& Request_SGXRegisterRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Request_SGXRegisterRequest* Request_SGXRegisterRequest::default_instance_ = NULL;

Request_SGXRegisterRequest* Request_SGXRegisterRequest::New(::google::protobuf::Arena* arena) const {
  Request_SGXRegisterRequest* n = new Request_SGXRegisterRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request_SGXRegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.SGXRegisterRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Request_SGXRegisterRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Request_SGXRegisterRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(data_type_, timeout_);
    if (has_buf()) {
      buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Request_SGXRegisterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForRequest_SGXRegisterRequest, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Request.SGXRegisterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes buf = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buf()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_data_type;
        break;
      }

      // required uint32 data_type = 2;
      case 2: {
        if (tag == 16) {
         parse_data_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_type_)));
          set_has_data_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_timeout;
        break;
      }

      // optional uint32 timeout = 9;
      case 9: {
        if (tag == 72) {
         parse_timeout:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
          set_has_timeout();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.SGXRegisterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.SGXRegisterRequest)
  return false;
#undef DO_
}

void Request_SGXRegisterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.SGXRegisterRequest)
  // required bytes buf = 1;
  if (has_buf()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->buf(), output);
  }

  // required uint32 data_type = 2;
  if (has_data_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->data_type(), output);
  }

  // optional uint32 timeout = 9;
  if (has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.SGXRegisterRequest)
}

int Request_SGXRegisterRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:aesm.message.Request.SGXRegisterRequest)
  int total_size = 0;

  if (has_buf()) {
    // required bytes buf = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->buf());
  }

  if (has_data_type()) {
    // required uint32 data_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_type());
  }

  return total_size;
}
int Request_SGXRegisterRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.SGXRegisterRequest)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required bytes buf = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->buf());

    // required uint32 data_type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional uint32 timeout = 9;
  if (has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeout());
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_SGXRegisterRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Request_SGXRegisterRequest*>(&from));
}

void Request_SGXRegisterRequest::MergeFrom(const Request_SGXRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.SGXRegisterRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buf()) {
      set_has_buf();
      buf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buf_);
    }
    if (from.has_data_type()) {
      set_data_type(from.data_type());
    }
    if (from.has_timeout()) {
      set_timeout(from.timeout());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Request_SGXRegisterRequest::CopyFrom(const Request_SGXRegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.SGXRegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_SGXRegisterRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Request_SGXRegisterRequest::Swap(Request_SGXRegisterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_SGXRegisterRequest::InternalSwap(Request_SGXRegisterRequest* other) {
  buf_.Swap(&other->buf_);
  std::swap(data_type_, other->data_type_);
  std::swap(timeout_, other->timeout_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Request_SGXRegisterRequest::GetTypeName() const {
  return "aesm.message.Request.SGXRegisterRequest";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForRequest_InitQuoteExRequest(
    Request_InitQuoteExRequest* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_InitQuoteExRequest::kAttKeyIdFieldNumber;
const int Request_InitQuoteExRequest::kBPubKeyIdFieldNumber;
const int Request_InitQuoteExRequest::kBufSizeFieldNumber;
const int Request_InitQuoteExRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_InitQuoteExRequest::Request_InitQuoteExRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.InitQuoteExRequest)
}

void Request_InitQuoteExRequest::InitAsDefaultInstance() {
}

Request_InitQuoteExRequest::Request_InitQuoteExRequest(const Request_InitQuoteExRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.InitQuoteExRequest)
}

void Request_InitQuoteExRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  att_key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  b_pub_key_id_ = false;
  buf_size_ = GOOGLE_ULONGLONG(0);
  timeout_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request_InitQuoteExRequest::~Request_InitQuoteExRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.InitQuoteExRequest)
  SharedDtor();
}

void Request_InitQuoteExRequest::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  att_key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Request_InitQuoteExRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Request_InitQuoteExRequest& Request_InitQuoteExRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Request_InitQuoteExRequest* Request_InitQuoteExRequest::default_instance_ = NULL;

Request_InitQuoteExRequest* Request_InitQuoteExRequest::New(::google::protobuf::Arena* arena) const {
  Request_InitQuoteExRequest* n = new Request_InitQuoteExRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request_InitQuoteExRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.InitQuoteExRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Request_InitQuoteExRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Request_InitQuoteExRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(buf_size_, timeout_);
    if (has_att_key_id()) {
      att_key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Request_InitQuoteExRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForRequest_InitQuoteExRequest, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Request.InitQuoteExRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes att_key_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_att_key_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_b_pub_key_id;
        break;
      }

      // required bool b_pub_key_id = 3;
      case 3: {
        if (tag == 24) {
         parse_b_pub_key_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &b_pub_key_id_)));
          set_has_b_pub_key_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_buf_size;
        break;
      }

      // optional uint64 buf_size = 4;
      case 4: {
        if (tag == 32) {
         parse_buf_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &buf_size_)));
          set_has_buf_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_timeout;
        break;
      }

      // optional uint32 timeout = 9;
      case 9: {
        if (tag == 72) {
         parse_timeout:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
          set_has_timeout();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.InitQuoteExRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.InitQuoteExRequest)
  return false;
#undef DO_
}

void Request_InitQuoteExRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.InitQuoteExRequest)
  // optional bytes att_key_id = 1;
  if (has_att_key_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->att_key_id(), output);
  }

  // required bool b_pub_key_id = 3;
  if (has_b_pub_key_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->b_pub_key_id(), output);
  }

  // optional uint64 buf_size = 4;
  if (has_buf_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->buf_size(), output);
  }

  // optional uint32 timeout = 9;
  if (has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.InitQuoteExRequest)
}

int Request_InitQuoteExRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.InitQuoteExRequest)
  int total_size = 0;

  // required bool b_pub_key_id = 3;
  if (has_b_pub_key_id()) {
    total_size += 1 + 1;
  }
  if (_has_bits_[0 / 32] & 13u) {
    // optional bytes att_key_id = 1;
    if (has_att_key_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->att_key_id());
    }

    // optional uint64 buf_size = 4;
    if (has_buf_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->buf_size());
    }

    // optional uint32 timeout = 9;
    if (has_timeout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timeout());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_InitQuoteExRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Request_InitQuoteExRequest*>(&from));
}

void Request_InitQuoteExRequest::MergeFrom(const Request_InitQuoteExRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.InitQuoteExRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_att_key_id()) {
      set_has_att_key_id();
      att_key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.att_key_id_);
    }
    if (from.has_b_pub_key_id()) {
      set_b_pub_key_id(from.b_pub_key_id());
    }
    if (from.has_buf_size()) {
      set_buf_size(from.buf_size());
    }
    if (from.has_timeout()) {
      set_timeout(from.timeout());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Request_InitQuoteExRequest::CopyFrom(const Request_InitQuoteExRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.InitQuoteExRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_InitQuoteExRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  return true;
}

void Request_InitQuoteExRequest::Swap(Request_InitQuoteExRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_InitQuoteExRequest::InternalSwap(Request_InitQuoteExRequest* other) {
  att_key_id_.Swap(&other->att_key_id_);
  std::swap(b_pub_key_id_, other->b_pub_key_id_);
  std::swap(buf_size_, other->buf_size_);
  std::swap(timeout_, other->timeout_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Request_InitQuoteExRequest::GetTypeName() const {
  return "aesm.message.Request.InitQuoteExRequest";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForRequest_SelectAttKeyIDRequest(
    Request_SelectAttKeyIDRequest* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_SelectAttKeyIDRequest::kAttKeyIdListFieldNumber;
const int Request_SelectAttKeyIDRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_SelectAttKeyIDRequest::Request_SelectAttKeyIDRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.SelectAttKeyIDRequest)
}

void Request_SelectAttKeyIDRequest::InitAsDefaultInstance() {
}

Request_SelectAttKeyIDRequest::Request_SelectAttKeyIDRequest(const Request_SelectAttKeyIDRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.SelectAttKeyIDRequest)
}

void Request_SelectAttKeyIDRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  att_key_id_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeout_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request_SelectAttKeyIDRequest::~Request_SelectAttKeyIDRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.SelectAttKeyIDRequest)
  SharedDtor();
}

void Request_SelectAttKeyIDRequest::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  att_key_id_list_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Request_SelectAttKeyIDRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Request_SelectAttKeyIDRequest& Request_SelectAttKeyIDRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Request_SelectAttKeyIDRequest* Request_SelectAttKeyIDRequest::default_instance_ = NULL;

Request_SelectAttKeyIDRequest* Request_SelectAttKeyIDRequest::New(::google::protobuf::Arena* arena) const {
  Request_SelectAttKeyIDRequest* n = new Request_SelectAttKeyIDRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request_SelectAttKeyIDRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.SelectAttKeyIDRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_att_key_id_list()) {
      att_key_id_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    timeout_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Request_SelectAttKeyIDRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForRequest_SelectAttKeyIDRequest, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Request.SelectAttKeyIDRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes att_key_id_list = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_att_key_id_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_timeout;
        break;
      }

      // optional uint32 timeout = 2;
      case 2: {
        if (tag == 16) {
         parse_timeout:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
          set_has_timeout();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.SelectAttKeyIDRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.SelectAttKeyIDRequest)
  return false;
#undef DO_
}

void Request_SelectAttKeyIDRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.SelectAttKeyIDRequest)
  // optional bytes att_key_id_list = 1;
  if (has_att_key_id_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->att_key_id_list(), output);
  }

  // optional uint32 timeout = 2;
  if (has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->timeout(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.SelectAttKeyIDRequest)
}

int Request_SelectAttKeyIDRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.SelectAttKeyIDRequest)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes att_key_id_list = 1;
    if (has_att_key_id_list()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->att_key_id_list());
    }

    // optional uint32 timeout = 2;
    if (has_timeout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timeout());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_SelectAttKeyIDRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Request_SelectAttKeyIDRequest*>(&from));
}

void Request_SelectAttKeyIDRequest::MergeFrom(const Request_SelectAttKeyIDRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.SelectAttKeyIDRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_att_key_id_list()) {
      set_has_att_key_id_list();
      att_key_id_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.att_key_id_list_);
    }
    if (from.has_timeout()) {
      set_timeout(from.timeout());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Request_SelectAttKeyIDRequest::CopyFrom(const Request_SelectAttKeyIDRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.SelectAttKeyIDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_SelectAttKeyIDRequest::IsInitialized() const {

  return true;
}

void Request_SelectAttKeyIDRequest::Swap(Request_SelectAttKeyIDRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_SelectAttKeyIDRequest::InternalSwap(Request_SelectAttKeyIDRequest* other) {
  att_key_id_list_.Swap(&other->att_key_id_list_);
  std::swap(timeout_, other->timeout_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Request_SelectAttKeyIDRequest::GetTypeName() const {
  return "aesm.message.Request.SelectAttKeyIDRequest";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForRequest_GetQuoteSizeExRequest(
    Request_GetQuoteSizeExRequest* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_GetQuoteSizeExRequest::kAttKeyIdFieldNumber;
const int Request_GetQuoteSizeExRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_GetQuoteSizeExRequest::Request_GetQuoteSizeExRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.GetQuoteSizeExRequest)
}

void Request_GetQuoteSizeExRequest::InitAsDefaultInstance() {
}

Request_GetQuoteSizeExRequest::Request_GetQuoteSizeExRequest(const Request_GetQuoteSizeExRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.GetQuoteSizeExRequest)
}

void Request_GetQuoteSizeExRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  att_key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeout_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request_GetQuoteSizeExRequest::~Request_GetQuoteSizeExRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.GetQuoteSizeExRequest)
  SharedDtor();
}

void Request_GetQuoteSizeExRequest::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  att_key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Request_GetQuoteSizeExRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Request_GetQuoteSizeExRequest& Request_GetQuoteSizeExRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Request_GetQuoteSizeExRequest* Request_GetQuoteSizeExRequest::default_instance_ = NULL;

Request_GetQuoteSizeExRequest* Request_GetQuoteSizeExRequest::New(::google::protobuf::Arena* arena) const {
  Request_GetQuoteSizeExRequest* n = new Request_GetQuoteSizeExRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request_GetQuoteSizeExRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.GetQuoteSizeExRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_att_key_id()) {
      att_key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    timeout_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Request_GetQuoteSizeExRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForRequest_GetQuoteSizeExRequest, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Request.GetQuoteSizeExRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes att_key_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_att_key_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_timeout;
        break;
      }

      // optional uint32 timeout = 9;
      case 9: {
        if (tag == 72) {
         parse_timeout:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
          set_has_timeout();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.GetQuoteSizeExRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.GetQuoteSizeExRequest)
  return false;
#undef DO_
}

void Request_GetQuoteSizeExRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.GetQuoteSizeExRequest)
  // optional bytes att_key_id = 1;
  if (has_att_key_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->att_key_id(), output);
  }

  // optional uint32 timeout = 9;
  if (has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.GetQuoteSizeExRequest)
}

int Request_GetQuoteSizeExRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.GetQuoteSizeExRequest)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes att_key_id = 1;
    if (has_att_key_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->att_key_id());
    }

    // optional uint32 timeout = 9;
    if (has_timeout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timeout());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_GetQuoteSizeExRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Request_GetQuoteSizeExRequest*>(&from));
}

void Request_GetQuoteSizeExRequest::MergeFrom(const Request_GetQuoteSizeExRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.GetQuoteSizeExRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_att_key_id()) {
      set_has_att_key_id();
      att_key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.att_key_id_);
    }
    if (from.has_timeout()) {
      set_timeout(from.timeout());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Request_GetQuoteSizeExRequest::CopyFrom(const Request_GetQuoteSizeExRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.GetQuoteSizeExRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_GetQuoteSizeExRequest::IsInitialized() const {

  return true;
}

void Request_GetQuoteSizeExRequest::Swap(Request_GetQuoteSizeExRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_GetQuoteSizeExRequest::InternalSwap(Request_GetQuoteSizeExRequest* other) {
  att_key_id_.Swap(&other->att_key_id_);
  std::swap(timeout_, other->timeout_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Request_GetQuoteSizeExRequest::GetTypeName() const {
  return "aesm.message.Request.GetQuoteSizeExRequest";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForRequest_GetQuoteExRequest(
    Request_GetQuoteExRequest* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_GetQuoteExRequest::kReportFieldNumber;
const int Request_GetQuoteExRequest::kAttKeyIdFieldNumber;
const int Request_GetQuoteExRequest::kQeReportInfoFieldNumber;
const int Request_GetQuoteExRequest::kBufSizeFieldNumber;
const int Request_GetQuoteExRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_GetQuoteExRequest::Request_GetQuoteExRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.GetQuoteExRequest)
}

void Request_GetQuoteExRequest::InitAsDefaultInstance() {
}

Request_GetQuoteExRequest::Request_GetQuoteExRequest(const Request_GetQuoteExRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.GetQuoteExRequest)
}

void Request_GetQuoteExRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  report_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  att_key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qe_report_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buf_size_ = 0u;
  timeout_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request_GetQuoteExRequest::~Request_GetQuoteExRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.GetQuoteExRequest)
  SharedDtor();
}

void Request_GetQuoteExRequest::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  report_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  att_key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qe_report_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Request_GetQuoteExRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Request_GetQuoteExRequest& Request_GetQuoteExRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Request_GetQuoteExRequest* Request_GetQuoteExRequest::default_instance_ = NULL;

Request_GetQuoteExRequest* Request_GetQuoteExRequest::New(::google::protobuf::Arena* arena) const {
  Request_GetQuoteExRequest* n = new Request_GetQuoteExRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request_GetQuoteExRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.GetQuoteExRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Request_GetQuoteExRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Request_GetQuoteExRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(buf_size_, timeout_);
    if (has_report()) {
      report_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_att_key_id()) {
      att_key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_qe_report_info()) {
      qe_report_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Request_GetQuoteExRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForRequest_GetQuoteExRequest, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Request.GetQuoteExRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes report = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_report()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_att_key_id;
        break;
      }

      // optional bytes att_key_id = 2;
      case 2: {
        if (tag == 18) {
         parse_att_key_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_att_key_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_qe_report_info;
        break;
      }

      // optional bytes qe_report_info = 3;
      case 3: {
        if (tag == 26) {
         parse_qe_report_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_qe_report_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_buf_size;
        break;
      }

      // required uint32 buf_size = 4;
      case 4: {
        if (tag == 32) {
         parse_buf_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buf_size_)));
          set_has_buf_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_timeout;
        break;
      }

      // optional uint32 timeout = 9;
      case 9: {
        if (tag == 72) {
         parse_timeout:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
          set_has_timeout();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.GetQuoteExRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.GetQuoteExRequest)
  return false;
#undef DO_
}

void Request_GetQuoteExRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.GetQuoteExRequest)
  // required bytes report = 1;
  if (has_report()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->report(), output);
  }

  // optional bytes att_key_id = 2;
  if (has_att_key_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->att_key_id(), output);
  }

  // optional bytes qe_report_info = 3;
  if (has_qe_report_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->qe_report_info(), output);
  }

  // required uint32 buf_size = 4;
  if (has_buf_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->buf_size(), output);
  }

  // optional uint32 timeout = 9;
  if (has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.GetQuoteExRequest)
}

int Request_GetQuoteExRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:aesm.message.Request.GetQuoteExRequest)
  int total_size = 0;

  if (has_report()) {
    // required bytes report = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->report());
  }

  if (has_buf_size()) {
    // required uint32 buf_size = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->buf_size());
  }

  return total_size;
}
int Request_GetQuoteExRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.GetQuoteExRequest)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000009) ^ 0x00000009) == 0) {  // All required fields are present.
    // required bytes report = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->report());

    // required uint32 buf_size = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->buf_size());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[1 / 32] & 22u) {
    // optional bytes att_key_id = 2;
    if (has_att_key_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->att_key_id());
    }

    // optional bytes qe_report_info = 3;
    if (has_qe_report_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->qe_report_info());
    }

    // optional uint32 timeout = 9;
    if (has_timeout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timeout());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_GetQuoteExRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Request_GetQuoteExRequest*>(&from));
}

void Request_GetQuoteExRequest::MergeFrom(const Request_GetQuoteExRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.GetQuoteExRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_report()) {
      set_has_report();
      report_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.report_);
    }
    if (from.has_att_key_id()) {
      set_has_att_key_id();
      att_key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.att_key_id_);
    }
    if (from.has_qe_report_info()) {
      set_has_qe_report_info();
      qe_report_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qe_report_info_);
    }
    if (from.has_buf_size()) {
      set_buf_size(from.buf_size());
    }
    if (from.has_timeout()) {
      set_timeout(from.timeout());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Request_GetQuoteExRequest::CopyFrom(const Request_GetQuoteExRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.GetQuoteExRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_GetQuoteExRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000009) != 0x00000009) return false;

  return true;
}

void Request_GetQuoteExRequest::Swap(Request_GetQuoteExRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_GetQuoteExRequest::InternalSwap(Request_GetQuoteExRequest* other) {
  report_.Swap(&other->report_);
  att_key_id_.Swap(&other->att_key_id_);
  qe_report_info_.Swap(&other->qe_report_info_);
  std::swap(buf_size_, other->buf_size_);
  std::swap(timeout_, other->timeout_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Request_GetQuoteExRequest::GetTypeName() const {
  return "aesm.message.Request.GetQuoteExRequest";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForRequest_GetSupportedAttKeyIDNumRequest(
    Request_GetSupportedAttKeyIDNumRequest* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_GetSupportedAttKeyIDNumRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_GetSupportedAttKeyIDNumRequest::Request_GetSupportedAttKeyIDNumRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.GetSupportedAttKeyIDNumRequest)
}

void Request_GetSupportedAttKeyIDNumRequest::InitAsDefaultInstance() {
}

Request_GetSupportedAttKeyIDNumRequest::Request_GetSupportedAttKeyIDNumRequest(const Request_GetSupportedAttKeyIDNumRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.GetSupportedAttKeyIDNumRequest)
}

void Request_GetSupportedAttKeyIDNumRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeout_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request_GetSupportedAttKeyIDNumRequest::~Request_GetSupportedAttKeyIDNumRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.GetSupportedAttKeyIDNumRequest)
  SharedDtor();
}

void Request_GetSupportedAttKeyIDNumRequest::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Request_GetSupportedAttKeyIDNumRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Request_GetSupportedAttKeyIDNumRequest& Request_GetSupportedAttKeyIDNumRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Request_GetSupportedAttKeyIDNumRequest* Request_GetSupportedAttKeyIDNumRequest::default_instance_ = NULL;

Request_GetSupportedAttKeyIDNumRequest* Request_GetSupportedAttKeyIDNumRequest::New(::google::protobuf::Arena* arena) const {
  Request_GetSupportedAttKeyIDNumRequest* n = new Request_GetSupportedAttKeyIDNumRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request_GetSupportedAttKeyIDNumRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.GetSupportedAttKeyIDNumRequest)
  timeout_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Request_GetSupportedAttKeyIDNumRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForRequest_GetSupportedAttKeyIDNumRequest, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Request.GetSupportedAttKeyIDNumRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 timeout = 9;
      case 9: {
        if (tag == 72) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
          set_has_timeout();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.GetSupportedAttKeyIDNumRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.GetSupportedAttKeyIDNumRequest)
  return false;
#undef DO_
}

void Request_GetSupportedAttKeyIDNumRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.GetSupportedAttKeyIDNumRequest)
  // optional uint32 timeout = 9;
  if (has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.GetSupportedAttKeyIDNumRequest)
}

int Request_GetSupportedAttKeyIDNumRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.GetSupportedAttKeyIDNumRequest)
  int total_size = 0;

  // optional uint32 timeout = 9;
  if (has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeout());
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_GetSupportedAttKeyIDNumRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Request_GetSupportedAttKeyIDNumRequest*>(&from));
}

void Request_GetSupportedAttKeyIDNumRequest::MergeFrom(const Request_GetSupportedAttKeyIDNumRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.GetSupportedAttKeyIDNumRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_timeout()) {
      set_timeout(from.timeout());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Request_GetSupportedAttKeyIDNumRequest::CopyFrom(const Request_GetSupportedAttKeyIDNumRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.GetSupportedAttKeyIDNumRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_GetSupportedAttKeyIDNumRequest::IsInitialized() const {

  return true;
}

void Request_GetSupportedAttKeyIDNumRequest::Swap(Request_GetSupportedAttKeyIDNumRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_GetSupportedAttKeyIDNumRequest::InternalSwap(Request_GetSupportedAttKeyIDNumRequest* other) {
  std::swap(timeout_, other->timeout_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Request_GetSupportedAttKeyIDNumRequest::GetTypeName() const {
  return "aesm.message.Request.GetSupportedAttKeyIDNumRequest";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForRequest_GetSupportedAttKeyIDsRequest(
    Request_GetSupportedAttKeyIDsRequest* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_GetSupportedAttKeyIDsRequest::kBufSizeFieldNumber;
const int Request_GetSupportedAttKeyIDsRequest::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_GetSupportedAttKeyIDsRequest::Request_GetSupportedAttKeyIDsRequest()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request.GetSupportedAttKeyIDsRequest)
}

void Request_GetSupportedAttKeyIDsRequest::InitAsDefaultInstance() {
}

Request_GetSupportedAttKeyIDsRequest::Request_GetSupportedAttKeyIDsRequest(const Request_GetSupportedAttKeyIDsRequest& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request.GetSupportedAttKeyIDsRequest)
}

void Request_GetSupportedAttKeyIDsRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  buf_size_ = 0u;
  timeout_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request_GetSupportedAttKeyIDsRequest::~Request_GetSupportedAttKeyIDsRequest() {
  // @@protoc_insertion_point(destructor:aesm.message.Request.GetSupportedAttKeyIDsRequest)
  SharedDtor();
}

void Request_GetSupportedAttKeyIDsRequest::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Request_GetSupportedAttKeyIDsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Request_GetSupportedAttKeyIDsRequest& Request_GetSupportedAttKeyIDsRequest::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Request_GetSupportedAttKeyIDsRequest* Request_GetSupportedAttKeyIDsRequest::default_instance_ = NULL;

Request_GetSupportedAttKeyIDsRequest* Request_GetSupportedAttKeyIDsRequest::New(::google::protobuf::Arena* arena) const {
  Request_GetSupportedAttKeyIDsRequest* n = new Request_GetSupportedAttKeyIDsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request_GetSupportedAttKeyIDsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request.GetSupportedAttKeyIDsRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Request_GetSupportedAttKeyIDsRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Request_GetSupportedAttKeyIDsRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(buf_size_, timeout_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Request_GetSupportedAttKeyIDsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForRequest_GetSupportedAttKeyIDsRequest, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Request.GetSupportedAttKeyIDsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 buf_size = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buf_size_)));
          set_has_buf_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_timeout;
        break;
      }

      // optional uint32 timeout = 9;
      case 9: {
        if (tag == 72) {
         parse_timeout:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeout_)));
          set_has_timeout();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request.GetSupportedAttKeyIDsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request.GetSupportedAttKeyIDsRequest)
  return false;
#undef DO_
}

void Request_GetSupportedAttKeyIDsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request.GetSupportedAttKeyIDsRequest)
  // required uint32 buf_size = 1;
  if (has_buf_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->buf_size(), output);
  }

  // optional uint32 timeout = 9;
  if (has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->timeout(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Request.GetSupportedAttKeyIDsRequest)
}

int Request_GetSupportedAttKeyIDsRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request.GetSupportedAttKeyIDsRequest)
  int total_size = 0;

  // required uint32 buf_size = 1;
  if (has_buf_size()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->buf_size());
  }
  // optional uint32 timeout = 9;
  if (has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeout());
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_GetSupportedAttKeyIDsRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Request_GetSupportedAttKeyIDsRequest*>(&from));
}

void Request_GetSupportedAttKeyIDsRequest::MergeFrom(const Request_GetSupportedAttKeyIDsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request.GetSupportedAttKeyIDsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buf_size()) {
      set_buf_size(from.buf_size());
    }
    if (from.has_timeout()) {
      set_timeout(from.timeout());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Request_GetSupportedAttKeyIDsRequest::CopyFrom(const Request_GetSupportedAttKeyIDsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request.GetSupportedAttKeyIDsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request_GetSupportedAttKeyIDsRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Request_GetSupportedAttKeyIDsRequest::Swap(Request_GetSupportedAttKeyIDsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_GetSupportedAttKeyIDsRequest::InternalSwap(Request_GetSupportedAttKeyIDsRequest* other) {
  std::swap(buf_size_, other->buf_size_);
  std::swap(timeout_, other->timeout_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Request_GetSupportedAttKeyIDsRequest::GetTypeName() const {
  return "aesm.message.Request.GetSupportedAttKeyIDsRequest";
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kInitQuoteReqFieldNumber;
const int Request::kGetQuoteReqFieldNumber;
const int Request::kGetLicTokenReqFieldNumber;
const int Request::kReportErrReqFieldNumber;
const int Request::kGetWhiteListSizeReqFieldNumber;
const int Request::kGetWhiteListReqFieldNumber;
const int Request::kSgxGetExtendedEpidGroupIdReqFieldNumber;
const int Request::kSgxSwitchExtendedEpidGroupReqFieldNumber;
const int Request::kSgxRegisterReqFieldNumber;
const int Request::kInitQuoteExReqFieldNumber;
const int Request::kGetQuoteSizeExReqFieldNumber;
const int Request::kGetQuoteExReqFieldNumber;
const int Request::kCheckUpdateStatusReqFieldNumber;
const int Request::kSelectAttKeyIDReqFieldNumber;
const int Request::kGetSupportedAttKeyIDNumReqFieldNumber;
const int Request::kGetSupportedAttKeyIDsReqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Request)
}

void Request::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  initquotereq_ = const_cast< ::aesm::message::Request_InitQuoteRequest*>(
      ::aesm::message::Request_InitQuoteRequest::internal_default_instance());
#else
  initquotereq_ = const_cast< ::aesm::message::Request_InitQuoteRequest*>(&::aesm::message::Request_InitQuoteRequest::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  getquotereq_ = const_cast< ::aesm::message::Request_GetQuoteRequest*>(
      ::aesm::message::Request_GetQuoteRequest::internal_default_instance());
#else
  getquotereq_ = const_cast< ::aesm::message::Request_GetQuoteRequest*>(&::aesm::message::Request_GetQuoteRequest::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  getlictokenreq_ = const_cast< ::aesm::message::Request_GetLaunchTokenRequest*>(
      ::aesm::message::Request_GetLaunchTokenRequest::internal_default_instance());
#else
  getlictokenreq_ = const_cast< ::aesm::message::Request_GetLaunchTokenRequest*>(&::aesm::message::Request_GetLaunchTokenRequest::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  reporterrreq_ = const_cast< ::aesm::message::Request_ReportAttestationErrorRequest*>(
      ::aesm::message::Request_ReportAttestationErrorRequest::internal_default_instance());
#else
  reporterrreq_ = const_cast< ::aesm::message::Request_ReportAttestationErrorRequest*>(&::aesm::message::Request_ReportAttestationErrorRequest::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  getwhitelistsizereq_ = const_cast< ::aesm::message::Request_GetWhiteListSizeRequest*>(
      ::aesm::message::Request_GetWhiteListSizeRequest::internal_default_instance());
#else
  getwhitelistsizereq_ = const_cast< ::aesm::message::Request_GetWhiteListSizeRequest*>(&::aesm::message::Request_GetWhiteListSizeRequest::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  getwhitelistreq_ = const_cast< ::aesm::message::Request_GetWhiteListRequest*>(
      ::aesm::message::Request_GetWhiteListRequest::internal_default_instance());
#else
  getwhitelistreq_ = const_cast< ::aesm::message::Request_GetWhiteListRequest*>(&::aesm::message::Request_GetWhiteListRequest::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  sgxgetextendedepidgroupidreq_ = const_cast< ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest*>(
      ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest::internal_default_instance());
#else
  sgxgetextendedepidgroupidreq_ = const_cast< ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest*>(&::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  sgxswitchextendedepidgroupreq_ = const_cast< ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest*>(
      ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest::internal_default_instance());
#else
  sgxswitchextendedepidgroupreq_ = const_cast< ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest*>(&::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  sgxregisterreq_ = const_cast< ::aesm::message::Request_SGXRegisterRequest*>(
      ::aesm::message::Request_SGXRegisterRequest::internal_default_instance());
#else
  sgxregisterreq_ = const_cast< ::aesm::message::Request_SGXRegisterRequest*>(&::aesm::message::Request_SGXRegisterRequest::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  initquoteexreq_ = const_cast< ::aesm::message::Request_InitQuoteExRequest*>(
      ::aesm::message::Request_InitQuoteExRequest::internal_default_instance());
#else
  initquoteexreq_ = const_cast< ::aesm::message::Request_InitQuoteExRequest*>(&::aesm::message::Request_InitQuoteExRequest::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  getquotesizeexreq_ = const_cast< ::aesm::message::Request_GetQuoteSizeExRequest*>(
      ::aesm::message::Request_GetQuoteSizeExRequest::internal_default_instance());
#else
  getquotesizeexreq_ = const_cast< ::aesm::message::Request_GetQuoteSizeExRequest*>(&::aesm::message::Request_GetQuoteSizeExRequest::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  getquoteexreq_ = const_cast< ::aesm::message::Request_GetQuoteExRequest*>(
      ::aesm::message::Request_GetQuoteExRequest::internal_default_instance());
#else
  getquoteexreq_ = const_cast< ::aesm::message::Request_GetQuoteExRequest*>(&::aesm::message::Request_GetQuoteExRequest::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  checkupdatestatusreq_ = const_cast< ::aesm::message::Request_CheckUpdateStatusRequest*>(
      ::aesm::message::Request_CheckUpdateStatusRequest::internal_default_instance());
#else
  checkupdatestatusreq_ = const_cast< ::aesm::message::Request_CheckUpdateStatusRequest*>(&::aesm::message::Request_CheckUpdateStatusRequest::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  selectattkeyidreq_ = const_cast< ::aesm::message::Request_SelectAttKeyIDRequest*>(
      ::aesm::message::Request_SelectAttKeyIDRequest::internal_default_instance());
#else
  selectattkeyidreq_ = const_cast< ::aesm::message::Request_SelectAttKeyIDRequest*>(&::aesm::message::Request_SelectAttKeyIDRequest::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  getsupportedattkeyidnumreq_ = const_cast< ::aesm::message::Request_GetSupportedAttKeyIDNumRequest*>(
      ::aesm::message::Request_GetSupportedAttKeyIDNumRequest::internal_default_instance());
#else
  getsupportedattkeyidnumreq_ = const_cast< ::aesm::message::Request_GetSupportedAttKeyIDNumRequest*>(&::aesm::message::Request_GetSupportedAttKeyIDNumRequest::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  getsupportedattkeyidsreq_ = const_cast< ::aesm::message::Request_GetSupportedAttKeyIDsRequest*>(
      ::aesm::message::Request_GetSupportedAttKeyIDsRequest::internal_default_instance());
#else
  getsupportedattkeyidsreq_ = const_cast< ::aesm::message::Request_GetSupportedAttKeyIDsRequest*>(&::aesm::message::Request_GetSupportedAttKeyIDsRequest::default_instance());
#endif
}

Request::Request(const Request& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Request)
}

void Request::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  initquotereq_ = NULL;
  getquotereq_ = NULL;
  getlictokenreq_ = NULL;
  reporterrreq_ = NULL;
  getwhitelistsizereq_ = NULL;
  getwhitelistreq_ = NULL;
  sgxgetextendedepidgroupidreq_ = NULL;
  sgxswitchextendedepidgroupreq_ = NULL;
  sgxregisterreq_ = NULL;
  initquoteexreq_ = NULL;
  getquotesizeexreq_ = NULL;
  getquoteexreq_ = NULL;
  checkupdatestatusreq_ = NULL;
  selectattkeyidreq_ = NULL;
  getsupportedattkeyidnumreq_ = NULL;
  getsupportedattkeyidsreq_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:aesm.message.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete initquotereq_;
    delete getquotereq_;
    delete getlictokenreq_;
    delete reporterrreq_;
    delete getwhitelistsizereq_;
    delete getwhitelistreq_;
    delete sgxgetextendedepidgroupidreq_;
    delete sgxswitchextendedepidgroupreq_;
    delete sgxregisterreq_;
    delete initquoteexreq_;
    delete getquotesizeexreq_;
    delete getquoteexreq_;
    delete checkupdatestatusreq_;
    delete selectattkeyidreq_;
    delete getsupportedattkeyidnumreq_;
    delete getsupportedattkeyidsreq_;
  }
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Request& Request::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Request* Request::default_instance_ = NULL;

Request* Request::New(::google::protobuf::Arena* arena) const {
  Request* n = new Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Request)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_initquotereq()) {
      if (initquotereq_ != NULL) initquotereq_->::aesm::message::Request_InitQuoteRequest::Clear();
    }
    if (has_getquotereq()) {
      if (getquotereq_ != NULL) getquotereq_->::aesm::message::Request_GetQuoteRequest::Clear();
    }
    if (has_getlictokenreq()) {
      if (getlictokenreq_ != NULL) getlictokenreq_->::aesm::message::Request_GetLaunchTokenRequest::Clear();
    }
    if (has_reporterrreq()) {
      if (reporterrreq_ != NULL) reporterrreq_->::aesm::message::Request_ReportAttestationErrorRequest::Clear();
    }
    if (has_getwhitelistsizereq()) {
      if (getwhitelistsizereq_ != NULL) getwhitelistsizereq_->::aesm::message::Request_GetWhiteListSizeRequest::Clear();
    }
    if (has_getwhitelistreq()) {
      if (getwhitelistreq_ != NULL) getwhitelistreq_->::aesm::message::Request_GetWhiteListRequest::Clear();
    }
    if (has_sgxgetextendedepidgroupidreq()) {
      if (sgxgetextendedepidgroupidreq_ != NULL) sgxgetextendedepidgroupidreq_->::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest::Clear();
    }
    if (has_sgxswitchextendedepidgroupreq()) {
      if (sgxswitchextendedepidgroupreq_ != NULL) sgxswitchextendedepidgroupreq_->::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    if (has_sgxregisterreq()) {
      if (sgxregisterreq_ != NULL) sgxregisterreq_->::aesm::message::Request_SGXRegisterRequest::Clear();
    }
    if (has_initquoteexreq()) {
      if (initquoteexreq_ != NULL) initquoteexreq_->::aesm::message::Request_InitQuoteExRequest::Clear();
    }
    if (has_getquotesizeexreq()) {
      if (getquotesizeexreq_ != NULL) getquotesizeexreq_->::aesm::message::Request_GetQuoteSizeExRequest::Clear();
    }
    if (has_getquoteexreq()) {
      if (getquoteexreq_ != NULL) getquoteexreq_->::aesm::message::Request_GetQuoteExRequest::Clear();
    }
    if (has_checkupdatestatusreq()) {
      if (checkupdatestatusreq_ != NULL) checkupdatestatusreq_->::aesm::message::Request_CheckUpdateStatusRequest::Clear();
    }
    if (has_selectattkeyidreq()) {
      if (selectattkeyidreq_ != NULL) selectattkeyidreq_->::aesm::message::Request_SelectAttKeyIDRequest::Clear();
    }
    if (has_getsupportedattkeyidnumreq()) {
      if (getsupportedattkeyidnumreq_ != NULL) getsupportedattkeyidnumreq_->::aesm::message::Request_GetSupportedAttKeyIDNumRequest::Clear();
    }
    if (has_getsupportedattkeyidsreq()) {
      if (getsupportedattkeyidsreq_ != NULL) getsupportedattkeyidsreq_->::aesm::message::Request_GetSupportedAttKeyIDsRequest::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForRequest, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .aesm.message.Request.InitQuoteRequest initQuoteReq = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_initquotereq()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_getQuoteReq;
        break;
      }

      // optional .aesm.message.Request.GetQuoteRequest getQuoteReq = 2;
      case 2: {
        if (tag == 18) {
         parse_getQuoteReq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getquotereq()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_getLicTokenReq;
        break;
      }

      // optional .aesm.message.Request.GetLaunchTokenRequest getLicTokenReq = 3;
      case 3: {
        if (tag == 26) {
         parse_getLicTokenReq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getlictokenreq()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_reportErrReq;
        break;
      }

      // optional .aesm.message.Request.ReportAttestationErrorRequest reportErrReq = 4;
      case 4: {
        if (tag == 34) {
         parse_reportErrReq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reporterrreq()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_getWhiteListSizeReq;
        break;
      }

      // optional .aesm.message.Request.GetWhiteListSizeRequest getWhiteListSizeReq = 10;
      case 10: {
        if (tag == 82) {
         parse_getWhiteListSizeReq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getwhitelistsizereq()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_getWhiteListReq;
        break;
      }

      // optional .aesm.message.Request.GetWhiteListRequest getWhiteListReq = 11;
      case 11: {
        if (tag == 90) {
         parse_getWhiteListReq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getwhitelistreq()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_sgxGetExtendedEpidGroupIdReq;
        break;
      }

      // optional .aesm.message.Request.SGXGetExtendedEpidGroupIdRequest sgxGetExtendedEpidGroupIdReq = 12;
      case 12: {
        if (tag == 98) {
         parse_sgxGetExtendedEpidGroupIdReq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sgxgetextendedepidgroupidreq()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_sgxSwitchExtendedEpidGroupReq;
        break;
      }

      // optional .aesm.message.Request.SGXSwitchExtendedEpidGroupRequest sgxSwitchExtendedEpidGroupReq = 13;
      case 13: {
        if (tag == 106) {
         parse_sgxSwitchExtendedEpidGroupReq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sgxswitchextendedepidgroupreq()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_sgxRegisterReq;
        break;
      }

      // optional .aesm.message.Request.SGXRegisterRequest sgxRegisterReq = 14;
      case 14: {
        if (tag == 114) {
         parse_sgxRegisterReq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sgxregisterreq()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_initQuoteExReq;
        break;
      }

      // optional .aesm.message.Request.InitQuoteExRequest initQuoteExReq = 15;
      case 15: {
        if (tag == 122) {
         parse_initQuoteExReq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_initquoteexreq()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_getQuoteSizeExReq;
        break;
      }

      // optional .aesm.message.Request.GetQuoteSizeExRequest getQuoteSizeExReq = 16;
      case 16: {
        if (tag == 130) {
         parse_getQuoteSizeExReq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getquotesizeexreq()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_getQuoteExReq;
        break;
      }

      // optional .aesm.message.Request.GetQuoteExRequest getQuoteExReq = 17;
      case 17: {
        if (tag == 138) {
         parse_getQuoteExReq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getquoteexreq()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_checkUpdateStatusReq;
        break;
      }

      // optional .aesm.message.Request.CheckUpdateStatusRequest checkUpdateStatusReq = 18;
      case 18: {
        if (tag == 146) {
         parse_checkUpdateStatusReq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_checkupdatestatusreq()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_selectAttKeyIDReq;
        break;
      }

      // optional .aesm.message.Request.SelectAttKeyIDRequest selectAttKeyIDReq = 19;
      case 19: {
        if (tag == 154) {
         parse_selectAttKeyIDReq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_selectattkeyidreq()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_getSupportedAttKeyIDNumReq;
        break;
      }

      // optional .aesm.message.Request.GetSupportedAttKeyIDNumRequest getSupportedAttKeyIDNumReq = 21;
      case 21: {
        if (tag == 170) {
         parse_getSupportedAttKeyIDNumReq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getsupportedattkeyidnumreq()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_getSupportedAttKeyIDsReq;
        break;
      }

      // optional .aesm.message.Request.GetSupportedAttKeyIDsRequest getSupportedAttKeyIDsReq = 22;
      case 22: {
        if (tag == 178) {
         parse_getSupportedAttKeyIDsReq:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getsupportedattkeyidsreq()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Request)
  // optional .aesm.message.Request.InitQuoteRequest initQuoteReq = 1;
  if (has_initquotereq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->initquotereq_, output);
  }

  // optional .aesm.message.Request.GetQuoteRequest getQuoteReq = 2;
  if (has_getquotereq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->getquotereq_, output);
  }

  // optional .aesm.message.Request.GetLaunchTokenRequest getLicTokenReq = 3;
  if (has_getlictokenreq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, *this->getlictokenreq_, output);
  }

  // optional .aesm.message.Request.ReportAttestationErrorRequest reportErrReq = 4;
  if (has_reporterrreq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, *this->reporterrreq_, output);
  }

  // optional .aesm.message.Request.GetWhiteListSizeRequest getWhiteListSizeReq = 10;
  if (has_getwhitelistsizereq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      10, *this->getwhitelistsizereq_, output);
  }

  // optional .aesm.message.Request.GetWhiteListRequest getWhiteListReq = 11;
  if (has_getwhitelistreq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      11, *this->getwhitelistreq_, output);
  }

  // optional .aesm.message.Request.SGXGetExtendedEpidGroupIdRequest sgxGetExtendedEpidGroupIdReq = 12;
  if (has_sgxgetextendedepidgroupidreq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      12, *this->sgxgetextendedepidgroupidreq_, output);
  }

  // optional .aesm.message.Request.SGXSwitchExtendedEpidGroupRequest sgxSwitchExtendedEpidGroupReq = 13;
  if (has_sgxswitchextendedepidgroupreq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      13, *this->sgxswitchextendedepidgroupreq_, output);
  }

  // optional .aesm.message.Request.SGXRegisterRequest sgxRegisterReq = 14;
  if (has_sgxregisterreq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      14, *this->sgxregisterreq_, output);
  }

  // optional .aesm.message.Request.InitQuoteExRequest initQuoteExReq = 15;
  if (has_initquoteexreq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      15, *this->initquoteexreq_, output);
  }

  // optional .aesm.message.Request.GetQuoteSizeExRequest getQuoteSizeExReq = 16;
  if (has_getquotesizeexreq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      16, *this->getquotesizeexreq_, output);
  }

  // optional .aesm.message.Request.GetQuoteExRequest getQuoteExReq = 17;
  if (has_getquoteexreq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      17, *this->getquoteexreq_, output);
  }

  // optional .aesm.message.Request.CheckUpdateStatusRequest checkUpdateStatusReq = 18;
  if (has_checkupdatestatusreq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      18, *this->checkupdatestatusreq_, output);
  }

  // optional .aesm.message.Request.SelectAttKeyIDRequest selectAttKeyIDReq = 19;
  if (has_selectattkeyidreq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      19, *this->selectattkeyidreq_, output);
  }

  // optional .aesm.message.Request.GetSupportedAttKeyIDNumRequest getSupportedAttKeyIDNumReq = 21;
  if (has_getsupportedattkeyidnumreq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      21, *this->getsupportedattkeyidnumreq_, output);
  }

  // optional .aesm.message.Request.GetSupportedAttKeyIDsRequest getSupportedAttKeyIDsReq = 22;
  if (has_getsupportedattkeyidsreq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      22, *this->getsupportedattkeyidsreq_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Request)
}

int Request::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Request)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional .aesm.message.Request.InitQuoteRequest initQuoteReq = 1;
    if (has_initquotereq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->initquotereq_);
    }

    // optional .aesm.message.Request.GetQuoteRequest getQuoteReq = 2;
    if (has_getquotereq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->getquotereq_);
    }

    // optional .aesm.message.Request.GetLaunchTokenRequest getLicTokenReq = 3;
    if (has_getlictokenreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->getlictokenreq_);
    }

    // optional .aesm.message.Request.ReportAttestationErrorRequest reportErrReq = 4;
    if (has_reporterrreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->reporterrreq_);
    }

    // optional .aesm.message.Request.GetWhiteListSizeRequest getWhiteListSizeReq = 10;
    if (has_getwhitelistsizereq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->getwhitelistsizereq_);
    }

    // optional .aesm.message.Request.GetWhiteListRequest getWhiteListReq = 11;
    if (has_getwhitelistreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->getwhitelistreq_);
    }

    // optional .aesm.message.Request.SGXGetExtendedEpidGroupIdRequest sgxGetExtendedEpidGroupIdReq = 12;
    if (has_sgxgetextendedepidgroupidreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->sgxgetextendedepidgroupidreq_);
    }

    // optional .aesm.message.Request.SGXSwitchExtendedEpidGroupRequest sgxSwitchExtendedEpidGroupReq = 13;
    if (has_sgxswitchextendedepidgroupreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->sgxswitchextendedepidgroupreq_);
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .aesm.message.Request.SGXRegisterRequest sgxRegisterReq = 14;
    if (has_sgxregisterreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->sgxregisterreq_);
    }

    // optional .aesm.message.Request.InitQuoteExRequest initQuoteExReq = 15;
    if (has_initquoteexreq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->initquoteexreq_);
    }

    // optional .aesm.message.Request.GetQuoteSizeExRequest getQuoteSizeExReq = 16;
    if (has_getquotesizeexreq()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->getquotesizeexreq_);
    }

    // optional .aesm.message.Request.GetQuoteExRequest getQuoteExReq = 17;
    if (has_getquoteexreq()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->getquoteexreq_);
    }

    // optional .aesm.message.Request.CheckUpdateStatusRequest checkUpdateStatusReq = 18;
    if (has_checkupdatestatusreq()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->checkupdatestatusreq_);
    }

    // optional .aesm.message.Request.SelectAttKeyIDRequest selectAttKeyIDReq = 19;
    if (has_selectattkeyidreq()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->selectattkeyidreq_);
    }

    // optional .aesm.message.Request.GetSupportedAttKeyIDNumRequest getSupportedAttKeyIDNumReq = 21;
    if (has_getsupportedattkeyidnumreq()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->getsupportedattkeyidnumreq_);
    }

    // optional .aesm.message.Request.GetSupportedAttKeyIDsRequest getSupportedAttKeyIDsReq = 22;
    if (has_getsupportedattkeyidsreq()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->getsupportedattkeyidsreq_);
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Request*>(&from));
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Request)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_initquotereq()) {
      mutable_initquotereq()->::aesm::message::Request_InitQuoteRequest::MergeFrom(from.initquotereq());
    }
    if (from.has_getquotereq()) {
      mutable_getquotereq()->::aesm::message::Request_GetQuoteRequest::MergeFrom(from.getquotereq());
    }
    if (from.has_getlictokenreq()) {
      mutable_getlictokenreq()->::aesm::message::Request_GetLaunchTokenRequest::MergeFrom(from.getlictokenreq());
    }
    if (from.has_reporterrreq()) {
      mutable_reporterrreq()->::aesm::message::Request_ReportAttestationErrorRequest::MergeFrom(from.reporterrreq());
    }
    if (from.has_getwhitelistsizereq()) {
      mutable_getwhitelistsizereq()->::aesm::message::Request_GetWhiteListSizeRequest::MergeFrom(from.getwhitelistsizereq());
    }
    if (from.has_getwhitelistreq()) {
      mutable_getwhitelistreq()->::aesm::message::Request_GetWhiteListRequest::MergeFrom(from.getwhitelistreq());
    }
    if (from.has_sgxgetextendedepidgroupidreq()) {
      mutable_sgxgetextendedepidgroupidreq()->::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest::MergeFrom(from.sgxgetextendedepidgroupidreq());
    }
    if (from.has_sgxswitchextendedepidgroupreq()) {
      mutable_sgxswitchextendedepidgroupreq()->::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest::MergeFrom(from.sgxswitchextendedepidgroupreq());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_sgxregisterreq()) {
      mutable_sgxregisterreq()->::aesm::message::Request_SGXRegisterRequest::MergeFrom(from.sgxregisterreq());
    }
    if (from.has_initquoteexreq()) {
      mutable_initquoteexreq()->::aesm::message::Request_InitQuoteExRequest::MergeFrom(from.initquoteexreq());
    }
    if (from.has_getquotesizeexreq()) {
      mutable_getquotesizeexreq()->::aesm::message::Request_GetQuoteSizeExRequest::MergeFrom(from.getquotesizeexreq());
    }
    if (from.has_getquoteexreq()) {
      mutable_getquoteexreq()->::aesm::message::Request_GetQuoteExRequest::MergeFrom(from.getquoteexreq());
    }
    if (from.has_checkupdatestatusreq()) {
      mutable_checkupdatestatusreq()->::aesm::message::Request_CheckUpdateStatusRequest::MergeFrom(from.checkupdatestatusreq());
    }
    if (from.has_selectattkeyidreq()) {
      mutable_selectattkeyidreq()->::aesm::message::Request_SelectAttKeyIDRequest::MergeFrom(from.selectattkeyidreq());
    }
    if (from.has_getsupportedattkeyidnumreq()) {
      mutable_getsupportedattkeyidnumreq()->::aesm::message::Request_GetSupportedAttKeyIDNumRequest::MergeFrom(from.getsupportedattkeyidnumreq());
    }
    if (from.has_getsupportedattkeyidsreq()) {
      mutable_getsupportedattkeyidsreq()->::aesm::message::Request_GetSupportedAttKeyIDsRequest::MergeFrom(from.getsupportedattkeyidsreq());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {

  if (has_getquotereq()) {
    if (!this->getquotereq_->IsInitialized()) return false;
  }
  if (has_getlictokenreq()) {
    if (!this->getlictokenreq_->IsInitialized()) return false;
  }
  if (has_reporterrreq()) {
    if (!this->reporterrreq_->IsInitialized()) return false;
  }
  if (has_sgxregisterreq()) {
    if (!this->sgxregisterreq_->IsInitialized()) return false;
  }
  if (has_initquoteexreq()) {
    if (!this->initquoteexreq_->IsInitialized()) return false;
  }
  if (has_getquoteexreq()) {
    if (!this->getquoteexreq_->IsInitialized()) return false;
  }
  if (has_checkupdatestatusreq()) {
    if (!this->checkupdatestatusreq_->IsInitialized()) return false;
  }
  if (has_getsupportedattkeyidsreq()) {
    if (!this->getsupportedattkeyidsreq_->IsInitialized()) return false;
  }
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  std::swap(initquotereq_, other->initquotereq_);
  std::swap(getquotereq_, other->getquotereq_);
  std::swap(getlictokenreq_, other->getlictokenreq_);
  std::swap(reporterrreq_, other->reporterrreq_);
  std::swap(getwhitelistsizereq_, other->getwhitelistsizereq_);
  std::swap(getwhitelistreq_, other->getwhitelistreq_);
  std::swap(sgxgetextendedepidgroupidreq_, other->sgxgetextendedepidgroupidreq_);
  std::swap(sgxswitchextendedepidgroupreq_, other->sgxswitchextendedepidgroupreq_);
  std::swap(sgxregisterreq_, other->sgxregisterreq_);
  std::swap(initquoteexreq_, other->initquoteexreq_);
  std::swap(getquotesizeexreq_, other->getquotesizeexreq_);
  std::swap(getquoteexreq_, other->getquoteexreq_);
  std::swap(checkupdatestatusreq_, other->checkupdatestatusreq_);
  std::swap(selectattkeyidreq_, other->selectattkeyidreq_);
  std::swap(getsupportedattkeyidnumreq_, other->getsupportedattkeyidnumreq_);
  std::swap(getsupportedattkeyidsreq_, other->getsupportedattkeyidsreq_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Request::GetTypeName() const {
  return "aesm.message.Request";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Request_InitQuoteRequest

// optional uint32 timeout = 9;
bool Request_InitQuoteRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request_InitQuoteRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000001u;
}
void Request_InitQuoteRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request_InitQuoteRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
 ::google::protobuf::uint32 Request_InitQuoteRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.InitQuoteRequest.timeout)
  return timeout_;
}
 void Request_InitQuoteRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.InitQuoteRequest.timeout)
}

// -------------------------------------------------------------------

// Request_GetQuoteRequest

// required bytes report = 1;
bool Request_GetQuoteRequest::has_report() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request_GetQuoteRequest::set_has_report() {
  _has_bits_[0] |= 0x00000001u;
}
void Request_GetQuoteRequest::clear_has_report() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request_GetQuoteRequest::clear_report() {
  report_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_report();
}
 const ::std::string& Request_GetQuoteRequest::report() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetQuoteRequest.report)
  return report_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_GetQuoteRequest::set_report(const ::std::string& value) {
  set_has_report();
  report_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetQuoteRequest.report)
}
 void Request_GetQuoteRequest::set_report(const char* value) {
  set_has_report();
  report_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.GetQuoteRequest.report)
}
 void Request_GetQuoteRequest::set_report(const void* value, size_t size) {
  set_has_report();
  report_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.GetQuoteRequest.report)
}
 ::std::string* Request_GetQuoteRequest::mutable_report() {
  set_has_report();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.GetQuoteRequest.report)
  return report_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request_GetQuoteRequest::release_report() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.GetQuoteRequest.report)
  clear_has_report();
  return report_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_GetQuoteRequest::set_allocated_report(::std::string* report) {
  if (report != NULL) {
    set_has_report();
  } else {
    clear_has_report();
  }
  report_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), report);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.GetQuoteRequest.report)
}

// required uint32 quote_type = 2;
bool Request_GetQuoteRequest::has_quote_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Request_GetQuoteRequest::set_has_quote_type() {
  _has_bits_[0] |= 0x00000002u;
}
void Request_GetQuoteRequest::clear_has_quote_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void Request_GetQuoteRequest::clear_quote_type() {
  quote_type_ = 0u;
  clear_has_quote_type();
}
 ::google::protobuf::uint32 Request_GetQuoteRequest::quote_type() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetQuoteRequest.quote_type)
  return quote_type_;
}
 void Request_GetQuoteRequest::set_quote_type(::google::protobuf::uint32 value) {
  set_has_quote_type();
  quote_type_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetQuoteRequest.quote_type)
}

// required bytes spid = 3;
bool Request_GetQuoteRequest::has_spid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Request_GetQuoteRequest::set_has_spid() {
  _has_bits_[0] |= 0x00000004u;
}
void Request_GetQuoteRequest::clear_has_spid() {
  _has_bits_[0] &= ~0x00000004u;
}
void Request_GetQuoteRequest::clear_spid() {
  spid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_spid();
}
 const ::std::string& Request_GetQuoteRequest::spid() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetQuoteRequest.spid)
  return spid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_GetQuoteRequest::set_spid(const ::std::string& value) {
  set_has_spid();
  spid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetQuoteRequest.spid)
}
 void Request_GetQuoteRequest::set_spid(const char* value) {
  set_has_spid();
  spid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.GetQuoteRequest.spid)
}
 void Request_GetQuoteRequest::set_spid(const void* value, size_t size) {
  set_has_spid();
  spid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.GetQuoteRequest.spid)
}
 ::std::string* Request_GetQuoteRequest::mutable_spid() {
  set_has_spid();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.GetQuoteRequest.spid)
  return spid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request_GetQuoteRequest::release_spid() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.GetQuoteRequest.spid)
  clear_has_spid();
  return spid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_GetQuoteRequest::set_allocated_spid(::std::string* spid) {
  if (spid != NULL) {
    set_has_spid();
  } else {
    clear_has_spid();
  }
  spid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), spid);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.GetQuoteRequest.spid)
}

// optional bytes nonce = 4;
bool Request_GetQuoteRequest::has_nonce() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Request_GetQuoteRequest::set_has_nonce() {
  _has_bits_[0] |= 0x00000008u;
}
void Request_GetQuoteRequest::clear_has_nonce() {
  _has_bits_[0] &= ~0x00000008u;
}
void Request_GetQuoteRequest::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nonce();
}
 const ::std::string& Request_GetQuoteRequest::nonce() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetQuoteRequest.nonce)
  return nonce_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_GetQuoteRequest::set_nonce(const ::std::string& value) {
  set_has_nonce();
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetQuoteRequest.nonce)
}
 void Request_GetQuoteRequest::set_nonce(const char* value) {
  set_has_nonce();
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.GetQuoteRequest.nonce)
}
 void Request_GetQuoteRequest::set_nonce(const void* value, size_t size) {
  set_has_nonce();
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.GetQuoteRequest.nonce)
}
 ::std::string* Request_GetQuoteRequest::mutable_nonce() {
  set_has_nonce();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.GetQuoteRequest.nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request_GetQuoteRequest::release_nonce() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.GetQuoteRequest.nonce)
  clear_has_nonce();
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_GetQuoteRequest::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    set_has_nonce();
  } else {
    clear_has_nonce();
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.GetQuoteRequest.nonce)
}

// optional bytes sig_rl = 5;
bool Request_GetQuoteRequest::has_sig_rl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Request_GetQuoteRequest::set_has_sig_rl() {
  _has_bits_[0] |= 0x00000010u;
}
void Request_GetQuoteRequest::clear_has_sig_rl() {
  _has_bits_[0] &= ~0x00000010u;
}
void Request_GetQuoteRequest::clear_sig_rl() {
  sig_rl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sig_rl();
}
 const ::std::string& Request_GetQuoteRequest::sig_rl() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetQuoteRequest.sig_rl)
  return sig_rl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_GetQuoteRequest::set_sig_rl(const ::std::string& value) {
  set_has_sig_rl();
  sig_rl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetQuoteRequest.sig_rl)
}
 void Request_GetQuoteRequest::set_sig_rl(const char* value) {
  set_has_sig_rl();
  sig_rl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.GetQuoteRequest.sig_rl)
}
 void Request_GetQuoteRequest::set_sig_rl(const void* value, size_t size) {
  set_has_sig_rl();
  sig_rl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.GetQuoteRequest.sig_rl)
}
 ::std::string* Request_GetQuoteRequest::mutable_sig_rl() {
  set_has_sig_rl();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.GetQuoteRequest.sig_rl)
  return sig_rl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request_GetQuoteRequest::release_sig_rl() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.GetQuoteRequest.sig_rl)
  clear_has_sig_rl();
  return sig_rl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_GetQuoteRequest::set_allocated_sig_rl(::std::string* sig_rl) {
  if (sig_rl != NULL) {
    set_has_sig_rl();
  } else {
    clear_has_sig_rl();
  }
  sig_rl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sig_rl);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.GetQuoteRequest.sig_rl)
}

// required uint32 buf_size = 6;
bool Request_GetQuoteRequest::has_buf_size() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Request_GetQuoteRequest::set_has_buf_size() {
  _has_bits_[0] |= 0x00000020u;
}
void Request_GetQuoteRequest::clear_has_buf_size() {
  _has_bits_[0] &= ~0x00000020u;
}
void Request_GetQuoteRequest::clear_buf_size() {
  buf_size_ = 0u;
  clear_has_buf_size();
}
 ::google::protobuf::uint32 Request_GetQuoteRequest::buf_size() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetQuoteRequest.buf_size)
  return buf_size_;
}
 void Request_GetQuoteRequest::set_buf_size(::google::protobuf::uint32 value) {
  set_has_buf_size();
  buf_size_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetQuoteRequest.buf_size)
}

// optional bool qe_report = 7;
bool Request_GetQuoteRequest::has_qe_report() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Request_GetQuoteRequest::set_has_qe_report() {
  _has_bits_[0] |= 0x00000040u;
}
void Request_GetQuoteRequest::clear_has_qe_report() {
  _has_bits_[0] &= ~0x00000040u;
}
void Request_GetQuoteRequest::clear_qe_report() {
  qe_report_ = false;
  clear_has_qe_report();
}
 bool Request_GetQuoteRequest::qe_report() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetQuoteRequest.qe_report)
  return qe_report_;
}
 void Request_GetQuoteRequest::set_qe_report(bool value) {
  set_has_qe_report();
  qe_report_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetQuoteRequest.qe_report)
}

// optional uint32 timeout = 9;
bool Request_GetQuoteRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Request_GetQuoteRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000080u;
}
void Request_GetQuoteRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000080u;
}
void Request_GetQuoteRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
 ::google::protobuf::uint32 Request_GetQuoteRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetQuoteRequest.timeout)
  return timeout_;
}
 void Request_GetQuoteRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetQuoteRequest.timeout)
}

// -------------------------------------------------------------------

// Request_GetLaunchTokenRequest

// required bytes mr_enclave = 1;
bool Request_GetLaunchTokenRequest::has_mr_enclave() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request_GetLaunchTokenRequest::set_has_mr_enclave() {
  _has_bits_[0] |= 0x00000001u;
}
void Request_GetLaunchTokenRequest::clear_has_mr_enclave() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request_GetLaunchTokenRequest::clear_mr_enclave() {
  mr_enclave_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mr_enclave();
}
 const ::std::string& Request_GetLaunchTokenRequest::mr_enclave() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetLaunchTokenRequest.mr_enclave)
  return mr_enclave_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_GetLaunchTokenRequest::set_mr_enclave(const ::std::string& value) {
  set_has_mr_enclave();
  mr_enclave_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetLaunchTokenRequest.mr_enclave)
}
 void Request_GetLaunchTokenRequest::set_mr_enclave(const char* value) {
  set_has_mr_enclave();
  mr_enclave_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.GetLaunchTokenRequest.mr_enclave)
}
 void Request_GetLaunchTokenRequest::set_mr_enclave(const void* value, size_t size) {
  set_has_mr_enclave();
  mr_enclave_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.GetLaunchTokenRequest.mr_enclave)
}
 ::std::string* Request_GetLaunchTokenRequest::mutable_mr_enclave() {
  set_has_mr_enclave();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.GetLaunchTokenRequest.mr_enclave)
  return mr_enclave_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request_GetLaunchTokenRequest::release_mr_enclave() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.GetLaunchTokenRequest.mr_enclave)
  clear_has_mr_enclave();
  return mr_enclave_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_GetLaunchTokenRequest::set_allocated_mr_enclave(::std::string* mr_enclave) {
  if (mr_enclave != NULL) {
    set_has_mr_enclave();
  } else {
    clear_has_mr_enclave();
  }
  mr_enclave_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mr_enclave);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.GetLaunchTokenRequest.mr_enclave)
}

// required bytes mr_signer = 2;
bool Request_GetLaunchTokenRequest::has_mr_signer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Request_GetLaunchTokenRequest::set_has_mr_signer() {
  _has_bits_[0] |= 0x00000002u;
}
void Request_GetLaunchTokenRequest::clear_has_mr_signer() {
  _has_bits_[0] &= ~0x00000002u;
}
void Request_GetLaunchTokenRequest::clear_mr_signer() {
  mr_signer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mr_signer();
}
 const ::std::string& Request_GetLaunchTokenRequest::mr_signer() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetLaunchTokenRequest.mr_signer)
  return mr_signer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_GetLaunchTokenRequest::set_mr_signer(const ::std::string& value) {
  set_has_mr_signer();
  mr_signer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetLaunchTokenRequest.mr_signer)
}
 void Request_GetLaunchTokenRequest::set_mr_signer(const char* value) {
  set_has_mr_signer();
  mr_signer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.GetLaunchTokenRequest.mr_signer)
}
 void Request_GetLaunchTokenRequest::set_mr_signer(const void* value, size_t size) {
  set_has_mr_signer();
  mr_signer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.GetLaunchTokenRequest.mr_signer)
}
 ::std::string* Request_GetLaunchTokenRequest::mutable_mr_signer() {
  set_has_mr_signer();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.GetLaunchTokenRequest.mr_signer)
  return mr_signer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request_GetLaunchTokenRequest::release_mr_signer() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.GetLaunchTokenRequest.mr_signer)
  clear_has_mr_signer();
  return mr_signer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_GetLaunchTokenRequest::set_allocated_mr_signer(::std::string* mr_signer) {
  if (mr_signer != NULL) {
    set_has_mr_signer();
  } else {
    clear_has_mr_signer();
  }
  mr_signer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mr_signer);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.GetLaunchTokenRequest.mr_signer)
}

// required bytes se_attributes = 3;
bool Request_GetLaunchTokenRequest::has_se_attributes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Request_GetLaunchTokenRequest::set_has_se_attributes() {
  _has_bits_[0] |= 0x00000004u;
}
void Request_GetLaunchTokenRequest::clear_has_se_attributes() {
  _has_bits_[0] &= ~0x00000004u;
}
void Request_GetLaunchTokenRequest::clear_se_attributes() {
  se_attributes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_se_attributes();
}
 const ::std::string& Request_GetLaunchTokenRequest::se_attributes() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetLaunchTokenRequest.se_attributes)
  return se_attributes_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_GetLaunchTokenRequest::set_se_attributes(const ::std::string& value) {
  set_has_se_attributes();
  se_attributes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetLaunchTokenRequest.se_attributes)
}
 void Request_GetLaunchTokenRequest::set_se_attributes(const char* value) {
  set_has_se_attributes();
  se_attributes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.GetLaunchTokenRequest.se_attributes)
}
 void Request_GetLaunchTokenRequest::set_se_attributes(const void* value, size_t size) {
  set_has_se_attributes();
  se_attributes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.GetLaunchTokenRequest.se_attributes)
}
 ::std::string* Request_GetLaunchTokenRequest::mutable_se_attributes() {
  set_has_se_attributes();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.GetLaunchTokenRequest.se_attributes)
  return se_attributes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request_GetLaunchTokenRequest::release_se_attributes() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.GetLaunchTokenRequest.se_attributes)
  clear_has_se_attributes();
  return se_attributes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_GetLaunchTokenRequest::set_allocated_se_attributes(::std::string* se_attributes) {
  if (se_attributes != NULL) {
    set_has_se_attributes();
  } else {
    clear_has_se_attributes();
  }
  se_attributes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), se_attributes);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.GetLaunchTokenRequest.se_attributes)
}

// optional uint32 timeout = 9;
bool Request_GetLaunchTokenRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Request_GetLaunchTokenRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000008u;
}
void Request_GetLaunchTokenRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000008u;
}
void Request_GetLaunchTokenRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
 ::google::protobuf::uint32 Request_GetLaunchTokenRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetLaunchTokenRequest.timeout)
  return timeout_;
}
 void Request_GetLaunchTokenRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetLaunchTokenRequest.timeout)
}

// -------------------------------------------------------------------

// Request_ReportAttestationErrorRequest

// required bytes platform_info = 1;
bool Request_ReportAttestationErrorRequest::has_platform_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request_ReportAttestationErrorRequest::set_has_platform_info() {
  _has_bits_[0] |= 0x00000001u;
}
void Request_ReportAttestationErrorRequest::clear_has_platform_info() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request_ReportAttestationErrorRequest::clear_platform_info() {
  platform_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platform_info();
}
 const ::std::string& Request_ReportAttestationErrorRequest::platform_info() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.ReportAttestationErrorRequest.platform_info)
  return platform_info_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_ReportAttestationErrorRequest::set_platform_info(const ::std::string& value) {
  set_has_platform_info();
  platform_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.ReportAttestationErrorRequest.platform_info)
}
 void Request_ReportAttestationErrorRequest::set_platform_info(const char* value) {
  set_has_platform_info();
  platform_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.ReportAttestationErrorRequest.platform_info)
}
 void Request_ReportAttestationErrorRequest::set_platform_info(const void* value, size_t size) {
  set_has_platform_info();
  platform_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.ReportAttestationErrorRequest.platform_info)
}
 ::std::string* Request_ReportAttestationErrorRequest::mutable_platform_info() {
  set_has_platform_info();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.ReportAttestationErrorRequest.platform_info)
  return platform_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request_ReportAttestationErrorRequest::release_platform_info() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.ReportAttestationErrorRequest.platform_info)
  clear_has_platform_info();
  return platform_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_ReportAttestationErrorRequest::set_allocated_platform_info(::std::string* platform_info) {
  if (platform_info != NULL) {
    set_has_platform_info();
  } else {
    clear_has_platform_info();
  }
  platform_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform_info);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.ReportAttestationErrorRequest.platform_info)
}

// required uint32 attestation_error_code = 2;
bool Request_ReportAttestationErrorRequest::has_attestation_error_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Request_ReportAttestationErrorRequest::set_has_attestation_error_code() {
  _has_bits_[0] |= 0x00000002u;
}
void Request_ReportAttestationErrorRequest::clear_has_attestation_error_code() {
  _has_bits_[0] &= ~0x00000002u;
}
void Request_ReportAttestationErrorRequest::clear_attestation_error_code() {
  attestation_error_code_ = 0u;
  clear_has_attestation_error_code();
}
 ::google::protobuf::uint32 Request_ReportAttestationErrorRequest::attestation_error_code() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.ReportAttestationErrorRequest.attestation_error_code)
  return attestation_error_code_;
}
 void Request_ReportAttestationErrorRequest::set_attestation_error_code(::google::protobuf::uint32 value) {
  set_has_attestation_error_code();
  attestation_error_code_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.ReportAttestationErrorRequest.attestation_error_code)
}

// required uint32 update_info_size = 3;
bool Request_ReportAttestationErrorRequest::has_update_info_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Request_ReportAttestationErrorRequest::set_has_update_info_size() {
  _has_bits_[0] |= 0x00000004u;
}
void Request_ReportAttestationErrorRequest::clear_has_update_info_size() {
  _has_bits_[0] &= ~0x00000004u;
}
void Request_ReportAttestationErrorRequest::clear_update_info_size() {
  update_info_size_ = 0u;
  clear_has_update_info_size();
}
 ::google::protobuf::uint32 Request_ReportAttestationErrorRequest::update_info_size() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.ReportAttestationErrorRequest.update_info_size)
  return update_info_size_;
}
 void Request_ReportAttestationErrorRequest::set_update_info_size(::google::protobuf::uint32 value) {
  set_has_update_info_size();
  update_info_size_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.ReportAttestationErrorRequest.update_info_size)
}

// optional uint32 timeout = 9;
bool Request_ReportAttestationErrorRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Request_ReportAttestationErrorRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000008u;
}
void Request_ReportAttestationErrorRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000008u;
}
void Request_ReportAttestationErrorRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
 ::google::protobuf::uint32 Request_ReportAttestationErrorRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.ReportAttestationErrorRequest.timeout)
  return timeout_;
}
 void Request_ReportAttestationErrorRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.ReportAttestationErrorRequest.timeout)
}

// -------------------------------------------------------------------

// Request_CheckUpdateStatusRequest

// optional bytes platform_info = 1;
bool Request_CheckUpdateStatusRequest::has_platform_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request_CheckUpdateStatusRequest::set_has_platform_info() {
  _has_bits_[0] |= 0x00000001u;
}
void Request_CheckUpdateStatusRequest::clear_has_platform_info() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request_CheckUpdateStatusRequest::clear_platform_info() {
  platform_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platform_info();
}
 const ::std::string& Request_CheckUpdateStatusRequest::platform_info() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.CheckUpdateStatusRequest.platform_info)
  return platform_info_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_CheckUpdateStatusRequest::set_platform_info(const ::std::string& value) {
  set_has_platform_info();
  platform_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.CheckUpdateStatusRequest.platform_info)
}
 void Request_CheckUpdateStatusRequest::set_platform_info(const char* value) {
  set_has_platform_info();
  platform_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.CheckUpdateStatusRequest.platform_info)
}
 void Request_CheckUpdateStatusRequest::set_platform_info(const void* value, size_t size) {
  set_has_platform_info();
  platform_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.CheckUpdateStatusRequest.platform_info)
}
 ::std::string* Request_CheckUpdateStatusRequest::mutable_platform_info() {
  set_has_platform_info();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.CheckUpdateStatusRequest.platform_info)
  return platform_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request_CheckUpdateStatusRequest::release_platform_info() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.CheckUpdateStatusRequest.platform_info)
  clear_has_platform_info();
  return platform_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_CheckUpdateStatusRequest::set_allocated_platform_info(::std::string* platform_info) {
  if (platform_info != NULL) {
    set_has_platform_info();
  } else {
    clear_has_platform_info();
  }
  platform_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform_info);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.CheckUpdateStatusRequest.platform_info)
}

// required uint32 update_info_size = 2;
bool Request_CheckUpdateStatusRequest::has_update_info_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Request_CheckUpdateStatusRequest::set_has_update_info_size() {
  _has_bits_[0] |= 0x00000002u;
}
void Request_CheckUpdateStatusRequest::clear_has_update_info_size() {
  _has_bits_[0] &= ~0x00000002u;
}
void Request_CheckUpdateStatusRequest::clear_update_info_size() {
  update_info_size_ = 0u;
  clear_has_update_info_size();
}
 ::google::protobuf::uint32 Request_CheckUpdateStatusRequest::update_info_size() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.CheckUpdateStatusRequest.update_info_size)
  return update_info_size_;
}
 void Request_CheckUpdateStatusRequest::set_update_info_size(::google::protobuf::uint32 value) {
  set_has_update_info_size();
  update_info_size_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.CheckUpdateStatusRequest.update_info_size)
}

// required uint32 config = 3;
bool Request_CheckUpdateStatusRequest::has_config() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Request_CheckUpdateStatusRequest::set_has_config() {
  _has_bits_[0] |= 0x00000004u;
}
void Request_CheckUpdateStatusRequest::clear_has_config() {
  _has_bits_[0] &= ~0x00000004u;
}
void Request_CheckUpdateStatusRequest::clear_config() {
  config_ = 0u;
  clear_has_config();
}
 ::google::protobuf::uint32 Request_CheckUpdateStatusRequest::config() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.CheckUpdateStatusRequest.config)
  return config_;
}
 void Request_CheckUpdateStatusRequest::set_config(::google::protobuf::uint32 value) {
  set_has_config();
  config_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.CheckUpdateStatusRequest.config)
}

// optional uint32 timeout = 9;
bool Request_CheckUpdateStatusRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Request_CheckUpdateStatusRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000008u;
}
void Request_CheckUpdateStatusRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000008u;
}
void Request_CheckUpdateStatusRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
 ::google::protobuf::uint32 Request_CheckUpdateStatusRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.CheckUpdateStatusRequest.timeout)
  return timeout_;
}
 void Request_CheckUpdateStatusRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.CheckUpdateStatusRequest.timeout)
}

// -------------------------------------------------------------------

// Request_GetWhiteListSizeRequest

// optional uint32 timeout = 9;
bool Request_GetWhiteListSizeRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request_GetWhiteListSizeRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000001u;
}
void Request_GetWhiteListSizeRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request_GetWhiteListSizeRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
 ::google::protobuf::uint32 Request_GetWhiteListSizeRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetWhiteListSizeRequest.timeout)
  return timeout_;
}
 void Request_GetWhiteListSizeRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetWhiteListSizeRequest.timeout)
}

// -------------------------------------------------------------------

// Request_GetWhiteListRequest

// optional uint32 white_list_size = 1;
bool Request_GetWhiteListRequest::has_white_list_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request_GetWhiteListRequest::set_has_white_list_size() {
  _has_bits_[0] |= 0x00000001u;
}
void Request_GetWhiteListRequest::clear_has_white_list_size() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request_GetWhiteListRequest::clear_white_list_size() {
  white_list_size_ = 0u;
  clear_has_white_list_size();
}
 ::google::protobuf::uint32 Request_GetWhiteListRequest::white_list_size() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetWhiteListRequest.white_list_size)
  return white_list_size_;
}
 void Request_GetWhiteListRequest::set_white_list_size(::google::protobuf::uint32 value) {
  set_has_white_list_size();
  white_list_size_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetWhiteListRequest.white_list_size)
}

// optional uint32 timeout = 9;
bool Request_GetWhiteListRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Request_GetWhiteListRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000002u;
}
void Request_GetWhiteListRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000002u;
}
void Request_GetWhiteListRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
 ::google::protobuf::uint32 Request_GetWhiteListRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetWhiteListRequest.timeout)
  return timeout_;
}
 void Request_GetWhiteListRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetWhiteListRequest.timeout)
}

// -------------------------------------------------------------------

// Request_SGXGetExtendedEpidGroupIdRequest

// optional uint32 timeout = 9;
bool Request_SGXGetExtendedEpidGroupIdRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request_SGXGetExtendedEpidGroupIdRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000001u;
}
void Request_SGXGetExtendedEpidGroupIdRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request_SGXGetExtendedEpidGroupIdRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
 ::google::protobuf::uint32 Request_SGXGetExtendedEpidGroupIdRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest.timeout)
  return timeout_;
}
 void Request_SGXGetExtendedEpidGroupIdRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.SGXGetExtendedEpidGroupIdRequest.timeout)
}

// -------------------------------------------------------------------

// Request_SGXSwitchExtendedEpidGroupRequest

// optional uint32 x_group_id = 1;
bool Request_SGXSwitchExtendedEpidGroupRequest::has_x_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request_SGXSwitchExtendedEpidGroupRequest::set_has_x_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Request_SGXSwitchExtendedEpidGroupRequest::clear_has_x_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request_SGXSwitchExtendedEpidGroupRequest::clear_x_group_id() {
  x_group_id_ = 0u;
  clear_has_x_group_id();
}
 ::google::protobuf::uint32 Request_SGXSwitchExtendedEpidGroupRequest::x_group_id() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest.x_group_id)
  return x_group_id_;
}
 void Request_SGXSwitchExtendedEpidGroupRequest::set_x_group_id(::google::protobuf::uint32 value) {
  set_has_x_group_id();
  x_group_id_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest.x_group_id)
}

// optional uint32 timeout = 9;
bool Request_SGXSwitchExtendedEpidGroupRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Request_SGXSwitchExtendedEpidGroupRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000002u;
}
void Request_SGXSwitchExtendedEpidGroupRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000002u;
}
void Request_SGXSwitchExtendedEpidGroupRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
 ::google::protobuf::uint32 Request_SGXSwitchExtendedEpidGroupRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest.timeout)
  return timeout_;
}
 void Request_SGXSwitchExtendedEpidGroupRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.SGXSwitchExtendedEpidGroupRequest.timeout)
}

// -------------------------------------------------------------------

// Request_SGXRegisterRequest

// required bytes buf = 1;
bool Request_SGXRegisterRequest::has_buf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request_SGXRegisterRequest::set_has_buf() {
  _has_bits_[0] |= 0x00000001u;
}
void Request_SGXRegisterRequest::clear_has_buf() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request_SGXRegisterRequest::clear_buf() {
  buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buf();
}
 const ::std::string& Request_SGXRegisterRequest::buf() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.SGXRegisterRequest.buf)
  return buf_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_SGXRegisterRequest::set_buf(const ::std::string& value) {
  set_has_buf();
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.SGXRegisterRequest.buf)
}
 void Request_SGXRegisterRequest::set_buf(const char* value) {
  set_has_buf();
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.SGXRegisterRequest.buf)
}
 void Request_SGXRegisterRequest::set_buf(const void* value, size_t size) {
  set_has_buf();
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.SGXRegisterRequest.buf)
}
 ::std::string* Request_SGXRegisterRequest::mutable_buf() {
  set_has_buf();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.SGXRegisterRequest.buf)
  return buf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request_SGXRegisterRequest::release_buf() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.SGXRegisterRequest.buf)
  clear_has_buf();
  return buf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_SGXRegisterRequest::set_allocated_buf(::std::string* buf) {
  if (buf != NULL) {
    set_has_buf();
  } else {
    clear_has_buf();
  }
  buf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buf);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.SGXRegisterRequest.buf)
}

// required uint32 data_type = 2;
bool Request_SGXRegisterRequest::has_data_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Request_SGXRegisterRequest::set_has_data_type() {
  _has_bits_[0] |= 0x00000002u;
}
void Request_SGXRegisterRequest::clear_has_data_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void Request_SGXRegisterRequest::clear_data_type() {
  data_type_ = 0u;
  clear_has_data_type();
}
 ::google::protobuf::uint32 Request_SGXRegisterRequest::data_type() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.SGXRegisterRequest.data_type)
  return data_type_;
}
 void Request_SGXRegisterRequest::set_data_type(::google::protobuf::uint32 value) {
  set_has_data_type();
  data_type_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.SGXRegisterRequest.data_type)
}

// optional uint32 timeout = 9;
bool Request_SGXRegisterRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Request_SGXRegisterRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000004u;
}
void Request_SGXRegisterRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000004u;
}
void Request_SGXRegisterRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
 ::google::protobuf::uint32 Request_SGXRegisterRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.SGXRegisterRequest.timeout)
  return timeout_;
}
 void Request_SGXRegisterRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.SGXRegisterRequest.timeout)
}

// -------------------------------------------------------------------

// Request_InitQuoteExRequest

// optional bytes att_key_id = 1;
bool Request_InitQuoteExRequest::has_att_key_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request_InitQuoteExRequest::set_has_att_key_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Request_InitQuoteExRequest::clear_has_att_key_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request_InitQuoteExRequest::clear_att_key_id() {
  att_key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_att_key_id();
}
 const ::std::string& Request_InitQuoteExRequest::att_key_id() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.InitQuoteExRequest.att_key_id)
  return att_key_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_InitQuoteExRequest::set_att_key_id(const ::std::string& value) {
  set_has_att_key_id();
  att_key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.InitQuoteExRequest.att_key_id)
}
 void Request_InitQuoteExRequest::set_att_key_id(const char* value) {
  set_has_att_key_id();
  att_key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.InitQuoteExRequest.att_key_id)
}
 void Request_InitQuoteExRequest::set_att_key_id(const void* value, size_t size) {
  set_has_att_key_id();
  att_key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.InitQuoteExRequest.att_key_id)
}
 ::std::string* Request_InitQuoteExRequest::mutable_att_key_id() {
  set_has_att_key_id();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.InitQuoteExRequest.att_key_id)
  return att_key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request_InitQuoteExRequest::release_att_key_id() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.InitQuoteExRequest.att_key_id)
  clear_has_att_key_id();
  return att_key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_InitQuoteExRequest::set_allocated_att_key_id(::std::string* att_key_id) {
  if (att_key_id != NULL) {
    set_has_att_key_id();
  } else {
    clear_has_att_key_id();
  }
  att_key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), att_key_id);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.InitQuoteExRequest.att_key_id)
}

// required bool b_pub_key_id = 3;
bool Request_InitQuoteExRequest::has_b_pub_key_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Request_InitQuoteExRequest::set_has_b_pub_key_id() {
  _has_bits_[0] |= 0x00000002u;
}
void Request_InitQuoteExRequest::clear_has_b_pub_key_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void Request_InitQuoteExRequest::clear_b_pub_key_id() {
  b_pub_key_id_ = false;
  clear_has_b_pub_key_id();
}
 bool Request_InitQuoteExRequest::b_pub_key_id() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.InitQuoteExRequest.b_pub_key_id)
  return b_pub_key_id_;
}
 void Request_InitQuoteExRequest::set_b_pub_key_id(bool value) {
  set_has_b_pub_key_id();
  b_pub_key_id_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.InitQuoteExRequest.b_pub_key_id)
}

// optional uint64 buf_size = 4;
bool Request_InitQuoteExRequest::has_buf_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Request_InitQuoteExRequest::set_has_buf_size() {
  _has_bits_[0] |= 0x00000004u;
}
void Request_InitQuoteExRequest::clear_has_buf_size() {
  _has_bits_[0] &= ~0x00000004u;
}
void Request_InitQuoteExRequest::clear_buf_size() {
  buf_size_ = GOOGLE_ULONGLONG(0);
  clear_has_buf_size();
}
 ::google::protobuf::uint64 Request_InitQuoteExRequest::buf_size() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.InitQuoteExRequest.buf_size)
  return buf_size_;
}
 void Request_InitQuoteExRequest::set_buf_size(::google::protobuf::uint64 value) {
  set_has_buf_size();
  buf_size_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.InitQuoteExRequest.buf_size)
}

// optional uint32 timeout = 9;
bool Request_InitQuoteExRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Request_InitQuoteExRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000008u;
}
void Request_InitQuoteExRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000008u;
}
void Request_InitQuoteExRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
 ::google::protobuf::uint32 Request_InitQuoteExRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.InitQuoteExRequest.timeout)
  return timeout_;
}
 void Request_InitQuoteExRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.InitQuoteExRequest.timeout)
}

// -------------------------------------------------------------------

// Request_SelectAttKeyIDRequest

// optional bytes att_key_id_list = 1;
bool Request_SelectAttKeyIDRequest::has_att_key_id_list() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request_SelectAttKeyIDRequest::set_has_att_key_id_list() {
  _has_bits_[0] |= 0x00000001u;
}
void Request_SelectAttKeyIDRequest::clear_has_att_key_id_list() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request_SelectAttKeyIDRequest::clear_att_key_id_list() {
  att_key_id_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_att_key_id_list();
}
 const ::std::string& Request_SelectAttKeyIDRequest::att_key_id_list() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.SelectAttKeyIDRequest.att_key_id_list)
  return att_key_id_list_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_SelectAttKeyIDRequest::set_att_key_id_list(const ::std::string& value) {
  set_has_att_key_id_list();
  att_key_id_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.SelectAttKeyIDRequest.att_key_id_list)
}
 void Request_SelectAttKeyIDRequest::set_att_key_id_list(const char* value) {
  set_has_att_key_id_list();
  att_key_id_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.SelectAttKeyIDRequest.att_key_id_list)
}
 void Request_SelectAttKeyIDRequest::set_att_key_id_list(const void* value, size_t size) {
  set_has_att_key_id_list();
  att_key_id_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.SelectAttKeyIDRequest.att_key_id_list)
}
 ::std::string* Request_SelectAttKeyIDRequest::mutable_att_key_id_list() {
  set_has_att_key_id_list();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.SelectAttKeyIDRequest.att_key_id_list)
  return att_key_id_list_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request_SelectAttKeyIDRequest::release_att_key_id_list() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.SelectAttKeyIDRequest.att_key_id_list)
  clear_has_att_key_id_list();
  return att_key_id_list_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_SelectAttKeyIDRequest::set_allocated_att_key_id_list(::std::string* att_key_id_list) {
  if (att_key_id_list != NULL) {
    set_has_att_key_id_list();
  } else {
    clear_has_att_key_id_list();
  }
  att_key_id_list_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), att_key_id_list);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.SelectAttKeyIDRequest.att_key_id_list)
}

// optional uint32 timeout = 2;
bool Request_SelectAttKeyIDRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Request_SelectAttKeyIDRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000002u;
}
void Request_SelectAttKeyIDRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000002u;
}
void Request_SelectAttKeyIDRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
 ::google::protobuf::uint32 Request_SelectAttKeyIDRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.SelectAttKeyIDRequest.timeout)
  return timeout_;
}
 void Request_SelectAttKeyIDRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.SelectAttKeyIDRequest.timeout)
}

// -------------------------------------------------------------------

// Request_GetQuoteSizeExRequest

// optional bytes att_key_id = 1;
bool Request_GetQuoteSizeExRequest::has_att_key_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request_GetQuoteSizeExRequest::set_has_att_key_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Request_GetQuoteSizeExRequest::clear_has_att_key_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request_GetQuoteSizeExRequest::clear_att_key_id() {
  att_key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_att_key_id();
}
 const ::std::string& Request_GetQuoteSizeExRequest::att_key_id() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetQuoteSizeExRequest.att_key_id)
  return att_key_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_GetQuoteSizeExRequest::set_att_key_id(const ::std::string& value) {
  set_has_att_key_id();
  att_key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetQuoteSizeExRequest.att_key_id)
}
 void Request_GetQuoteSizeExRequest::set_att_key_id(const char* value) {
  set_has_att_key_id();
  att_key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.GetQuoteSizeExRequest.att_key_id)
}
 void Request_GetQuoteSizeExRequest::set_att_key_id(const void* value, size_t size) {
  set_has_att_key_id();
  att_key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.GetQuoteSizeExRequest.att_key_id)
}
 ::std::string* Request_GetQuoteSizeExRequest::mutable_att_key_id() {
  set_has_att_key_id();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.GetQuoteSizeExRequest.att_key_id)
  return att_key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request_GetQuoteSizeExRequest::release_att_key_id() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.GetQuoteSizeExRequest.att_key_id)
  clear_has_att_key_id();
  return att_key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_GetQuoteSizeExRequest::set_allocated_att_key_id(::std::string* att_key_id) {
  if (att_key_id != NULL) {
    set_has_att_key_id();
  } else {
    clear_has_att_key_id();
  }
  att_key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), att_key_id);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.GetQuoteSizeExRequest.att_key_id)
}

// optional uint32 timeout = 9;
bool Request_GetQuoteSizeExRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Request_GetQuoteSizeExRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000002u;
}
void Request_GetQuoteSizeExRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000002u;
}
void Request_GetQuoteSizeExRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
 ::google::protobuf::uint32 Request_GetQuoteSizeExRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetQuoteSizeExRequest.timeout)
  return timeout_;
}
 void Request_GetQuoteSizeExRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetQuoteSizeExRequest.timeout)
}

// -------------------------------------------------------------------

// Request_GetQuoteExRequest

// required bytes report = 1;
bool Request_GetQuoteExRequest::has_report() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request_GetQuoteExRequest::set_has_report() {
  _has_bits_[0] |= 0x00000001u;
}
void Request_GetQuoteExRequest::clear_has_report() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request_GetQuoteExRequest::clear_report() {
  report_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_report();
}
 const ::std::string& Request_GetQuoteExRequest::report() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetQuoteExRequest.report)
  return report_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_GetQuoteExRequest::set_report(const ::std::string& value) {
  set_has_report();
  report_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetQuoteExRequest.report)
}
 void Request_GetQuoteExRequest::set_report(const char* value) {
  set_has_report();
  report_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.GetQuoteExRequest.report)
}
 void Request_GetQuoteExRequest::set_report(const void* value, size_t size) {
  set_has_report();
  report_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.GetQuoteExRequest.report)
}
 ::std::string* Request_GetQuoteExRequest::mutable_report() {
  set_has_report();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.GetQuoteExRequest.report)
  return report_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request_GetQuoteExRequest::release_report() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.GetQuoteExRequest.report)
  clear_has_report();
  return report_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_GetQuoteExRequest::set_allocated_report(::std::string* report) {
  if (report != NULL) {
    set_has_report();
  } else {
    clear_has_report();
  }
  report_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), report);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.GetQuoteExRequest.report)
}

// optional bytes att_key_id = 2;
bool Request_GetQuoteExRequest::has_att_key_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Request_GetQuoteExRequest::set_has_att_key_id() {
  _has_bits_[0] |= 0x00000002u;
}
void Request_GetQuoteExRequest::clear_has_att_key_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void Request_GetQuoteExRequest::clear_att_key_id() {
  att_key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_att_key_id();
}
 const ::std::string& Request_GetQuoteExRequest::att_key_id() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetQuoteExRequest.att_key_id)
  return att_key_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_GetQuoteExRequest::set_att_key_id(const ::std::string& value) {
  set_has_att_key_id();
  att_key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetQuoteExRequest.att_key_id)
}
 void Request_GetQuoteExRequest::set_att_key_id(const char* value) {
  set_has_att_key_id();
  att_key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.GetQuoteExRequest.att_key_id)
}
 void Request_GetQuoteExRequest::set_att_key_id(const void* value, size_t size) {
  set_has_att_key_id();
  att_key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.GetQuoteExRequest.att_key_id)
}
 ::std::string* Request_GetQuoteExRequest::mutable_att_key_id() {
  set_has_att_key_id();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.GetQuoteExRequest.att_key_id)
  return att_key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request_GetQuoteExRequest::release_att_key_id() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.GetQuoteExRequest.att_key_id)
  clear_has_att_key_id();
  return att_key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_GetQuoteExRequest::set_allocated_att_key_id(::std::string* att_key_id) {
  if (att_key_id != NULL) {
    set_has_att_key_id();
  } else {
    clear_has_att_key_id();
  }
  att_key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), att_key_id);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.GetQuoteExRequest.att_key_id)
}

// optional bytes qe_report_info = 3;
bool Request_GetQuoteExRequest::has_qe_report_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Request_GetQuoteExRequest::set_has_qe_report_info() {
  _has_bits_[0] |= 0x00000004u;
}
void Request_GetQuoteExRequest::clear_has_qe_report_info() {
  _has_bits_[0] &= ~0x00000004u;
}
void Request_GetQuoteExRequest::clear_qe_report_info() {
  qe_report_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_qe_report_info();
}
 const ::std::string& Request_GetQuoteExRequest::qe_report_info() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetQuoteExRequest.qe_report_info)
  return qe_report_info_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_GetQuoteExRequest::set_qe_report_info(const ::std::string& value) {
  set_has_qe_report_info();
  qe_report_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetQuoteExRequest.qe_report_info)
}
 void Request_GetQuoteExRequest::set_qe_report_info(const char* value) {
  set_has_qe_report_info();
  qe_report_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Request.GetQuoteExRequest.qe_report_info)
}
 void Request_GetQuoteExRequest::set_qe_report_info(const void* value, size_t size) {
  set_has_qe_report_info();
  qe_report_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Request.GetQuoteExRequest.qe_report_info)
}
 ::std::string* Request_GetQuoteExRequest::mutable_qe_report_info() {
  set_has_qe_report_info();
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.GetQuoteExRequest.qe_report_info)
  return qe_report_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request_GetQuoteExRequest::release_qe_report_info() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.GetQuoteExRequest.qe_report_info)
  clear_has_qe_report_info();
  return qe_report_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request_GetQuoteExRequest::set_allocated_qe_report_info(::std::string* qe_report_info) {
  if (qe_report_info != NULL) {
    set_has_qe_report_info();
  } else {
    clear_has_qe_report_info();
  }
  qe_report_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qe_report_info);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.GetQuoteExRequest.qe_report_info)
}

// required uint32 buf_size = 4;
bool Request_GetQuoteExRequest::has_buf_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Request_GetQuoteExRequest::set_has_buf_size() {
  _has_bits_[0] |= 0x00000008u;
}
void Request_GetQuoteExRequest::clear_has_buf_size() {
  _has_bits_[0] &= ~0x00000008u;
}
void Request_GetQuoteExRequest::clear_buf_size() {
  buf_size_ = 0u;
  clear_has_buf_size();
}
 ::google::protobuf::uint32 Request_GetQuoteExRequest::buf_size() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetQuoteExRequest.buf_size)
  return buf_size_;
}
 void Request_GetQuoteExRequest::set_buf_size(::google::protobuf::uint32 value) {
  set_has_buf_size();
  buf_size_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetQuoteExRequest.buf_size)
}

// optional uint32 timeout = 9;
bool Request_GetQuoteExRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Request_GetQuoteExRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000010u;
}
void Request_GetQuoteExRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000010u;
}
void Request_GetQuoteExRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
 ::google::protobuf::uint32 Request_GetQuoteExRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetQuoteExRequest.timeout)
  return timeout_;
}
 void Request_GetQuoteExRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetQuoteExRequest.timeout)
}

// -------------------------------------------------------------------

// Request_GetSupportedAttKeyIDNumRequest

// optional uint32 timeout = 9;
bool Request_GetSupportedAttKeyIDNumRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request_GetSupportedAttKeyIDNumRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000001u;
}
void Request_GetSupportedAttKeyIDNumRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request_GetSupportedAttKeyIDNumRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
 ::google::protobuf::uint32 Request_GetSupportedAttKeyIDNumRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetSupportedAttKeyIDNumRequest.timeout)
  return timeout_;
}
 void Request_GetSupportedAttKeyIDNumRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetSupportedAttKeyIDNumRequest.timeout)
}

// -------------------------------------------------------------------

// Request_GetSupportedAttKeyIDsRequest

// required uint32 buf_size = 1;
bool Request_GetSupportedAttKeyIDsRequest::has_buf_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request_GetSupportedAttKeyIDsRequest::set_has_buf_size() {
  _has_bits_[0] |= 0x00000001u;
}
void Request_GetSupportedAttKeyIDsRequest::clear_has_buf_size() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request_GetSupportedAttKeyIDsRequest::clear_buf_size() {
  buf_size_ = 0u;
  clear_has_buf_size();
}
 ::google::protobuf::uint32 Request_GetSupportedAttKeyIDsRequest::buf_size() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetSupportedAttKeyIDsRequest.buf_size)
  return buf_size_;
}
 void Request_GetSupportedAttKeyIDsRequest::set_buf_size(::google::protobuf::uint32 value) {
  set_has_buf_size();
  buf_size_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetSupportedAttKeyIDsRequest.buf_size)
}

// optional uint32 timeout = 9;
bool Request_GetSupportedAttKeyIDsRequest::has_timeout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Request_GetSupportedAttKeyIDsRequest::set_has_timeout() {
  _has_bits_[0] |= 0x00000002u;
}
void Request_GetSupportedAttKeyIDsRequest::clear_has_timeout() {
  _has_bits_[0] &= ~0x00000002u;
}
void Request_GetSupportedAttKeyIDsRequest::clear_timeout() {
  timeout_ = 0u;
  clear_has_timeout();
}
 ::google::protobuf::uint32 Request_GetSupportedAttKeyIDsRequest::timeout() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.GetSupportedAttKeyIDsRequest.timeout)
  return timeout_;
}
 void Request_GetSupportedAttKeyIDsRequest::set_timeout(::google::protobuf::uint32 value) {
  set_has_timeout();
  timeout_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Request.GetSupportedAttKeyIDsRequest.timeout)
}

// -------------------------------------------------------------------

// Request

// optional .aesm.message.Request.InitQuoteRequest initQuoteReq = 1;
bool Request::has_initquotereq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request::set_has_initquotereq() {
  _has_bits_[0] |= 0x00000001u;
}
void Request::clear_has_initquotereq() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request::clear_initquotereq() {
  if (initquotereq_ != NULL) initquotereq_->::aesm::message::Request_InitQuoteRequest::Clear();
  clear_has_initquotereq();
}
const ::aesm::message::Request_InitQuoteRequest& Request::initquotereq() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.initQuoteReq)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return initquotereq_ != NULL ? *initquotereq_ : *default_instance().initquotereq_;
#else
  return initquotereq_ != NULL ? *initquotereq_ : *default_instance_->initquotereq_;
#endif
}
::aesm::message::Request_InitQuoteRequest* Request::mutable_initquotereq() {
  set_has_initquotereq();
  if (initquotereq_ == NULL) {
    initquotereq_ = new ::aesm::message::Request_InitQuoteRequest;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.initQuoteReq)
  return initquotereq_;
}
::aesm::message::Request_InitQuoteRequest* Request::release_initquotereq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.initQuoteReq)
  clear_has_initquotereq();
  ::aesm::message::Request_InitQuoteRequest* temp = initquotereq_;
  initquotereq_ = NULL;
  return temp;
}
void Request::set_allocated_initquotereq(::aesm::message::Request_InitQuoteRequest* initquotereq) {
  delete initquotereq_;
  initquotereq_ = initquotereq;
  if (initquotereq) {
    set_has_initquotereq();
  } else {
    clear_has_initquotereq();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.initQuoteReq)
}

// optional .aesm.message.Request.GetQuoteRequest getQuoteReq = 2;
bool Request::has_getquotereq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Request::set_has_getquotereq() {
  _has_bits_[0] |= 0x00000002u;
}
void Request::clear_has_getquotereq() {
  _has_bits_[0] &= ~0x00000002u;
}
void Request::clear_getquotereq() {
  if (getquotereq_ != NULL) getquotereq_->::aesm::message::Request_GetQuoteRequest::Clear();
  clear_has_getquotereq();
}
const ::aesm::message::Request_GetQuoteRequest& Request::getquotereq() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.getQuoteReq)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return getquotereq_ != NULL ? *getquotereq_ : *default_instance().getquotereq_;
#else
  return getquotereq_ != NULL ? *getquotereq_ : *default_instance_->getquotereq_;
#endif
}
::aesm::message::Request_GetQuoteRequest* Request::mutable_getquotereq() {
  set_has_getquotereq();
  if (getquotereq_ == NULL) {
    getquotereq_ = new ::aesm::message::Request_GetQuoteRequest;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.getQuoteReq)
  return getquotereq_;
}
::aesm::message::Request_GetQuoteRequest* Request::release_getquotereq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.getQuoteReq)
  clear_has_getquotereq();
  ::aesm::message::Request_GetQuoteRequest* temp = getquotereq_;
  getquotereq_ = NULL;
  return temp;
}
void Request::set_allocated_getquotereq(::aesm::message::Request_GetQuoteRequest* getquotereq) {
  delete getquotereq_;
  getquotereq_ = getquotereq;
  if (getquotereq) {
    set_has_getquotereq();
  } else {
    clear_has_getquotereq();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.getQuoteReq)
}

// optional .aesm.message.Request.GetLaunchTokenRequest getLicTokenReq = 3;
bool Request::has_getlictokenreq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Request::set_has_getlictokenreq() {
  _has_bits_[0] |= 0x00000004u;
}
void Request::clear_has_getlictokenreq() {
  _has_bits_[0] &= ~0x00000004u;
}
void Request::clear_getlictokenreq() {
  if (getlictokenreq_ != NULL) getlictokenreq_->::aesm::message::Request_GetLaunchTokenRequest::Clear();
  clear_has_getlictokenreq();
}
const ::aesm::message::Request_GetLaunchTokenRequest& Request::getlictokenreq() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.getLicTokenReq)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return getlictokenreq_ != NULL ? *getlictokenreq_ : *default_instance().getlictokenreq_;
#else
  return getlictokenreq_ != NULL ? *getlictokenreq_ : *default_instance_->getlictokenreq_;
#endif
}
::aesm::message::Request_GetLaunchTokenRequest* Request::mutable_getlictokenreq() {
  set_has_getlictokenreq();
  if (getlictokenreq_ == NULL) {
    getlictokenreq_ = new ::aesm::message::Request_GetLaunchTokenRequest;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.getLicTokenReq)
  return getlictokenreq_;
}
::aesm::message::Request_GetLaunchTokenRequest* Request::release_getlictokenreq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.getLicTokenReq)
  clear_has_getlictokenreq();
  ::aesm::message::Request_GetLaunchTokenRequest* temp = getlictokenreq_;
  getlictokenreq_ = NULL;
  return temp;
}
void Request::set_allocated_getlictokenreq(::aesm::message::Request_GetLaunchTokenRequest* getlictokenreq) {
  delete getlictokenreq_;
  getlictokenreq_ = getlictokenreq;
  if (getlictokenreq) {
    set_has_getlictokenreq();
  } else {
    clear_has_getlictokenreq();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.getLicTokenReq)
}

// optional .aesm.message.Request.ReportAttestationErrorRequest reportErrReq = 4;
bool Request::has_reporterrreq() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Request::set_has_reporterrreq() {
  _has_bits_[0] |= 0x00000008u;
}
void Request::clear_has_reporterrreq() {
  _has_bits_[0] &= ~0x00000008u;
}
void Request::clear_reporterrreq() {
  if (reporterrreq_ != NULL) reporterrreq_->::aesm::message::Request_ReportAttestationErrorRequest::Clear();
  clear_has_reporterrreq();
}
const ::aesm::message::Request_ReportAttestationErrorRequest& Request::reporterrreq() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.reportErrReq)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return reporterrreq_ != NULL ? *reporterrreq_ : *default_instance().reporterrreq_;
#else
  return reporterrreq_ != NULL ? *reporterrreq_ : *default_instance_->reporterrreq_;
#endif
}
::aesm::message::Request_ReportAttestationErrorRequest* Request::mutable_reporterrreq() {
  set_has_reporterrreq();
  if (reporterrreq_ == NULL) {
    reporterrreq_ = new ::aesm::message::Request_ReportAttestationErrorRequest;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.reportErrReq)
  return reporterrreq_;
}
::aesm::message::Request_ReportAttestationErrorRequest* Request::release_reporterrreq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.reportErrReq)
  clear_has_reporterrreq();
  ::aesm::message::Request_ReportAttestationErrorRequest* temp = reporterrreq_;
  reporterrreq_ = NULL;
  return temp;
}
void Request::set_allocated_reporterrreq(::aesm::message::Request_ReportAttestationErrorRequest* reporterrreq) {
  delete reporterrreq_;
  reporterrreq_ = reporterrreq;
  if (reporterrreq) {
    set_has_reporterrreq();
  } else {
    clear_has_reporterrreq();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.reportErrReq)
}

// optional .aesm.message.Request.GetWhiteListSizeRequest getWhiteListSizeReq = 10;
bool Request::has_getwhitelistsizereq() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Request::set_has_getwhitelistsizereq() {
  _has_bits_[0] |= 0x00000010u;
}
void Request::clear_has_getwhitelistsizereq() {
  _has_bits_[0] &= ~0x00000010u;
}
void Request::clear_getwhitelistsizereq() {
  if (getwhitelistsizereq_ != NULL) getwhitelistsizereq_->::aesm::message::Request_GetWhiteListSizeRequest::Clear();
  clear_has_getwhitelistsizereq();
}
const ::aesm::message::Request_GetWhiteListSizeRequest& Request::getwhitelistsizereq() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.getWhiteListSizeReq)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return getwhitelistsizereq_ != NULL ? *getwhitelistsizereq_ : *default_instance().getwhitelistsizereq_;
#else
  return getwhitelistsizereq_ != NULL ? *getwhitelistsizereq_ : *default_instance_->getwhitelistsizereq_;
#endif
}
::aesm::message::Request_GetWhiteListSizeRequest* Request::mutable_getwhitelistsizereq() {
  set_has_getwhitelistsizereq();
  if (getwhitelistsizereq_ == NULL) {
    getwhitelistsizereq_ = new ::aesm::message::Request_GetWhiteListSizeRequest;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.getWhiteListSizeReq)
  return getwhitelistsizereq_;
}
::aesm::message::Request_GetWhiteListSizeRequest* Request::release_getwhitelistsizereq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.getWhiteListSizeReq)
  clear_has_getwhitelistsizereq();
  ::aesm::message::Request_GetWhiteListSizeRequest* temp = getwhitelistsizereq_;
  getwhitelistsizereq_ = NULL;
  return temp;
}
void Request::set_allocated_getwhitelistsizereq(::aesm::message::Request_GetWhiteListSizeRequest* getwhitelistsizereq) {
  delete getwhitelistsizereq_;
  getwhitelistsizereq_ = getwhitelistsizereq;
  if (getwhitelistsizereq) {
    set_has_getwhitelistsizereq();
  } else {
    clear_has_getwhitelistsizereq();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.getWhiteListSizeReq)
}

// optional .aesm.message.Request.GetWhiteListRequest getWhiteListReq = 11;
bool Request::has_getwhitelistreq() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Request::set_has_getwhitelistreq() {
  _has_bits_[0] |= 0x00000020u;
}
void Request::clear_has_getwhitelistreq() {
  _has_bits_[0] &= ~0x00000020u;
}
void Request::clear_getwhitelistreq() {
  if (getwhitelistreq_ != NULL) getwhitelistreq_->::aesm::message::Request_GetWhiteListRequest::Clear();
  clear_has_getwhitelistreq();
}
const ::aesm::message::Request_GetWhiteListRequest& Request::getwhitelistreq() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.getWhiteListReq)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return getwhitelistreq_ != NULL ? *getwhitelistreq_ : *default_instance().getwhitelistreq_;
#else
  return getwhitelistreq_ != NULL ? *getwhitelistreq_ : *default_instance_->getwhitelistreq_;
#endif
}
::aesm::message::Request_GetWhiteListRequest* Request::mutable_getwhitelistreq() {
  set_has_getwhitelistreq();
  if (getwhitelistreq_ == NULL) {
    getwhitelistreq_ = new ::aesm::message::Request_GetWhiteListRequest;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.getWhiteListReq)
  return getwhitelistreq_;
}
::aesm::message::Request_GetWhiteListRequest* Request::release_getwhitelistreq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.getWhiteListReq)
  clear_has_getwhitelistreq();
  ::aesm::message::Request_GetWhiteListRequest* temp = getwhitelistreq_;
  getwhitelistreq_ = NULL;
  return temp;
}
void Request::set_allocated_getwhitelistreq(::aesm::message::Request_GetWhiteListRequest* getwhitelistreq) {
  delete getwhitelistreq_;
  getwhitelistreq_ = getwhitelistreq;
  if (getwhitelistreq) {
    set_has_getwhitelistreq();
  } else {
    clear_has_getwhitelistreq();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.getWhiteListReq)
}

// optional .aesm.message.Request.SGXGetExtendedEpidGroupIdRequest sgxGetExtendedEpidGroupIdReq = 12;
bool Request::has_sgxgetextendedepidgroupidreq() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Request::set_has_sgxgetextendedepidgroupidreq() {
  _has_bits_[0] |= 0x00000040u;
}
void Request::clear_has_sgxgetextendedepidgroupidreq() {
  _has_bits_[0] &= ~0x00000040u;
}
void Request::clear_sgxgetextendedepidgroupidreq() {
  if (sgxgetextendedepidgroupidreq_ != NULL) sgxgetextendedepidgroupidreq_->::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest::Clear();
  clear_has_sgxgetextendedepidgroupidreq();
}
const ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest& Request::sgxgetextendedepidgroupidreq() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.sgxGetExtendedEpidGroupIdReq)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return sgxgetextendedepidgroupidreq_ != NULL ? *sgxgetextendedepidgroupidreq_ : *default_instance().sgxgetextendedepidgroupidreq_;
#else
  return sgxgetextendedepidgroupidreq_ != NULL ? *sgxgetextendedepidgroupidreq_ : *default_instance_->sgxgetextendedepidgroupidreq_;
#endif
}
::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest* Request::mutable_sgxgetextendedepidgroupidreq() {
  set_has_sgxgetextendedepidgroupidreq();
  if (sgxgetextendedepidgroupidreq_ == NULL) {
    sgxgetextendedepidgroupidreq_ = new ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.sgxGetExtendedEpidGroupIdReq)
  return sgxgetextendedepidgroupidreq_;
}
::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest* Request::release_sgxgetextendedepidgroupidreq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.sgxGetExtendedEpidGroupIdReq)
  clear_has_sgxgetextendedepidgroupidreq();
  ::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest* temp = sgxgetextendedepidgroupidreq_;
  sgxgetextendedepidgroupidreq_ = NULL;
  return temp;
}
void Request::set_allocated_sgxgetextendedepidgroupidreq(::aesm::message::Request_SGXGetExtendedEpidGroupIdRequest* sgxgetextendedepidgroupidreq) {
  delete sgxgetextendedepidgroupidreq_;
  sgxgetextendedepidgroupidreq_ = sgxgetextendedepidgroupidreq;
  if (sgxgetextendedepidgroupidreq) {
    set_has_sgxgetextendedepidgroupidreq();
  } else {
    clear_has_sgxgetextendedepidgroupidreq();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.sgxGetExtendedEpidGroupIdReq)
}

// optional .aesm.message.Request.SGXSwitchExtendedEpidGroupRequest sgxSwitchExtendedEpidGroupReq = 13;
bool Request::has_sgxswitchextendedepidgroupreq() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Request::set_has_sgxswitchextendedepidgroupreq() {
  _has_bits_[0] |= 0x00000080u;
}
void Request::clear_has_sgxswitchextendedepidgroupreq() {
  _has_bits_[0] &= ~0x00000080u;
}
void Request::clear_sgxswitchextendedepidgroupreq() {
  if (sgxswitchextendedepidgroupreq_ != NULL) sgxswitchextendedepidgroupreq_->::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest::Clear();
  clear_has_sgxswitchextendedepidgroupreq();
}
const ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest& Request::sgxswitchextendedepidgroupreq() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.sgxSwitchExtendedEpidGroupReq)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return sgxswitchextendedepidgroupreq_ != NULL ? *sgxswitchextendedepidgroupreq_ : *default_instance().sgxswitchextendedepidgroupreq_;
#else
  return sgxswitchextendedepidgroupreq_ != NULL ? *sgxswitchextendedepidgroupreq_ : *default_instance_->sgxswitchextendedepidgroupreq_;
#endif
}
::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest* Request::mutable_sgxswitchextendedepidgroupreq() {
  set_has_sgxswitchextendedepidgroupreq();
  if (sgxswitchextendedepidgroupreq_ == NULL) {
    sgxswitchextendedepidgroupreq_ = new ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.sgxSwitchExtendedEpidGroupReq)
  return sgxswitchextendedepidgroupreq_;
}
::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest* Request::release_sgxswitchextendedepidgroupreq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.sgxSwitchExtendedEpidGroupReq)
  clear_has_sgxswitchextendedepidgroupreq();
  ::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest* temp = sgxswitchextendedepidgroupreq_;
  sgxswitchextendedepidgroupreq_ = NULL;
  return temp;
}
void Request::set_allocated_sgxswitchextendedepidgroupreq(::aesm::message::Request_SGXSwitchExtendedEpidGroupRequest* sgxswitchextendedepidgroupreq) {
  delete sgxswitchextendedepidgroupreq_;
  sgxswitchextendedepidgroupreq_ = sgxswitchextendedepidgroupreq;
  if (sgxswitchextendedepidgroupreq) {
    set_has_sgxswitchextendedepidgroupreq();
  } else {
    clear_has_sgxswitchextendedepidgroupreq();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.sgxSwitchExtendedEpidGroupReq)
}

// optional .aesm.message.Request.SGXRegisterRequest sgxRegisterReq = 14;
bool Request::has_sgxregisterreq() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Request::set_has_sgxregisterreq() {
  _has_bits_[0] |= 0x00000100u;
}
void Request::clear_has_sgxregisterreq() {
  _has_bits_[0] &= ~0x00000100u;
}
void Request::clear_sgxregisterreq() {
  if (sgxregisterreq_ != NULL) sgxregisterreq_->::aesm::message::Request_SGXRegisterRequest::Clear();
  clear_has_sgxregisterreq();
}
const ::aesm::message::Request_SGXRegisterRequest& Request::sgxregisterreq() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.sgxRegisterReq)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return sgxregisterreq_ != NULL ? *sgxregisterreq_ : *default_instance().sgxregisterreq_;
#else
  return sgxregisterreq_ != NULL ? *sgxregisterreq_ : *default_instance_->sgxregisterreq_;
#endif
}
::aesm::message::Request_SGXRegisterRequest* Request::mutable_sgxregisterreq() {
  set_has_sgxregisterreq();
  if (sgxregisterreq_ == NULL) {
    sgxregisterreq_ = new ::aesm::message::Request_SGXRegisterRequest;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.sgxRegisterReq)
  return sgxregisterreq_;
}
::aesm::message::Request_SGXRegisterRequest* Request::release_sgxregisterreq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.sgxRegisterReq)
  clear_has_sgxregisterreq();
  ::aesm::message::Request_SGXRegisterRequest* temp = sgxregisterreq_;
  sgxregisterreq_ = NULL;
  return temp;
}
void Request::set_allocated_sgxregisterreq(::aesm::message::Request_SGXRegisterRequest* sgxregisterreq) {
  delete sgxregisterreq_;
  sgxregisterreq_ = sgxregisterreq;
  if (sgxregisterreq) {
    set_has_sgxregisterreq();
  } else {
    clear_has_sgxregisterreq();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.sgxRegisterReq)
}

// optional .aesm.message.Request.InitQuoteExRequest initQuoteExReq = 15;
bool Request::has_initquoteexreq() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Request::set_has_initquoteexreq() {
  _has_bits_[0] |= 0x00000200u;
}
void Request::clear_has_initquoteexreq() {
  _has_bits_[0] &= ~0x00000200u;
}
void Request::clear_initquoteexreq() {
  if (initquoteexreq_ != NULL) initquoteexreq_->::aesm::message::Request_InitQuoteExRequest::Clear();
  clear_has_initquoteexreq();
}
const ::aesm::message::Request_InitQuoteExRequest& Request::initquoteexreq() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.initQuoteExReq)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return initquoteexreq_ != NULL ? *initquoteexreq_ : *default_instance().initquoteexreq_;
#else
  return initquoteexreq_ != NULL ? *initquoteexreq_ : *default_instance_->initquoteexreq_;
#endif
}
::aesm::message::Request_InitQuoteExRequest* Request::mutable_initquoteexreq() {
  set_has_initquoteexreq();
  if (initquoteexreq_ == NULL) {
    initquoteexreq_ = new ::aesm::message::Request_InitQuoteExRequest;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.initQuoteExReq)
  return initquoteexreq_;
}
::aesm::message::Request_InitQuoteExRequest* Request::release_initquoteexreq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.initQuoteExReq)
  clear_has_initquoteexreq();
  ::aesm::message::Request_InitQuoteExRequest* temp = initquoteexreq_;
  initquoteexreq_ = NULL;
  return temp;
}
void Request::set_allocated_initquoteexreq(::aesm::message::Request_InitQuoteExRequest* initquoteexreq) {
  delete initquoteexreq_;
  initquoteexreq_ = initquoteexreq;
  if (initquoteexreq) {
    set_has_initquoteexreq();
  } else {
    clear_has_initquoteexreq();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.initQuoteExReq)
}

// optional .aesm.message.Request.GetQuoteSizeExRequest getQuoteSizeExReq = 16;
bool Request::has_getquotesizeexreq() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Request::set_has_getquotesizeexreq() {
  _has_bits_[0] |= 0x00000400u;
}
void Request::clear_has_getquotesizeexreq() {
  _has_bits_[0] &= ~0x00000400u;
}
void Request::clear_getquotesizeexreq() {
  if (getquotesizeexreq_ != NULL) getquotesizeexreq_->::aesm::message::Request_GetQuoteSizeExRequest::Clear();
  clear_has_getquotesizeexreq();
}
const ::aesm::message::Request_GetQuoteSizeExRequest& Request::getquotesizeexreq() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.getQuoteSizeExReq)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return getquotesizeexreq_ != NULL ? *getquotesizeexreq_ : *default_instance().getquotesizeexreq_;
#else
  return getquotesizeexreq_ != NULL ? *getquotesizeexreq_ : *default_instance_->getquotesizeexreq_;
#endif
}
::aesm::message::Request_GetQuoteSizeExRequest* Request::mutable_getquotesizeexreq() {
  set_has_getquotesizeexreq();
  if (getquotesizeexreq_ == NULL) {
    getquotesizeexreq_ = new ::aesm::message::Request_GetQuoteSizeExRequest;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.getQuoteSizeExReq)
  return getquotesizeexreq_;
}
::aesm::message::Request_GetQuoteSizeExRequest* Request::release_getquotesizeexreq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.getQuoteSizeExReq)
  clear_has_getquotesizeexreq();
  ::aesm::message::Request_GetQuoteSizeExRequest* temp = getquotesizeexreq_;
  getquotesizeexreq_ = NULL;
  return temp;
}
void Request::set_allocated_getquotesizeexreq(::aesm::message::Request_GetQuoteSizeExRequest* getquotesizeexreq) {
  delete getquotesizeexreq_;
  getquotesizeexreq_ = getquotesizeexreq;
  if (getquotesizeexreq) {
    set_has_getquotesizeexreq();
  } else {
    clear_has_getquotesizeexreq();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.getQuoteSizeExReq)
}

// optional .aesm.message.Request.GetQuoteExRequest getQuoteExReq = 17;
bool Request::has_getquoteexreq() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Request::set_has_getquoteexreq() {
  _has_bits_[0] |= 0x00000800u;
}
void Request::clear_has_getquoteexreq() {
  _has_bits_[0] &= ~0x00000800u;
}
void Request::clear_getquoteexreq() {
  if (getquoteexreq_ != NULL) getquoteexreq_->::aesm::message::Request_GetQuoteExRequest::Clear();
  clear_has_getquoteexreq();
}
const ::aesm::message::Request_GetQuoteExRequest& Request::getquoteexreq() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.getQuoteExReq)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return getquoteexreq_ != NULL ? *getquoteexreq_ : *default_instance().getquoteexreq_;
#else
  return getquoteexreq_ != NULL ? *getquoteexreq_ : *default_instance_->getquoteexreq_;
#endif
}
::aesm::message::Request_GetQuoteExRequest* Request::mutable_getquoteexreq() {
  set_has_getquoteexreq();
  if (getquoteexreq_ == NULL) {
    getquoteexreq_ = new ::aesm::message::Request_GetQuoteExRequest;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.getQuoteExReq)
  return getquoteexreq_;
}
::aesm::message::Request_GetQuoteExRequest* Request::release_getquoteexreq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.getQuoteExReq)
  clear_has_getquoteexreq();
  ::aesm::message::Request_GetQuoteExRequest* temp = getquoteexreq_;
  getquoteexreq_ = NULL;
  return temp;
}
void Request::set_allocated_getquoteexreq(::aesm::message::Request_GetQuoteExRequest* getquoteexreq) {
  delete getquoteexreq_;
  getquoteexreq_ = getquoteexreq;
  if (getquoteexreq) {
    set_has_getquoteexreq();
  } else {
    clear_has_getquoteexreq();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.getQuoteExReq)
}

// optional .aesm.message.Request.CheckUpdateStatusRequest checkUpdateStatusReq = 18;
bool Request::has_checkupdatestatusreq() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void Request::set_has_checkupdatestatusreq() {
  _has_bits_[0] |= 0x00001000u;
}
void Request::clear_has_checkupdatestatusreq() {
  _has_bits_[0] &= ~0x00001000u;
}
void Request::clear_checkupdatestatusreq() {
  if (checkupdatestatusreq_ != NULL) checkupdatestatusreq_->::aesm::message::Request_CheckUpdateStatusRequest::Clear();
  clear_has_checkupdatestatusreq();
}
const ::aesm::message::Request_CheckUpdateStatusRequest& Request::checkupdatestatusreq() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.checkUpdateStatusReq)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return checkupdatestatusreq_ != NULL ? *checkupdatestatusreq_ : *default_instance().checkupdatestatusreq_;
#else
  return checkupdatestatusreq_ != NULL ? *checkupdatestatusreq_ : *default_instance_->checkupdatestatusreq_;
#endif
}
::aesm::message::Request_CheckUpdateStatusRequest* Request::mutable_checkupdatestatusreq() {
  set_has_checkupdatestatusreq();
  if (checkupdatestatusreq_ == NULL) {
    checkupdatestatusreq_ = new ::aesm::message::Request_CheckUpdateStatusRequest;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.checkUpdateStatusReq)
  return checkupdatestatusreq_;
}
::aesm::message::Request_CheckUpdateStatusRequest* Request::release_checkupdatestatusreq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.checkUpdateStatusReq)
  clear_has_checkupdatestatusreq();
  ::aesm::message::Request_CheckUpdateStatusRequest* temp = checkupdatestatusreq_;
  checkupdatestatusreq_ = NULL;
  return temp;
}
void Request::set_allocated_checkupdatestatusreq(::aesm::message::Request_CheckUpdateStatusRequest* checkupdatestatusreq) {
  delete checkupdatestatusreq_;
  checkupdatestatusreq_ = checkupdatestatusreq;
  if (checkupdatestatusreq) {
    set_has_checkupdatestatusreq();
  } else {
    clear_has_checkupdatestatusreq();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.checkUpdateStatusReq)
}

// optional .aesm.message.Request.SelectAttKeyIDRequest selectAttKeyIDReq = 19;
bool Request::has_selectattkeyidreq() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void Request::set_has_selectattkeyidreq() {
  _has_bits_[0] |= 0x00002000u;
}
void Request::clear_has_selectattkeyidreq() {
  _has_bits_[0] &= ~0x00002000u;
}
void Request::clear_selectattkeyidreq() {
  if (selectattkeyidreq_ != NULL) selectattkeyidreq_->::aesm::message::Request_SelectAttKeyIDRequest::Clear();
  clear_has_selectattkeyidreq();
}
const ::aesm::message::Request_SelectAttKeyIDRequest& Request::selectattkeyidreq() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.selectAttKeyIDReq)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return selectattkeyidreq_ != NULL ? *selectattkeyidreq_ : *default_instance().selectattkeyidreq_;
#else
  return selectattkeyidreq_ != NULL ? *selectattkeyidreq_ : *default_instance_->selectattkeyidreq_;
#endif
}
::aesm::message::Request_SelectAttKeyIDRequest* Request::mutable_selectattkeyidreq() {
  set_has_selectattkeyidreq();
  if (selectattkeyidreq_ == NULL) {
    selectattkeyidreq_ = new ::aesm::message::Request_SelectAttKeyIDRequest;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.selectAttKeyIDReq)
  return selectattkeyidreq_;
}
::aesm::message::Request_SelectAttKeyIDRequest* Request::release_selectattkeyidreq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.selectAttKeyIDReq)
  clear_has_selectattkeyidreq();
  ::aesm::message::Request_SelectAttKeyIDRequest* temp = selectattkeyidreq_;
  selectattkeyidreq_ = NULL;
  return temp;
}
void Request::set_allocated_selectattkeyidreq(::aesm::message::Request_SelectAttKeyIDRequest* selectattkeyidreq) {
  delete selectattkeyidreq_;
  selectattkeyidreq_ = selectattkeyidreq;
  if (selectattkeyidreq) {
    set_has_selectattkeyidreq();
  } else {
    clear_has_selectattkeyidreq();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.selectAttKeyIDReq)
}

// optional .aesm.message.Request.GetSupportedAttKeyIDNumRequest getSupportedAttKeyIDNumReq = 21;
bool Request::has_getsupportedattkeyidnumreq() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void Request::set_has_getsupportedattkeyidnumreq() {
  _has_bits_[0] |= 0x00004000u;
}
void Request::clear_has_getsupportedattkeyidnumreq() {
  _has_bits_[0] &= ~0x00004000u;
}
void Request::clear_getsupportedattkeyidnumreq() {
  if (getsupportedattkeyidnumreq_ != NULL) getsupportedattkeyidnumreq_->::aesm::message::Request_GetSupportedAttKeyIDNumRequest::Clear();
  clear_has_getsupportedattkeyidnumreq();
}
const ::aesm::message::Request_GetSupportedAttKeyIDNumRequest& Request::getsupportedattkeyidnumreq() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.getSupportedAttKeyIDNumReq)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return getsupportedattkeyidnumreq_ != NULL ? *getsupportedattkeyidnumreq_ : *default_instance().getsupportedattkeyidnumreq_;
#else
  return getsupportedattkeyidnumreq_ != NULL ? *getsupportedattkeyidnumreq_ : *default_instance_->getsupportedattkeyidnumreq_;
#endif
}
::aesm::message::Request_GetSupportedAttKeyIDNumRequest* Request::mutable_getsupportedattkeyidnumreq() {
  set_has_getsupportedattkeyidnumreq();
  if (getsupportedattkeyidnumreq_ == NULL) {
    getsupportedattkeyidnumreq_ = new ::aesm::message::Request_GetSupportedAttKeyIDNumRequest;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.getSupportedAttKeyIDNumReq)
  return getsupportedattkeyidnumreq_;
}
::aesm::message::Request_GetSupportedAttKeyIDNumRequest* Request::release_getsupportedattkeyidnumreq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.getSupportedAttKeyIDNumReq)
  clear_has_getsupportedattkeyidnumreq();
  ::aesm::message::Request_GetSupportedAttKeyIDNumRequest* temp = getsupportedattkeyidnumreq_;
  getsupportedattkeyidnumreq_ = NULL;
  return temp;
}
void Request::set_allocated_getsupportedattkeyidnumreq(::aesm::message::Request_GetSupportedAttKeyIDNumRequest* getsupportedattkeyidnumreq) {
  delete getsupportedattkeyidnumreq_;
  getsupportedattkeyidnumreq_ = getsupportedattkeyidnumreq;
  if (getsupportedattkeyidnumreq) {
    set_has_getsupportedattkeyidnumreq();
  } else {
    clear_has_getsupportedattkeyidnumreq();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.getSupportedAttKeyIDNumReq)
}

// optional .aesm.message.Request.GetSupportedAttKeyIDsRequest getSupportedAttKeyIDsReq = 22;
bool Request::has_getsupportedattkeyidsreq() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void Request::set_has_getsupportedattkeyidsreq() {
  _has_bits_[0] |= 0x00008000u;
}
void Request::clear_has_getsupportedattkeyidsreq() {
  _has_bits_[0] &= ~0x00008000u;
}
void Request::clear_getsupportedattkeyidsreq() {
  if (getsupportedattkeyidsreq_ != NULL) getsupportedattkeyidsreq_->::aesm::message::Request_GetSupportedAttKeyIDsRequest::Clear();
  clear_has_getsupportedattkeyidsreq();
}
const ::aesm::message::Request_GetSupportedAttKeyIDsRequest& Request::getsupportedattkeyidsreq() const {
  // @@protoc_insertion_point(field_get:aesm.message.Request.getSupportedAttKeyIDsReq)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return getsupportedattkeyidsreq_ != NULL ? *getsupportedattkeyidsreq_ : *default_instance().getsupportedattkeyidsreq_;
#else
  return getsupportedattkeyidsreq_ != NULL ? *getsupportedattkeyidsreq_ : *default_instance_->getsupportedattkeyidsreq_;
#endif
}
::aesm::message::Request_GetSupportedAttKeyIDsRequest* Request::mutable_getsupportedattkeyidsreq() {
  set_has_getsupportedattkeyidsreq();
  if (getsupportedattkeyidsreq_ == NULL) {
    getsupportedattkeyidsreq_ = new ::aesm::message::Request_GetSupportedAttKeyIDsRequest;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Request.getSupportedAttKeyIDsReq)
  return getsupportedattkeyidsreq_;
}
::aesm::message::Request_GetSupportedAttKeyIDsRequest* Request::release_getsupportedattkeyidsreq() {
  // @@protoc_insertion_point(field_release:aesm.message.Request.getSupportedAttKeyIDsReq)
  clear_has_getsupportedattkeyidsreq();
  ::aesm::message::Request_GetSupportedAttKeyIDsRequest* temp = getsupportedattkeyidsreq_;
  getsupportedattkeyidsreq_ = NULL;
  return temp;
}
void Request::set_allocated_getsupportedattkeyidsreq(::aesm::message::Request_GetSupportedAttKeyIDsRequest* getsupportedattkeyidsreq) {
  delete getsupportedattkeyidsreq_;
  getsupportedattkeyidsreq_ = getsupportedattkeyidsreq;
  if (getsupportedattkeyidsreq) {
    set_has_getsupportedattkeyidsreq();
  } else {
    clear_has_getsupportedattkeyidsreq();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Request.getSupportedAttKeyIDsReq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

static ::std::string* MutableUnknownFieldsForResponse(
    Response* ptr) {
  return ptr->mutable_unknown_fields();
}

static ::std::string* MutableUnknownFieldsForResponse_InitQuoteResponse(
    Response_InitQuoteResponse* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_InitQuoteResponse::kErrorCodeFieldNumber;
const int Response_InitQuoteResponse::kTargetInfoFieldNumber;
const int Response_InitQuoteResponse::kGidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_InitQuoteResponse::Response_InitQuoteResponse()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.InitQuoteResponse)
}

void Response_InitQuoteResponse::InitAsDefaultInstance() {
}

Response_InitQuoteResponse::Response_InitQuoteResponse(const Response_InitQuoteResponse& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.InitQuoteResponse)
}

void Response_InitQuoteResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 1u;
  targetinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_InitQuoteResponse::~Response_InitQuoteResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.InitQuoteResponse)
  SharedDtor();
}

void Response_InitQuoteResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  targetinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Response_InitQuoteResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Response_InitQuoteResponse& Response_InitQuoteResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Response_InitQuoteResponse* Response_InitQuoteResponse::default_instance_ = NULL;

Response_InitQuoteResponse* Response_InitQuoteResponse::New(::google::protobuf::Arena* arena) const {
  Response_InitQuoteResponse* n = new Response_InitQuoteResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_InitQuoteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.InitQuoteResponse)
  if (_has_bits_[0 / 32] & 7u) {
    errorcode_ = 1u;
    if (has_targetinfo()) {
      targetinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_gid()) {
      gid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Response_InitQuoteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForResponse_InitQuoteResponse, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Response.InitQuoteResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_targetInfo;
        break;
      }

      // optional bytes targetInfo = 2;
      case 2: {
        if (tag == 18) {
         parse_targetInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_targetinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_gid;
        break;
      }

      // optional bytes gid = 3;
      case 3: {
        if (tag == 26) {
         parse_gid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.InitQuoteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.InitQuoteResponse)
  return false;
#undef DO_
}

void Response_InitQuoteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.InitQuoteResponse)
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional bytes targetInfo = 2;
  if (has_targetinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->targetinfo(), output);
  }

  // optional bytes gid = 3;
  if (has_gid()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->gid(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.InitQuoteResponse)
}

int Response_InitQuoteResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.InitQuoteResponse)
  int total_size = 0;

  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  if (_has_bits_[1 / 32] & 6u) {
    // optional bytes targetInfo = 2;
    if (has_targetinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->targetinfo());
    }

    // optional bytes gid = 3;
    if (has_gid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->gid());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_InitQuoteResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Response_InitQuoteResponse*>(&from));
}

void Response_InitQuoteResponse::MergeFrom(const Response_InitQuoteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.InitQuoteResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_targetinfo()) {
      set_has_targetinfo();
      targetinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.targetinfo_);
    }
    if (from.has_gid()) {
      set_has_gid();
      gid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gid_);
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Response_InitQuoteResponse::CopyFrom(const Response_InitQuoteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.InitQuoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_InitQuoteResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_InitQuoteResponse::Swap(Response_InitQuoteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_InitQuoteResponse::InternalSwap(Response_InitQuoteResponse* other) {
  std::swap(errorcode_, other->errorcode_);
  targetinfo_.Swap(&other->targetinfo_);
  gid_.Swap(&other->gid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Response_InitQuoteResponse::GetTypeName() const {
  return "aesm.message.Response.InitQuoteResponse";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForResponse_GetQuoteResponse(
    Response_GetQuoteResponse* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_GetQuoteResponse::kErrorCodeFieldNumber;
const int Response_GetQuoteResponse::kQuoteFieldNumber;
const int Response_GetQuoteResponse::kQeReportFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_GetQuoteResponse::Response_GetQuoteResponse()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.GetQuoteResponse)
}

void Response_GetQuoteResponse::InitAsDefaultInstance() {
}

Response_GetQuoteResponse::Response_GetQuoteResponse(const Response_GetQuoteResponse& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.GetQuoteResponse)
}

void Response_GetQuoteResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 1u;
  quote_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qe_report_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_GetQuoteResponse::~Response_GetQuoteResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.GetQuoteResponse)
  SharedDtor();
}

void Response_GetQuoteResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quote_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qe_report_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Response_GetQuoteResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Response_GetQuoteResponse& Response_GetQuoteResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Response_GetQuoteResponse* Response_GetQuoteResponse::default_instance_ = NULL;

Response_GetQuoteResponse* Response_GetQuoteResponse::New(::google::protobuf::Arena* arena) const {
  Response_GetQuoteResponse* n = new Response_GetQuoteResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_GetQuoteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.GetQuoteResponse)
  if (_has_bits_[0 / 32] & 7u) {
    errorcode_ = 1u;
    if (has_quote()) {
      quote_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_qe_report()) {
      qe_report_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Response_GetQuoteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForResponse_GetQuoteResponse, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Response.GetQuoteResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_quote;
        break;
      }

      // optional bytes quote = 2;
      case 2: {
        if (tag == 18) {
         parse_quote:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_quote()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_qe_report;
        break;
      }

      // optional bytes qe_report = 3;
      case 3: {
        if (tag == 26) {
         parse_qe_report:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_qe_report()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.GetQuoteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.GetQuoteResponse)
  return false;
#undef DO_
}

void Response_GetQuoteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.GetQuoteResponse)
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional bytes quote = 2;
  if (has_quote()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->quote(), output);
  }

  // optional bytes qe_report = 3;
  if (has_qe_report()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->qe_report(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.GetQuoteResponse)
}

int Response_GetQuoteResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.GetQuoteResponse)
  int total_size = 0;

  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  if (_has_bits_[1 / 32] & 6u) {
    // optional bytes quote = 2;
    if (has_quote()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->quote());
    }

    // optional bytes qe_report = 3;
    if (has_qe_report()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->qe_report());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_GetQuoteResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Response_GetQuoteResponse*>(&from));
}

void Response_GetQuoteResponse::MergeFrom(const Response_GetQuoteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.GetQuoteResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_quote()) {
      set_has_quote();
      quote_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.quote_);
    }
    if (from.has_qe_report()) {
      set_has_qe_report();
      qe_report_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qe_report_);
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Response_GetQuoteResponse::CopyFrom(const Response_GetQuoteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.GetQuoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_GetQuoteResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_GetQuoteResponse::Swap(Response_GetQuoteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_GetQuoteResponse::InternalSwap(Response_GetQuoteResponse* other) {
  std::swap(errorcode_, other->errorcode_);
  quote_.Swap(&other->quote_);
  qe_report_.Swap(&other->qe_report_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Response_GetQuoteResponse::GetTypeName() const {
  return "aesm.message.Response.GetQuoteResponse";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForResponse_GetLaunchTokenResponse(
    Response_GetLaunchTokenResponse* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_GetLaunchTokenResponse::kErrorCodeFieldNumber;
const int Response_GetLaunchTokenResponse::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_GetLaunchTokenResponse::Response_GetLaunchTokenResponse()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.GetLaunchTokenResponse)
}

void Response_GetLaunchTokenResponse::InitAsDefaultInstance() {
}

Response_GetLaunchTokenResponse::Response_GetLaunchTokenResponse(const Response_GetLaunchTokenResponse& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.GetLaunchTokenResponse)
}

void Response_GetLaunchTokenResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 1u;
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_GetLaunchTokenResponse::~Response_GetLaunchTokenResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.GetLaunchTokenResponse)
  SharedDtor();
}

void Response_GetLaunchTokenResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Response_GetLaunchTokenResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Response_GetLaunchTokenResponse& Response_GetLaunchTokenResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Response_GetLaunchTokenResponse* Response_GetLaunchTokenResponse::default_instance_ = NULL;

Response_GetLaunchTokenResponse* Response_GetLaunchTokenResponse::New(::google::protobuf::Arena* arena) const {
  Response_GetLaunchTokenResponse* n = new Response_GetLaunchTokenResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_GetLaunchTokenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.GetLaunchTokenResponse)
  if (_has_bits_[0 / 32] & 3u) {
    errorcode_ = 1u;
    if (has_token()) {
      token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Response_GetLaunchTokenResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForResponse_GetLaunchTokenResponse, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Response.GetLaunchTokenResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_token;
        break;
      }

      // optional bytes token = 2;
      case 2: {
        if (tag == 18) {
         parse_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.GetLaunchTokenResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.GetLaunchTokenResponse)
  return false;
#undef DO_
}

void Response_GetLaunchTokenResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.GetLaunchTokenResponse)
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional bytes token = 2;
  if (has_token()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->token(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.GetLaunchTokenResponse)
}

int Response_GetLaunchTokenResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.GetLaunchTokenResponse)
  int total_size = 0;

  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  // optional bytes token = 2;
  if (has_token()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->token());
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_GetLaunchTokenResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Response_GetLaunchTokenResponse*>(&from));
}

void Response_GetLaunchTokenResponse::MergeFrom(const Response_GetLaunchTokenResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.GetLaunchTokenResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_token()) {
      set_has_token();
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Response_GetLaunchTokenResponse::CopyFrom(const Response_GetLaunchTokenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.GetLaunchTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_GetLaunchTokenResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_GetLaunchTokenResponse::Swap(Response_GetLaunchTokenResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_GetLaunchTokenResponse::InternalSwap(Response_GetLaunchTokenResponse* other) {
  std::swap(errorcode_, other->errorcode_);
  token_.Swap(&other->token_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Response_GetLaunchTokenResponse::GetTypeName() const {
  return "aesm.message.Response.GetLaunchTokenResponse";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForResponse_ReportAttestationErrorResponse(
    Response_ReportAttestationErrorResponse* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_ReportAttestationErrorResponse::kErrorCodeFieldNumber;
const int Response_ReportAttestationErrorResponse::kPlatformUpdateInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_ReportAttestationErrorResponse::Response_ReportAttestationErrorResponse()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.ReportAttestationErrorResponse)
}

void Response_ReportAttestationErrorResponse::InitAsDefaultInstance() {
}

Response_ReportAttestationErrorResponse::Response_ReportAttestationErrorResponse(const Response_ReportAttestationErrorResponse& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.ReportAttestationErrorResponse)
}

void Response_ReportAttestationErrorResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 1u;
  platform_update_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_ReportAttestationErrorResponse::~Response_ReportAttestationErrorResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.ReportAttestationErrorResponse)
  SharedDtor();
}

void Response_ReportAttestationErrorResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_update_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Response_ReportAttestationErrorResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Response_ReportAttestationErrorResponse& Response_ReportAttestationErrorResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Response_ReportAttestationErrorResponse* Response_ReportAttestationErrorResponse::default_instance_ = NULL;

Response_ReportAttestationErrorResponse* Response_ReportAttestationErrorResponse::New(::google::protobuf::Arena* arena) const {
  Response_ReportAttestationErrorResponse* n = new Response_ReportAttestationErrorResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_ReportAttestationErrorResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.ReportAttestationErrorResponse)
  if (_has_bits_[0 / 32] & 3u) {
    errorcode_ = 1u;
    if (has_platform_update_info()) {
      platform_update_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Response_ReportAttestationErrorResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForResponse_ReportAttestationErrorResponse, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Response.ReportAttestationErrorResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_platform_update_info;
        break;
      }

      // optional bytes platform_update_info = 2;
      case 2: {
        if (tag == 18) {
         parse_platform_update_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_platform_update_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.ReportAttestationErrorResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.ReportAttestationErrorResponse)
  return false;
#undef DO_
}

void Response_ReportAttestationErrorResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.ReportAttestationErrorResponse)
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional bytes platform_update_info = 2;
  if (has_platform_update_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->platform_update_info(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.ReportAttestationErrorResponse)
}

int Response_ReportAttestationErrorResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.ReportAttestationErrorResponse)
  int total_size = 0;

  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  // optional bytes platform_update_info = 2;
  if (has_platform_update_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->platform_update_info());
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_ReportAttestationErrorResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Response_ReportAttestationErrorResponse*>(&from));
}

void Response_ReportAttestationErrorResponse::MergeFrom(const Response_ReportAttestationErrorResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.ReportAttestationErrorResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_platform_update_info()) {
      set_has_platform_update_info();
      platform_update_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_update_info_);
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Response_ReportAttestationErrorResponse::CopyFrom(const Response_ReportAttestationErrorResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.ReportAttestationErrorResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_ReportAttestationErrorResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_ReportAttestationErrorResponse::Swap(Response_ReportAttestationErrorResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_ReportAttestationErrorResponse::InternalSwap(Response_ReportAttestationErrorResponse* other) {
  std::swap(errorcode_, other->errorcode_);
  platform_update_info_.Swap(&other->platform_update_info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Response_ReportAttestationErrorResponse::GetTypeName() const {
  return "aesm.message.Response.ReportAttestationErrorResponse";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForResponse_CheckUpdateStatusResponse(
    Response_CheckUpdateStatusResponse* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_CheckUpdateStatusResponse::kErrorCodeFieldNumber;
const int Response_CheckUpdateStatusResponse::kPlatformUpdateInfoFieldNumber;
const int Response_CheckUpdateStatusResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_CheckUpdateStatusResponse::Response_CheckUpdateStatusResponse()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.CheckUpdateStatusResponse)
}

void Response_CheckUpdateStatusResponse::InitAsDefaultInstance() {
}

Response_CheckUpdateStatusResponse::Response_CheckUpdateStatusResponse(const Response_CheckUpdateStatusResponse& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.CheckUpdateStatusResponse)
}

void Response_CheckUpdateStatusResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 1u;
  platform_update_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_CheckUpdateStatusResponse::~Response_CheckUpdateStatusResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.CheckUpdateStatusResponse)
  SharedDtor();
}

void Response_CheckUpdateStatusResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_update_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Response_CheckUpdateStatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Response_CheckUpdateStatusResponse& Response_CheckUpdateStatusResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Response_CheckUpdateStatusResponse* Response_CheckUpdateStatusResponse::default_instance_ = NULL;

Response_CheckUpdateStatusResponse* Response_CheckUpdateStatusResponse::New(::google::protobuf::Arena* arena) const {
  Response_CheckUpdateStatusResponse* n = new Response_CheckUpdateStatusResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_CheckUpdateStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.CheckUpdateStatusResponse)
  if (_has_bits_[0 / 32] & 7u) {
    errorcode_ = 1u;
    if (has_platform_update_info()) {
      platform_update_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    status_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Response_CheckUpdateStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForResponse_CheckUpdateStatusResponse, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Response.CheckUpdateStatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_platform_update_info;
        break;
      }

      // optional bytes platform_update_info = 2;
      case 2: {
        if (tag == 18) {
         parse_platform_update_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_platform_update_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_status;
        break;
      }

      // optional uint32 status = 3;
      case 3: {
        if (tag == 24) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.CheckUpdateStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.CheckUpdateStatusResponse)
  return false;
#undef DO_
}

void Response_CheckUpdateStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.CheckUpdateStatusResponse)
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional bytes platform_update_info = 2;
  if (has_platform_update_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->platform_update_info(), output);
  }

  // optional uint32 status = 3;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->status(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.CheckUpdateStatusResponse)
}

int Response_CheckUpdateStatusResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.CheckUpdateStatusResponse)
  int total_size = 0;

  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  if (_has_bits_[1 / 32] & 6u) {
    // optional bytes platform_update_info = 2;
    if (has_platform_update_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->platform_update_info());
    }

    // optional uint32 status = 3;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->status());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_CheckUpdateStatusResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Response_CheckUpdateStatusResponse*>(&from));
}

void Response_CheckUpdateStatusResponse::MergeFrom(const Response_CheckUpdateStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.CheckUpdateStatusResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_platform_update_info()) {
      set_has_platform_update_info();
      platform_update_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platform_update_info_);
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Response_CheckUpdateStatusResponse::CopyFrom(const Response_CheckUpdateStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.CheckUpdateStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_CheckUpdateStatusResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_CheckUpdateStatusResponse::Swap(Response_CheckUpdateStatusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_CheckUpdateStatusResponse::InternalSwap(Response_CheckUpdateStatusResponse* other) {
  std::swap(errorcode_, other->errorcode_);
  platform_update_info_.Swap(&other->platform_update_info_);
  std::swap(status_, other->status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Response_CheckUpdateStatusResponse::GetTypeName() const {
  return "aesm.message.Response.CheckUpdateStatusResponse";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForResponse_GetWhiteListSizeResponse(
    Response_GetWhiteListSizeResponse* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_GetWhiteListSizeResponse::kErrorCodeFieldNumber;
const int Response_GetWhiteListSizeResponse::kWhiteListSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_GetWhiteListSizeResponse::Response_GetWhiteListSizeResponse()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.GetWhiteListSizeResponse)
}

void Response_GetWhiteListSizeResponse::InitAsDefaultInstance() {
}

Response_GetWhiteListSizeResponse::Response_GetWhiteListSizeResponse(const Response_GetWhiteListSizeResponse& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.GetWhiteListSizeResponse)
}

void Response_GetWhiteListSizeResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 1u;
  white_list_size_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_GetWhiteListSizeResponse::~Response_GetWhiteListSizeResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.GetWhiteListSizeResponse)
  SharedDtor();
}

void Response_GetWhiteListSizeResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Response_GetWhiteListSizeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Response_GetWhiteListSizeResponse& Response_GetWhiteListSizeResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Response_GetWhiteListSizeResponse* Response_GetWhiteListSizeResponse::default_instance_ = NULL;

Response_GetWhiteListSizeResponse* Response_GetWhiteListSizeResponse::New(::google::protobuf::Arena* arena) const {
  Response_GetWhiteListSizeResponse* n = new Response_GetWhiteListSizeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_GetWhiteListSizeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.GetWhiteListSizeResponse)
  if (_has_bits_[0 / 32] & 3u) {
    errorcode_ = 1u;
    white_list_size_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Response_GetWhiteListSizeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForResponse_GetWhiteListSizeResponse, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Response.GetWhiteListSizeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_white_list_size;
        break;
      }

      // optional uint32 white_list_size = 2;
      case 2: {
        if (tag == 16) {
         parse_white_list_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &white_list_size_)));
          set_has_white_list_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.GetWhiteListSizeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.GetWhiteListSizeResponse)
  return false;
#undef DO_
}

void Response_GetWhiteListSizeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.GetWhiteListSizeResponse)
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional uint32 white_list_size = 2;
  if (has_white_list_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->white_list_size(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.GetWhiteListSizeResponse)
}

int Response_GetWhiteListSizeResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.GetWhiteListSizeResponse)
  int total_size = 0;

  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  // optional uint32 white_list_size = 2;
  if (has_white_list_size()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->white_list_size());
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_GetWhiteListSizeResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Response_GetWhiteListSizeResponse*>(&from));
}

void Response_GetWhiteListSizeResponse::MergeFrom(const Response_GetWhiteListSizeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.GetWhiteListSizeResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_white_list_size()) {
      set_white_list_size(from.white_list_size());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Response_GetWhiteListSizeResponse::CopyFrom(const Response_GetWhiteListSizeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.GetWhiteListSizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_GetWhiteListSizeResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_GetWhiteListSizeResponse::Swap(Response_GetWhiteListSizeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_GetWhiteListSizeResponse::InternalSwap(Response_GetWhiteListSizeResponse* other) {
  std::swap(errorcode_, other->errorcode_);
  std::swap(white_list_size_, other->white_list_size_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Response_GetWhiteListSizeResponse::GetTypeName() const {
  return "aesm.message.Response.GetWhiteListSizeResponse";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForResponse_GetWhiteListResponse(
    Response_GetWhiteListResponse* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_GetWhiteListResponse::kErrorCodeFieldNumber;
const int Response_GetWhiteListResponse::kWhiteListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_GetWhiteListResponse::Response_GetWhiteListResponse()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.GetWhiteListResponse)
}

void Response_GetWhiteListResponse::InitAsDefaultInstance() {
}

Response_GetWhiteListResponse::Response_GetWhiteListResponse(const Response_GetWhiteListResponse& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.GetWhiteListResponse)
}

void Response_GetWhiteListResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 1u;
  white_list_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_GetWhiteListResponse::~Response_GetWhiteListResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.GetWhiteListResponse)
  SharedDtor();
}

void Response_GetWhiteListResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  white_list_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Response_GetWhiteListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Response_GetWhiteListResponse& Response_GetWhiteListResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Response_GetWhiteListResponse* Response_GetWhiteListResponse::default_instance_ = NULL;

Response_GetWhiteListResponse* Response_GetWhiteListResponse::New(::google::protobuf::Arena* arena) const {
  Response_GetWhiteListResponse* n = new Response_GetWhiteListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_GetWhiteListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.GetWhiteListResponse)
  if (_has_bits_[0 / 32] & 3u) {
    errorcode_ = 1u;
    if (has_white_list()) {
      white_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Response_GetWhiteListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForResponse_GetWhiteListResponse, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Response.GetWhiteListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_white_list;
        break;
      }

      // optional bytes white_list = 2;
      case 2: {
        if (tag == 18) {
         parse_white_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_white_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.GetWhiteListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.GetWhiteListResponse)
  return false;
#undef DO_
}

void Response_GetWhiteListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.GetWhiteListResponse)
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional bytes white_list = 2;
  if (has_white_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->white_list(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.GetWhiteListResponse)
}

int Response_GetWhiteListResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.GetWhiteListResponse)
  int total_size = 0;

  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  // optional bytes white_list = 2;
  if (has_white_list()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->white_list());
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_GetWhiteListResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Response_GetWhiteListResponse*>(&from));
}

void Response_GetWhiteListResponse::MergeFrom(const Response_GetWhiteListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.GetWhiteListResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_white_list()) {
      set_has_white_list();
      white_list_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.white_list_);
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Response_GetWhiteListResponse::CopyFrom(const Response_GetWhiteListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.GetWhiteListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_GetWhiteListResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_GetWhiteListResponse::Swap(Response_GetWhiteListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_GetWhiteListResponse::InternalSwap(Response_GetWhiteListResponse* other) {
  std::swap(errorcode_, other->errorcode_);
  white_list_.Swap(&other->white_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Response_GetWhiteListResponse::GetTypeName() const {
  return "aesm.message.Response.GetWhiteListResponse";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForResponse_SGXGetExtendedEpidGroupIdResponse(
    Response_SGXGetExtendedEpidGroupIdResponse* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_SGXGetExtendedEpidGroupIdResponse::kErrorCodeFieldNumber;
const int Response_SGXGetExtendedEpidGroupIdResponse::kXGroupIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_SGXGetExtendedEpidGroupIdResponse::Response_SGXGetExtendedEpidGroupIdResponse()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
}

void Response_SGXGetExtendedEpidGroupIdResponse::InitAsDefaultInstance() {
}

Response_SGXGetExtendedEpidGroupIdResponse::Response_SGXGetExtendedEpidGroupIdResponse(const Response_SGXGetExtendedEpidGroupIdResponse& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
}

void Response_SGXGetExtendedEpidGroupIdResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 1u;
  x_group_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_SGXGetExtendedEpidGroupIdResponse::~Response_SGXGetExtendedEpidGroupIdResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
  SharedDtor();
}

void Response_SGXGetExtendedEpidGroupIdResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Response_SGXGetExtendedEpidGroupIdResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Response_SGXGetExtendedEpidGroupIdResponse& Response_SGXGetExtendedEpidGroupIdResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Response_SGXGetExtendedEpidGroupIdResponse* Response_SGXGetExtendedEpidGroupIdResponse::default_instance_ = NULL;

Response_SGXGetExtendedEpidGroupIdResponse* Response_SGXGetExtendedEpidGroupIdResponse::New(::google::protobuf::Arena* arena) const {
  Response_SGXGetExtendedEpidGroupIdResponse* n = new Response_SGXGetExtendedEpidGroupIdResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_SGXGetExtendedEpidGroupIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
  if (_has_bits_[0 / 32] & 3u) {
    errorcode_ = 1u;
    x_group_id_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Response_SGXGetExtendedEpidGroupIdResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForResponse_SGXGetExtendedEpidGroupIdResponse, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_x_group_id;
        break;
      }

      // optional uint32 x_group_id = 2;
      case 2: {
        if (tag == 16) {
         parse_x_group_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_group_id_)));
          set_has_x_group_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
  return false;
#undef DO_
}

void Response_SGXGetExtendedEpidGroupIdResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional uint32 x_group_id = 2;
  if (has_x_group_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->x_group_id(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
}

int Response_SGXGetExtendedEpidGroupIdResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
  int total_size = 0;

  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  // optional uint32 x_group_id = 2;
  if (has_x_group_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->x_group_id());
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_SGXGetExtendedEpidGroupIdResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Response_SGXGetExtendedEpidGroupIdResponse*>(&from));
}

void Response_SGXGetExtendedEpidGroupIdResponse::MergeFrom(const Response_SGXGetExtendedEpidGroupIdResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_x_group_id()) {
      set_x_group_id(from.x_group_id());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Response_SGXGetExtendedEpidGroupIdResponse::CopyFrom(const Response_SGXGetExtendedEpidGroupIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_SGXGetExtendedEpidGroupIdResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_SGXGetExtendedEpidGroupIdResponse::Swap(Response_SGXGetExtendedEpidGroupIdResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_SGXGetExtendedEpidGroupIdResponse::InternalSwap(Response_SGXGetExtendedEpidGroupIdResponse* other) {
  std::swap(errorcode_, other->errorcode_);
  std::swap(x_group_id_, other->x_group_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Response_SGXGetExtendedEpidGroupIdResponse::GetTypeName() const {
  return "aesm.message.Response.SGXGetExtendedEpidGroupIdResponse";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForResponse_SGXSwitchExtendedEpidGroupResponse(
    Response_SGXSwitchExtendedEpidGroupResponse* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_SGXSwitchExtendedEpidGroupResponse::kErrorCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_SGXSwitchExtendedEpidGroupResponse::Response_SGXSwitchExtendedEpidGroupResponse()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
}

void Response_SGXSwitchExtendedEpidGroupResponse::InitAsDefaultInstance() {
}

Response_SGXSwitchExtendedEpidGroupResponse::Response_SGXSwitchExtendedEpidGroupResponse(const Response_SGXSwitchExtendedEpidGroupResponse& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
}

void Response_SGXSwitchExtendedEpidGroupResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 1u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_SGXSwitchExtendedEpidGroupResponse::~Response_SGXSwitchExtendedEpidGroupResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
  SharedDtor();
}

void Response_SGXSwitchExtendedEpidGroupResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Response_SGXSwitchExtendedEpidGroupResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Response_SGXSwitchExtendedEpidGroupResponse& Response_SGXSwitchExtendedEpidGroupResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Response_SGXSwitchExtendedEpidGroupResponse* Response_SGXSwitchExtendedEpidGroupResponse::default_instance_ = NULL;

Response_SGXSwitchExtendedEpidGroupResponse* Response_SGXSwitchExtendedEpidGroupResponse::New(::google::protobuf::Arena* arena) const {
  Response_SGXSwitchExtendedEpidGroupResponse* n = new Response_SGXSwitchExtendedEpidGroupResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_SGXSwitchExtendedEpidGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
  errorcode_ = 1u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Response_SGXSwitchExtendedEpidGroupResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForResponse_SGXSwitchExtendedEpidGroupResponse, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
  return false;
#undef DO_
}

void Response_SGXSwitchExtendedEpidGroupResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
}

int Response_SGXSwitchExtendedEpidGroupResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
  int total_size = 0;

  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_SGXSwitchExtendedEpidGroupResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Response_SGXSwitchExtendedEpidGroupResponse*>(&from));
}

void Response_SGXSwitchExtendedEpidGroupResponse::MergeFrom(const Response_SGXSwitchExtendedEpidGroupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Response_SGXSwitchExtendedEpidGroupResponse::CopyFrom(const Response_SGXSwitchExtendedEpidGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_SGXSwitchExtendedEpidGroupResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_SGXSwitchExtendedEpidGroupResponse::Swap(Response_SGXSwitchExtendedEpidGroupResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_SGXSwitchExtendedEpidGroupResponse::InternalSwap(Response_SGXSwitchExtendedEpidGroupResponse* other) {
  std::swap(errorcode_, other->errorcode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Response_SGXSwitchExtendedEpidGroupResponse::GetTypeName() const {
  return "aesm.message.Response.SGXSwitchExtendedEpidGroupResponse";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForResponse_SGXRegisterResponse(
    Response_SGXRegisterResponse* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_SGXRegisterResponse::kErrorCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_SGXRegisterResponse::Response_SGXRegisterResponse()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.SGXRegisterResponse)
}

void Response_SGXRegisterResponse::InitAsDefaultInstance() {
}

Response_SGXRegisterResponse::Response_SGXRegisterResponse(const Response_SGXRegisterResponse& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.SGXRegisterResponse)
}

void Response_SGXRegisterResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 1u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_SGXRegisterResponse::~Response_SGXRegisterResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.SGXRegisterResponse)
  SharedDtor();
}

void Response_SGXRegisterResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Response_SGXRegisterResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Response_SGXRegisterResponse& Response_SGXRegisterResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Response_SGXRegisterResponse* Response_SGXRegisterResponse::default_instance_ = NULL;

Response_SGXRegisterResponse* Response_SGXRegisterResponse::New(::google::protobuf::Arena* arena) const {
  Response_SGXRegisterResponse* n = new Response_SGXRegisterResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_SGXRegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.SGXRegisterResponse)
  errorcode_ = 1u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Response_SGXRegisterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForResponse_SGXRegisterResponse, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Response.SGXRegisterResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.SGXRegisterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.SGXRegisterResponse)
  return false;
#undef DO_
}

void Response_SGXRegisterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.SGXRegisterResponse)
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.SGXRegisterResponse)
}

int Response_SGXRegisterResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.SGXRegisterResponse)
  int total_size = 0;

  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_SGXRegisterResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Response_SGXRegisterResponse*>(&from));
}

void Response_SGXRegisterResponse::MergeFrom(const Response_SGXRegisterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.SGXRegisterResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Response_SGXRegisterResponse::CopyFrom(const Response_SGXRegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.SGXRegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_SGXRegisterResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_SGXRegisterResponse::Swap(Response_SGXRegisterResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_SGXRegisterResponse::InternalSwap(Response_SGXRegisterResponse* other) {
  std::swap(errorcode_, other->errorcode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Response_SGXRegisterResponse::GetTypeName() const {
  return "aesm.message.Response.SGXRegisterResponse";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForResponse_SelectAttKeyIDResponse(
    Response_SelectAttKeyIDResponse* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_SelectAttKeyIDResponse::kErrorCodeFieldNumber;
const int Response_SelectAttKeyIDResponse::kSelectedAttKeyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_SelectAttKeyIDResponse::Response_SelectAttKeyIDResponse()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.SelectAttKeyIDResponse)
}

void Response_SelectAttKeyIDResponse::InitAsDefaultInstance() {
}

Response_SelectAttKeyIDResponse::Response_SelectAttKeyIDResponse(const Response_SelectAttKeyIDResponse& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.SelectAttKeyIDResponse)
}

void Response_SelectAttKeyIDResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 1u;
  selected_att_key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_SelectAttKeyIDResponse::~Response_SelectAttKeyIDResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.SelectAttKeyIDResponse)
  SharedDtor();
}

void Response_SelectAttKeyIDResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  selected_att_key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Response_SelectAttKeyIDResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Response_SelectAttKeyIDResponse& Response_SelectAttKeyIDResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Response_SelectAttKeyIDResponse* Response_SelectAttKeyIDResponse::default_instance_ = NULL;

Response_SelectAttKeyIDResponse* Response_SelectAttKeyIDResponse::New(::google::protobuf::Arena* arena) const {
  Response_SelectAttKeyIDResponse* n = new Response_SelectAttKeyIDResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_SelectAttKeyIDResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.SelectAttKeyIDResponse)
  if (_has_bits_[0 / 32] & 3u) {
    errorcode_ = 1u;
    if (has_selected_att_key_id()) {
      selected_att_key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Response_SelectAttKeyIDResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForResponse_SelectAttKeyIDResponse, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Response.SelectAttKeyIDResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_selected_att_key_id;
        break;
      }

      // optional bytes selected_att_key_id = 2;
      case 2: {
        if (tag == 18) {
         parse_selected_att_key_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_selected_att_key_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.SelectAttKeyIDResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.SelectAttKeyIDResponse)
  return false;
#undef DO_
}

void Response_SelectAttKeyIDResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.SelectAttKeyIDResponse)
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional bytes selected_att_key_id = 2;
  if (has_selected_att_key_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->selected_att_key_id(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.SelectAttKeyIDResponse)
}

int Response_SelectAttKeyIDResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.SelectAttKeyIDResponse)
  int total_size = 0;

  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  // optional bytes selected_att_key_id = 2;
  if (has_selected_att_key_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->selected_att_key_id());
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_SelectAttKeyIDResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Response_SelectAttKeyIDResponse*>(&from));
}

void Response_SelectAttKeyIDResponse::MergeFrom(const Response_SelectAttKeyIDResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.SelectAttKeyIDResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_selected_att_key_id()) {
      set_has_selected_att_key_id();
      selected_att_key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.selected_att_key_id_);
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Response_SelectAttKeyIDResponse::CopyFrom(const Response_SelectAttKeyIDResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.SelectAttKeyIDResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_SelectAttKeyIDResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_SelectAttKeyIDResponse::Swap(Response_SelectAttKeyIDResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_SelectAttKeyIDResponse::InternalSwap(Response_SelectAttKeyIDResponse* other) {
  std::swap(errorcode_, other->errorcode_);
  selected_att_key_id_.Swap(&other->selected_att_key_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Response_SelectAttKeyIDResponse::GetTypeName() const {
  return "aesm.message.Response.SelectAttKeyIDResponse";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForResponse_InitQuoteExResponse(
    Response_InitQuoteExResponse* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_InitQuoteExResponse::kErrorCodeFieldNumber;
const int Response_InitQuoteExResponse::kTargetInfoFieldNumber;
const int Response_InitQuoteExResponse::kPubKeyIdSizeFieldNumber;
const int Response_InitQuoteExResponse::kPubKeyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_InitQuoteExResponse::Response_InitQuoteExResponse()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.InitQuoteExResponse)
}

void Response_InitQuoteExResponse::InitAsDefaultInstance() {
}

Response_InitQuoteExResponse::Response_InitQuoteExResponse(const Response_InitQuoteExResponse& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.InitQuoteExResponse)
}

void Response_InitQuoteExResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 1u;
  target_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pub_key_id_size_ = GOOGLE_ULONGLONG(0);
  pub_key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_InitQuoteExResponse::~Response_InitQuoteExResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.InitQuoteExResponse)
  SharedDtor();
}

void Response_InitQuoteExResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pub_key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Response_InitQuoteExResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Response_InitQuoteExResponse& Response_InitQuoteExResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Response_InitQuoteExResponse* Response_InitQuoteExResponse::default_instance_ = NULL;

Response_InitQuoteExResponse* Response_InitQuoteExResponse::New(::google::protobuf::Arena* arena) const {
  Response_InitQuoteExResponse* n = new Response_InitQuoteExResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_InitQuoteExResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.InitQuoteExResponse)
  if (_has_bits_[0 / 32] & 15u) {
    errorcode_ = 1u;
    if (has_target_info()) {
      target_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    pub_key_id_size_ = GOOGLE_ULONGLONG(0);
    if (has_pub_key_id()) {
      pub_key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Response_InitQuoteExResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForResponse_InitQuoteExResponse, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Response.InitQuoteExResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_target_info;
        break;
      }

      // optional bytes target_info = 2;
      case 2: {
        if (tag == 18) {
         parse_target_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_target_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pub_key_id_size;
        break;
      }

      // optional uint64 pub_key_id_size = 3;
      case 3: {
        if (tag == 24) {
         parse_pub_key_id_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pub_key_id_size_)));
          set_has_pub_key_id_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_pub_key_id;
        break;
      }

      // optional bytes pub_key_id = 4;
      case 4: {
        if (tag == 34) {
         parse_pub_key_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pub_key_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.InitQuoteExResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.InitQuoteExResponse)
  return false;
#undef DO_
}

void Response_InitQuoteExResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.InitQuoteExResponse)
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional bytes target_info = 2;
  if (has_target_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->target_info(), output);
  }

  // optional uint64 pub_key_id_size = 3;
  if (has_pub_key_id_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->pub_key_id_size(), output);
  }

  // optional bytes pub_key_id = 4;
  if (has_pub_key_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->pub_key_id(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.InitQuoteExResponse)
}

int Response_InitQuoteExResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.InitQuoteExResponse)
  int total_size = 0;

  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  if (_has_bits_[1 / 32] & 14u) {
    // optional bytes target_info = 2;
    if (has_target_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->target_info());
    }

    // optional uint64 pub_key_id_size = 3;
    if (has_pub_key_id_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->pub_key_id_size());
    }

    // optional bytes pub_key_id = 4;
    if (has_pub_key_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pub_key_id());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_InitQuoteExResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Response_InitQuoteExResponse*>(&from));
}

void Response_InitQuoteExResponse::MergeFrom(const Response_InitQuoteExResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.InitQuoteExResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_target_info()) {
      set_has_target_info();
      target_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_info_);
    }
    if (from.has_pub_key_id_size()) {
      set_pub_key_id_size(from.pub_key_id_size());
    }
    if (from.has_pub_key_id()) {
      set_has_pub_key_id();
      pub_key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pub_key_id_);
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Response_InitQuoteExResponse::CopyFrom(const Response_InitQuoteExResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.InitQuoteExResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_InitQuoteExResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_InitQuoteExResponse::Swap(Response_InitQuoteExResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_InitQuoteExResponse::InternalSwap(Response_InitQuoteExResponse* other) {
  std::swap(errorcode_, other->errorcode_);
  target_info_.Swap(&other->target_info_);
  std::swap(pub_key_id_size_, other->pub_key_id_size_);
  pub_key_id_.Swap(&other->pub_key_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Response_InitQuoteExResponse::GetTypeName() const {
  return "aesm.message.Response.InitQuoteExResponse";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForResponse_GetQuoteSizeExResponse(
    Response_GetQuoteSizeExResponse* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_GetQuoteSizeExResponse::kErrorCodeFieldNumber;
const int Response_GetQuoteSizeExResponse::kQuoteSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_GetQuoteSizeExResponse::Response_GetQuoteSizeExResponse()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.GetQuoteSizeExResponse)
}

void Response_GetQuoteSizeExResponse::InitAsDefaultInstance() {
}

Response_GetQuoteSizeExResponse::Response_GetQuoteSizeExResponse(const Response_GetQuoteSizeExResponse& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.GetQuoteSizeExResponse)
}

void Response_GetQuoteSizeExResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 1u;
  quote_size_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_GetQuoteSizeExResponse::~Response_GetQuoteSizeExResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.GetQuoteSizeExResponse)
  SharedDtor();
}

void Response_GetQuoteSizeExResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Response_GetQuoteSizeExResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Response_GetQuoteSizeExResponse& Response_GetQuoteSizeExResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Response_GetQuoteSizeExResponse* Response_GetQuoteSizeExResponse::default_instance_ = NULL;

Response_GetQuoteSizeExResponse* Response_GetQuoteSizeExResponse::New(::google::protobuf::Arena* arena) const {
  Response_GetQuoteSizeExResponse* n = new Response_GetQuoteSizeExResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_GetQuoteSizeExResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.GetQuoteSizeExResponse)
  if (_has_bits_[0 / 32] & 3u) {
    errorcode_ = 1u;
    quote_size_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Response_GetQuoteSizeExResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForResponse_GetQuoteSizeExResponse, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Response.GetQuoteSizeExResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_quote_size;
        break;
      }

      // optional uint32 quote_size = 2;
      case 2: {
        if (tag == 16) {
         parse_quote_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quote_size_)));
          set_has_quote_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.GetQuoteSizeExResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.GetQuoteSizeExResponse)
  return false;
#undef DO_
}

void Response_GetQuoteSizeExResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.GetQuoteSizeExResponse)
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional uint32 quote_size = 2;
  if (has_quote_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->quote_size(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.GetQuoteSizeExResponse)
}

int Response_GetQuoteSizeExResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.GetQuoteSizeExResponse)
  int total_size = 0;

  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  // optional uint32 quote_size = 2;
  if (has_quote_size()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quote_size());
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_GetQuoteSizeExResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Response_GetQuoteSizeExResponse*>(&from));
}

void Response_GetQuoteSizeExResponse::MergeFrom(const Response_GetQuoteSizeExResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.GetQuoteSizeExResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_quote_size()) {
      set_quote_size(from.quote_size());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Response_GetQuoteSizeExResponse::CopyFrom(const Response_GetQuoteSizeExResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.GetQuoteSizeExResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_GetQuoteSizeExResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_GetQuoteSizeExResponse::Swap(Response_GetQuoteSizeExResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_GetQuoteSizeExResponse::InternalSwap(Response_GetQuoteSizeExResponse* other) {
  std::swap(errorcode_, other->errorcode_);
  std::swap(quote_size_, other->quote_size_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Response_GetQuoteSizeExResponse::GetTypeName() const {
  return "aesm.message.Response.GetQuoteSizeExResponse";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForResponse_GetQuoteExResponse(
    Response_GetQuoteExResponse* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_GetQuoteExResponse::kErrorCodeFieldNumber;
const int Response_GetQuoteExResponse::kQuoteFieldNumber;
const int Response_GetQuoteExResponse::kQeReportInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_GetQuoteExResponse::Response_GetQuoteExResponse()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.GetQuoteExResponse)
}

void Response_GetQuoteExResponse::InitAsDefaultInstance() {
}

Response_GetQuoteExResponse::Response_GetQuoteExResponse(const Response_GetQuoteExResponse& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.GetQuoteExResponse)
}

void Response_GetQuoteExResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 1u;
  quote_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qe_report_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_GetQuoteExResponse::~Response_GetQuoteExResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.GetQuoteExResponse)
  SharedDtor();
}

void Response_GetQuoteExResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quote_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qe_report_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Response_GetQuoteExResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Response_GetQuoteExResponse& Response_GetQuoteExResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Response_GetQuoteExResponse* Response_GetQuoteExResponse::default_instance_ = NULL;

Response_GetQuoteExResponse* Response_GetQuoteExResponse::New(::google::protobuf::Arena* arena) const {
  Response_GetQuoteExResponse* n = new Response_GetQuoteExResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_GetQuoteExResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.GetQuoteExResponse)
  if (_has_bits_[0 / 32] & 7u) {
    errorcode_ = 1u;
    if (has_quote()) {
      quote_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_qe_report_info()) {
      qe_report_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Response_GetQuoteExResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForResponse_GetQuoteExResponse, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Response.GetQuoteExResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_quote;
        break;
      }

      // optional bytes quote = 2;
      case 2: {
        if (tag == 18) {
         parse_quote:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_quote()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_qe_report_info;
        break;
      }

      // optional bytes qe_report_info = 3;
      case 3: {
        if (tag == 26) {
         parse_qe_report_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_qe_report_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.GetQuoteExResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.GetQuoteExResponse)
  return false;
#undef DO_
}

void Response_GetQuoteExResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.GetQuoteExResponse)
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional bytes quote = 2;
  if (has_quote()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->quote(), output);
  }

  // optional bytes qe_report_info = 3;
  if (has_qe_report_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->qe_report_info(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.GetQuoteExResponse)
}

int Response_GetQuoteExResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.GetQuoteExResponse)
  int total_size = 0;

  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  if (_has_bits_[1 / 32] & 6u) {
    // optional bytes quote = 2;
    if (has_quote()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->quote());
    }

    // optional bytes qe_report_info = 3;
    if (has_qe_report_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->qe_report_info());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_GetQuoteExResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Response_GetQuoteExResponse*>(&from));
}

void Response_GetQuoteExResponse::MergeFrom(const Response_GetQuoteExResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.GetQuoteExResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_quote()) {
      set_has_quote();
      quote_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.quote_);
    }
    if (from.has_qe_report_info()) {
      set_has_qe_report_info();
      qe_report_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qe_report_info_);
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Response_GetQuoteExResponse::CopyFrom(const Response_GetQuoteExResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.GetQuoteExResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_GetQuoteExResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_GetQuoteExResponse::Swap(Response_GetQuoteExResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_GetQuoteExResponse::InternalSwap(Response_GetQuoteExResponse* other) {
  std::swap(errorcode_, other->errorcode_);
  quote_.Swap(&other->quote_);
  qe_report_info_.Swap(&other->qe_report_info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Response_GetQuoteExResponse::GetTypeName() const {
  return "aesm.message.Response.GetQuoteExResponse";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForResponse_UnsupportedRequestResponse(
    Response_UnsupportedRequestResponse* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_UnsupportedRequestResponse::kErrorCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_UnsupportedRequestResponse::Response_UnsupportedRequestResponse()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.UnsupportedRequestResponse)
}

void Response_UnsupportedRequestResponse::InitAsDefaultInstance() {
}

Response_UnsupportedRequestResponse::Response_UnsupportedRequestResponse(const Response_UnsupportedRequestResponse& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.UnsupportedRequestResponse)
}

void Response_UnsupportedRequestResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 1u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_UnsupportedRequestResponse::~Response_UnsupportedRequestResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.UnsupportedRequestResponse)
  SharedDtor();
}

void Response_UnsupportedRequestResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Response_UnsupportedRequestResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Response_UnsupportedRequestResponse& Response_UnsupportedRequestResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Response_UnsupportedRequestResponse* Response_UnsupportedRequestResponse::default_instance_ = NULL;

Response_UnsupportedRequestResponse* Response_UnsupportedRequestResponse::New(::google::protobuf::Arena* arena) const {
  Response_UnsupportedRequestResponse* n = new Response_UnsupportedRequestResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_UnsupportedRequestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.UnsupportedRequestResponse)
  errorcode_ = 1u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Response_UnsupportedRequestResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForResponse_UnsupportedRequestResponse, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Response.UnsupportedRequestResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.UnsupportedRequestResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.UnsupportedRequestResponse)
  return false;
#undef DO_
}

void Response_UnsupportedRequestResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.UnsupportedRequestResponse)
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.UnsupportedRequestResponse)
}

int Response_UnsupportedRequestResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.UnsupportedRequestResponse)
  int total_size = 0;

  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_UnsupportedRequestResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Response_UnsupportedRequestResponse*>(&from));
}

void Response_UnsupportedRequestResponse::MergeFrom(const Response_UnsupportedRequestResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.UnsupportedRequestResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Response_UnsupportedRequestResponse::CopyFrom(const Response_UnsupportedRequestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.UnsupportedRequestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_UnsupportedRequestResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_UnsupportedRequestResponse::Swap(Response_UnsupportedRequestResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_UnsupportedRequestResponse::InternalSwap(Response_UnsupportedRequestResponse* other) {
  std::swap(errorcode_, other->errorcode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Response_UnsupportedRequestResponse::GetTypeName() const {
  return "aesm.message.Response.UnsupportedRequestResponse";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForResponse_GetSupportedAttKeyIDNumResponse(
    Response_GetSupportedAttKeyIDNumResponse* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_GetSupportedAttKeyIDNumResponse::kErrorCodeFieldNumber;
const int Response_GetSupportedAttKeyIDNumResponse::kAttKeyIdNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_GetSupportedAttKeyIDNumResponse::Response_GetSupportedAttKeyIDNumResponse()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.GetSupportedAttKeyIDNumResponse)
}

void Response_GetSupportedAttKeyIDNumResponse::InitAsDefaultInstance() {
}

Response_GetSupportedAttKeyIDNumResponse::Response_GetSupportedAttKeyIDNumResponse(const Response_GetSupportedAttKeyIDNumResponse& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.GetSupportedAttKeyIDNumResponse)
}

void Response_GetSupportedAttKeyIDNumResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 1u;
  att_key_id_num_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_GetSupportedAttKeyIDNumResponse::~Response_GetSupportedAttKeyIDNumResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.GetSupportedAttKeyIDNumResponse)
  SharedDtor();
}

void Response_GetSupportedAttKeyIDNumResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Response_GetSupportedAttKeyIDNumResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Response_GetSupportedAttKeyIDNumResponse& Response_GetSupportedAttKeyIDNumResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Response_GetSupportedAttKeyIDNumResponse* Response_GetSupportedAttKeyIDNumResponse::default_instance_ = NULL;

Response_GetSupportedAttKeyIDNumResponse* Response_GetSupportedAttKeyIDNumResponse::New(::google::protobuf::Arena* arena) const {
  Response_GetSupportedAttKeyIDNumResponse* n = new Response_GetSupportedAttKeyIDNumResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_GetSupportedAttKeyIDNumResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.GetSupportedAttKeyIDNumResponse)
  if (_has_bits_[0 / 32] & 3u) {
    errorcode_ = 1u;
    att_key_id_num_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Response_GetSupportedAttKeyIDNumResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForResponse_GetSupportedAttKeyIDNumResponse, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Response.GetSupportedAttKeyIDNumResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_att_key_id_num;
        break;
      }

      // optional uint32 att_key_id_num = 2;
      case 2: {
        if (tag == 16) {
         parse_att_key_id_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &att_key_id_num_)));
          set_has_att_key_id_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.GetSupportedAttKeyIDNumResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.GetSupportedAttKeyIDNumResponse)
  return false;
#undef DO_
}

void Response_GetSupportedAttKeyIDNumResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.GetSupportedAttKeyIDNumResponse)
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional uint32 att_key_id_num = 2;
  if (has_att_key_id_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->att_key_id_num(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.GetSupportedAttKeyIDNumResponse)
}

int Response_GetSupportedAttKeyIDNumResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.GetSupportedAttKeyIDNumResponse)
  int total_size = 0;

  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  // optional uint32 att_key_id_num = 2;
  if (has_att_key_id_num()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->att_key_id_num());
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_GetSupportedAttKeyIDNumResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Response_GetSupportedAttKeyIDNumResponse*>(&from));
}

void Response_GetSupportedAttKeyIDNumResponse::MergeFrom(const Response_GetSupportedAttKeyIDNumResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.GetSupportedAttKeyIDNumResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_att_key_id_num()) {
      set_att_key_id_num(from.att_key_id_num());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Response_GetSupportedAttKeyIDNumResponse::CopyFrom(const Response_GetSupportedAttKeyIDNumResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.GetSupportedAttKeyIDNumResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_GetSupportedAttKeyIDNumResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_GetSupportedAttKeyIDNumResponse::Swap(Response_GetSupportedAttKeyIDNumResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_GetSupportedAttKeyIDNumResponse::InternalSwap(Response_GetSupportedAttKeyIDNumResponse* other) {
  std::swap(errorcode_, other->errorcode_);
  std::swap(att_key_id_num_, other->att_key_id_num_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Response_GetSupportedAttKeyIDNumResponse::GetTypeName() const {
  return "aesm.message.Response.GetSupportedAttKeyIDNumResponse";
}


// -------------------------------------------------------------------

static ::std::string* MutableUnknownFieldsForResponse_GetSupportedAttKeyIDsResponse(
    Response_GetSupportedAttKeyIDsResponse* ptr) {
  return ptr->mutable_unknown_fields();
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_GetSupportedAttKeyIDsResponse::kErrorCodeFieldNumber;
const int Response_GetSupportedAttKeyIDsResponse::kAttKeyIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_GetSupportedAttKeyIDsResponse::Response_GetSupportedAttKeyIDsResponse()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response.GetSupportedAttKeyIDsResponse)
}

void Response_GetSupportedAttKeyIDsResponse::InitAsDefaultInstance() {
}

Response_GetSupportedAttKeyIDsResponse::Response_GetSupportedAttKeyIDsResponse(const Response_GetSupportedAttKeyIDsResponse& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response.GetSupportedAttKeyIDsResponse)
}

void Response_GetSupportedAttKeyIDsResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errorcode_ = 1u;
  att_key_ids_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_GetSupportedAttKeyIDsResponse::~Response_GetSupportedAttKeyIDsResponse() {
  // @@protoc_insertion_point(destructor:aesm.message.Response.GetSupportedAttKeyIDsResponse)
  SharedDtor();
}

void Response_GetSupportedAttKeyIDsResponse::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  att_key_ids_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Response_GetSupportedAttKeyIDsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Response_GetSupportedAttKeyIDsResponse& Response_GetSupportedAttKeyIDsResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Response_GetSupportedAttKeyIDsResponse* Response_GetSupportedAttKeyIDsResponse::default_instance_ = NULL;

Response_GetSupportedAttKeyIDsResponse* Response_GetSupportedAttKeyIDsResponse::New(::google::protobuf::Arena* arena) const {
  Response_GetSupportedAttKeyIDsResponse* n = new Response_GetSupportedAttKeyIDsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_GetSupportedAttKeyIDsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response.GetSupportedAttKeyIDsResponse)
  if (_has_bits_[0 / 32] & 3u) {
    errorcode_ = 1u;
    if (has_att_key_ids()) {
      att_key_ids_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Response_GetSupportedAttKeyIDsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForResponse_GetSupportedAttKeyIDsResponse, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Response.GetSupportedAttKeyIDsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 errorCode = 1 [default = 1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &errorcode_)));
          set_has_errorcode();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_att_key_ids;
        break;
      }

      // optional bytes att_key_ids = 2;
      case 2: {
        if (tag == 18) {
         parse_att_key_ids:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_att_key_ids()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response.GetSupportedAttKeyIDsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response.GetSupportedAttKeyIDsResponse)
  return false;
#undef DO_
}

void Response_GetSupportedAttKeyIDsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response.GetSupportedAttKeyIDsResponse)
  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->errorcode(), output);
  }

  // optional bytes att_key_ids = 2;
  if (has_att_key_ids()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->att_key_ids(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Response.GetSupportedAttKeyIDsResponse)
}

int Response_GetSupportedAttKeyIDsResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response.GetSupportedAttKeyIDsResponse)
  int total_size = 0;

  // required uint32 errorCode = 1 [default = 1];
  if (has_errorcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->errorcode());
  }
  // optional bytes att_key_ids = 2;
  if (has_att_key_ids()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->att_key_ids());
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_GetSupportedAttKeyIDsResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Response_GetSupportedAttKeyIDsResponse*>(&from));
}

void Response_GetSupportedAttKeyIDsResponse::MergeFrom(const Response_GetSupportedAttKeyIDsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response.GetSupportedAttKeyIDsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_errorcode()) {
      set_errorcode(from.errorcode());
    }
    if (from.has_att_key_ids()) {
      set_has_att_key_ids();
      att_key_ids_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.att_key_ids_);
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Response_GetSupportedAttKeyIDsResponse::CopyFrom(const Response_GetSupportedAttKeyIDsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response.GetSupportedAttKeyIDsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_GetSupportedAttKeyIDsResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_GetSupportedAttKeyIDsResponse::Swap(Response_GetSupportedAttKeyIDsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_GetSupportedAttKeyIDsResponse::InternalSwap(Response_GetSupportedAttKeyIDsResponse* other) {
  std::swap(errorcode_, other->errorcode_);
  att_key_ids_.Swap(&other->att_key_ids_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Response_GetSupportedAttKeyIDsResponse::GetTypeName() const {
  return "aesm.message.Response.GetSupportedAttKeyIDsResponse";
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kInitQuoteResFieldNumber;
const int Response::kGetQuoteResFieldNumber;
const int Response::kGetLicTokenResFieldNumber;
const int Response::kReportErrResFieldNumber;
const int Response::kGetWhiteListSizeResFieldNumber;
const int Response::kGetWhiteListResFieldNumber;
const int Response::kSgxGetExtendedEpidGroupIdResFieldNumber;
const int Response::kSgxSwitchExtendedEpidGroupResFieldNumber;
const int Response::kSgxRegisterResFieldNumber;
const int Response::kInitQuoteExResFieldNumber;
const int Response::kGetQuoteSizeExResFieldNumber;
const int Response::kGetQuoteExResFieldNumber;
const int Response::kCheckUpdateStatusResFieldNumber;
const int Response::kSelectAttKeyIDResFieldNumber;
const int Response::kUnsupportedRequestResponseFieldNumber;
const int Response::kGetSupportedAttKeyIDNumResFieldNumber;
const int Response::kGetSupportedAttKeyIDsResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::MessageLite(), _arena_ptr_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:aesm.message.Response)
}

void Response::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  initquoteres_ = const_cast< ::aesm::message::Response_InitQuoteResponse*>(
      ::aesm::message::Response_InitQuoteResponse::internal_default_instance());
#else
  initquoteres_ = const_cast< ::aesm::message::Response_InitQuoteResponse*>(&::aesm::message::Response_InitQuoteResponse::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  getquoteres_ = const_cast< ::aesm::message::Response_GetQuoteResponse*>(
      ::aesm::message::Response_GetQuoteResponse::internal_default_instance());
#else
  getquoteres_ = const_cast< ::aesm::message::Response_GetQuoteResponse*>(&::aesm::message::Response_GetQuoteResponse::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  getlictokenres_ = const_cast< ::aesm::message::Response_GetLaunchTokenResponse*>(
      ::aesm::message::Response_GetLaunchTokenResponse::internal_default_instance());
#else
  getlictokenres_ = const_cast< ::aesm::message::Response_GetLaunchTokenResponse*>(&::aesm::message::Response_GetLaunchTokenResponse::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  reporterrres_ = const_cast< ::aesm::message::Response_ReportAttestationErrorResponse*>(
      ::aesm::message::Response_ReportAttestationErrorResponse::internal_default_instance());
#else
  reporterrres_ = const_cast< ::aesm::message::Response_ReportAttestationErrorResponse*>(&::aesm::message::Response_ReportAttestationErrorResponse::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  getwhitelistsizeres_ = const_cast< ::aesm::message::Response_GetWhiteListSizeResponse*>(
      ::aesm::message::Response_GetWhiteListSizeResponse::internal_default_instance());
#else
  getwhitelistsizeres_ = const_cast< ::aesm::message::Response_GetWhiteListSizeResponse*>(&::aesm::message::Response_GetWhiteListSizeResponse::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  getwhitelistres_ = const_cast< ::aesm::message::Response_GetWhiteListResponse*>(
      ::aesm::message::Response_GetWhiteListResponse::internal_default_instance());
#else
  getwhitelistres_ = const_cast< ::aesm::message::Response_GetWhiteListResponse*>(&::aesm::message::Response_GetWhiteListResponse::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  sgxgetextendedepidgroupidres_ = const_cast< ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse*>(
      ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse::internal_default_instance());
#else
  sgxgetextendedepidgroupidres_ = const_cast< ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse*>(&::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  sgxswitchextendedepidgroupres_ = const_cast< ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse*>(
      ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse::internal_default_instance());
#else
  sgxswitchextendedepidgroupres_ = const_cast< ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse*>(&::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  sgxregisterres_ = const_cast< ::aesm::message::Response_SGXRegisterResponse*>(
      ::aesm::message::Response_SGXRegisterResponse::internal_default_instance());
#else
  sgxregisterres_ = const_cast< ::aesm::message::Response_SGXRegisterResponse*>(&::aesm::message::Response_SGXRegisterResponse::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  initquoteexres_ = const_cast< ::aesm::message::Response_InitQuoteExResponse*>(
      ::aesm::message::Response_InitQuoteExResponse::internal_default_instance());
#else
  initquoteexres_ = const_cast< ::aesm::message::Response_InitQuoteExResponse*>(&::aesm::message::Response_InitQuoteExResponse::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  getquotesizeexres_ = const_cast< ::aesm::message::Response_GetQuoteSizeExResponse*>(
      ::aesm::message::Response_GetQuoteSizeExResponse::internal_default_instance());
#else
  getquotesizeexres_ = const_cast< ::aesm::message::Response_GetQuoteSizeExResponse*>(&::aesm::message::Response_GetQuoteSizeExResponse::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  getquoteexres_ = const_cast< ::aesm::message::Response_GetQuoteExResponse*>(
      ::aesm::message::Response_GetQuoteExResponse::internal_default_instance());
#else
  getquoteexres_ = const_cast< ::aesm::message::Response_GetQuoteExResponse*>(&::aesm::message::Response_GetQuoteExResponse::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  checkupdatestatusres_ = const_cast< ::aesm::message::Response_CheckUpdateStatusResponse*>(
      ::aesm::message::Response_CheckUpdateStatusResponse::internal_default_instance());
#else
  checkupdatestatusres_ = const_cast< ::aesm::message::Response_CheckUpdateStatusResponse*>(&::aesm::message::Response_CheckUpdateStatusResponse::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  selectattkeyidres_ = const_cast< ::aesm::message::Response_SelectAttKeyIDResponse*>(
      ::aesm::message::Response_SelectAttKeyIDResponse::internal_default_instance());
#else
  selectattkeyidres_ = const_cast< ::aesm::message::Response_SelectAttKeyIDResponse*>(&::aesm::message::Response_SelectAttKeyIDResponse::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  unsupportedrequestresponse_ = const_cast< ::aesm::message::Response_UnsupportedRequestResponse*>(
      ::aesm::message::Response_UnsupportedRequestResponse::internal_default_instance());
#else
  unsupportedrequestresponse_ = const_cast< ::aesm::message::Response_UnsupportedRequestResponse*>(&::aesm::message::Response_UnsupportedRequestResponse::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  getsupportedattkeyidnumres_ = const_cast< ::aesm::message::Response_GetSupportedAttKeyIDNumResponse*>(
      ::aesm::message::Response_GetSupportedAttKeyIDNumResponse::internal_default_instance());
#else
  getsupportedattkeyidnumres_ = const_cast< ::aesm::message::Response_GetSupportedAttKeyIDNumResponse*>(&::aesm::message::Response_GetSupportedAttKeyIDNumResponse::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  getsupportedattkeyidsres_ = const_cast< ::aesm::message::Response_GetSupportedAttKeyIDsResponse*>(
      ::aesm::message::Response_GetSupportedAttKeyIDsResponse::internal_default_instance());
#else
  getsupportedattkeyidsres_ = const_cast< ::aesm::message::Response_GetSupportedAttKeyIDsResponse*>(&::aesm::message::Response_GetSupportedAttKeyIDsResponse::default_instance());
#endif
}

Response::Response(const Response& from)
  : ::google::protobuf::MessageLite(),
    _arena_ptr_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:aesm.message.Response)
}

void Response::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  _unknown_fields_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  initquoteres_ = NULL;
  getquoteres_ = NULL;
  getlictokenres_ = NULL;
  reporterrres_ = NULL;
  getwhitelistsizeres_ = NULL;
  getwhitelistres_ = NULL;
  sgxgetextendedepidgroupidres_ = NULL;
  sgxswitchextendedepidgroupres_ = NULL;
  sgxregisterres_ = NULL;
  initquoteexres_ = NULL;
  getquotesizeexres_ = NULL;
  getquoteexres_ = NULL;
  checkupdatestatusres_ = NULL;
  selectattkeyidres_ = NULL;
  unsupportedrequestresponse_ = NULL;
  getsupportedattkeyidnumres_ = NULL;
  getsupportedattkeyidsres_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:aesm.message.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  _unknown_fields_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete initquoteres_;
    delete getquoteres_;
    delete getlictokenres_;
    delete reporterrres_;
    delete getwhitelistsizeres_;
    delete getwhitelistres_;
    delete sgxgetextendedepidgroupidres_;
    delete sgxswitchextendedepidgroupres_;
    delete sgxregisterres_;
    delete initquoteexres_;
    delete getquotesizeexres_;
    delete getquoteexres_;
    delete checkupdatestatusres_;
    delete selectattkeyidres_;
    delete unsupportedrequestresponse_;
    delete getsupportedattkeyidnumres_;
    delete getsupportedattkeyidsres_;
  }
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Response& Response::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_messages_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_messages_2eproto();
#endif
  return *default_instance_;
}

Response* Response::default_instance_ = NULL;

Response* Response::New(::google::protobuf::Arena* arena) const {
  Response* n = new Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:aesm.message.Response)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_initquoteres()) {
      if (initquoteres_ != NULL) initquoteres_->::aesm::message::Response_InitQuoteResponse::Clear();
    }
    if (has_getquoteres()) {
      if (getquoteres_ != NULL) getquoteres_->::aesm::message::Response_GetQuoteResponse::Clear();
    }
    if (has_getlictokenres()) {
      if (getlictokenres_ != NULL) getlictokenres_->::aesm::message::Response_GetLaunchTokenResponse::Clear();
    }
    if (has_reporterrres()) {
      if (reporterrres_ != NULL) reporterrres_->::aesm::message::Response_ReportAttestationErrorResponse::Clear();
    }
    if (has_getwhitelistsizeres()) {
      if (getwhitelistsizeres_ != NULL) getwhitelistsizeres_->::aesm::message::Response_GetWhiteListSizeResponse::Clear();
    }
    if (has_getwhitelistres()) {
      if (getwhitelistres_ != NULL) getwhitelistres_->::aesm::message::Response_GetWhiteListResponse::Clear();
    }
    if (has_sgxgetextendedepidgroupidres()) {
      if (sgxgetextendedepidgroupidres_ != NULL) sgxgetextendedepidgroupidres_->::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse::Clear();
    }
    if (has_sgxswitchextendedepidgroupres()) {
      if (sgxswitchextendedepidgroupres_ != NULL) sgxswitchextendedepidgroupres_->::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    if (has_sgxregisterres()) {
      if (sgxregisterres_ != NULL) sgxregisterres_->::aesm::message::Response_SGXRegisterResponse::Clear();
    }
    if (has_initquoteexres()) {
      if (initquoteexres_ != NULL) initquoteexres_->::aesm::message::Response_InitQuoteExResponse::Clear();
    }
    if (has_getquotesizeexres()) {
      if (getquotesizeexres_ != NULL) getquotesizeexres_->::aesm::message::Response_GetQuoteSizeExResponse::Clear();
    }
    if (has_getquoteexres()) {
      if (getquoteexres_ != NULL) getquoteexres_->::aesm::message::Response_GetQuoteExResponse::Clear();
    }
    if (has_checkupdatestatusres()) {
      if (checkupdatestatusres_ != NULL) checkupdatestatusres_->::aesm::message::Response_CheckUpdateStatusResponse::Clear();
    }
    if (has_selectattkeyidres()) {
      if (selectattkeyidres_ != NULL) selectattkeyidres_->::aesm::message::Response_SelectAttKeyIDResponse::Clear();
    }
    if (has_unsupportedrequestresponse()) {
      if (unsupportedrequestresponse_ != NULL) unsupportedrequestresponse_->::aesm::message::Response_UnsupportedRequestResponse::Clear();
    }
    if (has_getsupportedattkeyidnumres()) {
      if (getsupportedattkeyidnumres_ != NULL) getsupportedattkeyidnumres_->::aesm::message::Response_GetSupportedAttKeyIDNumResponse::Clear();
    }
  }
  if (has_getsupportedattkeyidsres()) {
    if (getsupportedattkeyidsres_ != NULL) getsupportedattkeyidsres_->::aesm::message::Response_GetSupportedAttKeyIDsResponse::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  _unknown_fields_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::LazyStringOutputStream unknown_fields_string(
      ::google::protobuf::NewPermanentCallback(
          &MutableUnknownFieldsForResponse, this));
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string, false);
  // @@protoc_insertion_point(parse_start:aesm.message.Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .aesm.message.Response.InitQuoteResponse initQuoteRes = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_initquoteres()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_getQuoteRes;
        break;
      }

      // optional .aesm.message.Response.GetQuoteResponse getQuoteRes = 2;
      case 2: {
        if (tag == 18) {
         parse_getQuoteRes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getquoteres()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_getLicTokenRes;
        break;
      }

      // optional .aesm.message.Response.GetLaunchTokenResponse getLicTokenRes = 3;
      case 3: {
        if (tag == 26) {
         parse_getLicTokenRes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getlictokenres()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_reportErrRes;
        break;
      }

      // optional .aesm.message.Response.ReportAttestationErrorResponse reportErrRes = 4;
      case 4: {
        if (tag == 34) {
         parse_reportErrRes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reporterrres()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_getWhiteListSizeRes;
        break;
      }

      // optional .aesm.message.Response.GetWhiteListSizeResponse getWhiteListSizeRes = 10;
      case 10: {
        if (tag == 82) {
         parse_getWhiteListSizeRes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getwhitelistsizeres()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_getWhiteListRes;
        break;
      }

      // optional .aesm.message.Response.GetWhiteListResponse getWhiteListRes = 11;
      case 11: {
        if (tag == 90) {
         parse_getWhiteListRes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getwhitelistres()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_sgxGetExtendedEpidGroupIdRes;
        break;
      }

      // optional .aesm.message.Response.SGXGetExtendedEpidGroupIdResponse sgxGetExtendedEpidGroupIdRes = 12;
      case 12: {
        if (tag == 98) {
         parse_sgxGetExtendedEpidGroupIdRes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sgxgetextendedepidgroupidres()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_sgxSwitchExtendedEpidGroupRes;
        break;
      }

      // optional .aesm.message.Response.SGXSwitchExtendedEpidGroupResponse sgxSwitchExtendedEpidGroupRes = 13;
      case 13: {
        if (tag == 106) {
         parse_sgxSwitchExtendedEpidGroupRes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sgxswitchextendedepidgroupres()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_sgxRegisterRes;
        break;
      }

      // optional .aesm.message.Response.SGXRegisterResponse sgxRegisterRes = 14;
      case 14: {
        if (tag == 114) {
         parse_sgxRegisterRes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sgxregisterres()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_initQuoteExRes;
        break;
      }

      // optional .aesm.message.Response.InitQuoteExResponse initQuoteExRes = 15;
      case 15: {
        if (tag == 122) {
         parse_initQuoteExRes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_initquoteexres()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_getQuoteSizeExRes;
        break;
      }

      // optional .aesm.message.Response.GetQuoteSizeExResponse getQuoteSizeExRes = 16;
      case 16: {
        if (tag == 130) {
         parse_getQuoteSizeExRes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getquotesizeexres()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_getQuoteExRes;
        break;
      }

      // optional .aesm.message.Response.GetQuoteExResponse getQuoteExRes = 17;
      case 17: {
        if (tag == 138) {
         parse_getQuoteExRes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getquoteexres()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_checkUpdateStatusRes;
        break;
      }

      // optional .aesm.message.Response.CheckUpdateStatusResponse checkUpdateStatusRes = 18;
      case 18: {
        if (tag == 146) {
         parse_checkUpdateStatusRes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_checkupdatestatusres()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_selectAttKeyIDRes;
        break;
      }

      // optional .aesm.message.Response.SelectAttKeyIDResponse selectAttKeyIDRes = 19;
      case 19: {
        if (tag == 154) {
         parse_selectAttKeyIDRes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_selectattkeyidres()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_unsupportedRequestResponse;
        break;
      }

      // optional .aesm.message.Response.UnsupportedRequestResponse unsupportedRequestResponse = 20;
      case 20: {
        if (tag == 162) {
         parse_unsupportedRequestResponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_unsupportedrequestresponse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_getSupportedAttKeyIDNumRes;
        break;
      }

      // optional .aesm.message.Response.GetSupportedAttKeyIDNumResponse getSupportedAttKeyIDNumRes = 21;
      case 21: {
        if (tag == 170) {
         parse_getSupportedAttKeyIDNumRes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getsupportedattkeyidnumres()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_getSupportedAttKeyIDsRes;
        break;
      }

      // optional .aesm.message.Response.GetSupportedAttKeyIDsResponse getSupportedAttKeyIDsRes = 22;
      case 22: {
        if (tag == 178) {
         parse_getSupportedAttKeyIDsRes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getsupportedattkeyidsres()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:aesm.message.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:aesm.message.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:aesm.message.Response)
  // optional .aesm.message.Response.InitQuoteResponse initQuoteRes = 1;
  if (has_initquoteres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->initquoteres_, output);
  }

  // optional .aesm.message.Response.GetQuoteResponse getQuoteRes = 2;
  if (has_getquoteres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, *this->getquoteres_, output);
  }

  // optional .aesm.message.Response.GetLaunchTokenResponse getLicTokenRes = 3;
  if (has_getlictokenres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, *this->getlictokenres_, output);
  }

  // optional .aesm.message.Response.ReportAttestationErrorResponse reportErrRes = 4;
  if (has_reporterrres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, *this->reporterrres_, output);
  }

  // optional .aesm.message.Response.GetWhiteListSizeResponse getWhiteListSizeRes = 10;
  if (has_getwhitelistsizeres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      10, *this->getwhitelistsizeres_, output);
  }

  // optional .aesm.message.Response.GetWhiteListResponse getWhiteListRes = 11;
  if (has_getwhitelistres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      11, *this->getwhitelistres_, output);
  }

  // optional .aesm.message.Response.SGXGetExtendedEpidGroupIdResponse sgxGetExtendedEpidGroupIdRes = 12;
  if (has_sgxgetextendedepidgroupidres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      12, *this->sgxgetextendedepidgroupidres_, output);
  }

  // optional .aesm.message.Response.SGXSwitchExtendedEpidGroupResponse sgxSwitchExtendedEpidGroupRes = 13;
  if (has_sgxswitchextendedepidgroupres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      13, *this->sgxswitchextendedepidgroupres_, output);
  }

  // optional .aesm.message.Response.SGXRegisterResponse sgxRegisterRes = 14;
  if (has_sgxregisterres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      14, *this->sgxregisterres_, output);
  }

  // optional .aesm.message.Response.InitQuoteExResponse initQuoteExRes = 15;
  if (has_initquoteexres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      15, *this->initquoteexres_, output);
  }

  // optional .aesm.message.Response.GetQuoteSizeExResponse getQuoteSizeExRes = 16;
  if (has_getquotesizeexres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      16, *this->getquotesizeexres_, output);
  }

  // optional .aesm.message.Response.GetQuoteExResponse getQuoteExRes = 17;
  if (has_getquoteexres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      17, *this->getquoteexres_, output);
  }

  // optional .aesm.message.Response.CheckUpdateStatusResponse checkUpdateStatusRes = 18;
  if (has_checkupdatestatusres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      18, *this->checkupdatestatusres_, output);
  }

  // optional .aesm.message.Response.SelectAttKeyIDResponse selectAttKeyIDRes = 19;
  if (has_selectattkeyidres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      19, *this->selectattkeyidres_, output);
  }

  // optional .aesm.message.Response.UnsupportedRequestResponse unsupportedRequestResponse = 20;
  if (has_unsupportedrequestresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      20, *this->unsupportedrequestresponse_, output);
  }

  // optional .aesm.message.Response.GetSupportedAttKeyIDNumResponse getSupportedAttKeyIDNumRes = 21;
  if (has_getsupportedattkeyidnumres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      21, *this->getsupportedattkeyidnumres_, output);
  }

  // optional .aesm.message.Response.GetSupportedAttKeyIDsResponse getSupportedAttKeyIDsRes = 22;
  if (has_getsupportedattkeyidsres()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      22, *this->getsupportedattkeyidsres_, output);
  }

  output->WriteRaw(unknown_fields().data(),
                   static_cast<int>(unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:aesm.message.Response)
}

int Response::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:aesm.message.Response)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional .aesm.message.Response.InitQuoteResponse initQuoteRes = 1;
    if (has_initquoteres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->initquoteres_);
    }

    // optional .aesm.message.Response.GetQuoteResponse getQuoteRes = 2;
    if (has_getquoteres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->getquoteres_);
    }

    // optional .aesm.message.Response.GetLaunchTokenResponse getLicTokenRes = 3;
    if (has_getlictokenres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->getlictokenres_);
    }

    // optional .aesm.message.Response.ReportAttestationErrorResponse reportErrRes = 4;
    if (has_reporterrres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->reporterrres_);
    }

    // optional .aesm.message.Response.GetWhiteListSizeResponse getWhiteListSizeRes = 10;
    if (has_getwhitelistsizeres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->getwhitelistsizeres_);
    }

    // optional .aesm.message.Response.GetWhiteListResponse getWhiteListRes = 11;
    if (has_getwhitelistres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->getwhitelistres_);
    }

    // optional .aesm.message.Response.SGXGetExtendedEpidGroupIdResponse sgxGetExtendedEpidGroupIdRes = 12;
    if (has_sgxgetextendedepidgroupidres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->sgxgetextendedepidgroupidres_);
    }

    // optional .aesm.message.Response.SGXSwitchExtendedEpidGroupResponse sgxSwitchExtendedEpidGroupRes = 13;
    if (has_sgxswitchextendedepidgroupres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->sgxswitchextendedepidgroupres_);
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .aesm.message.Response.SGXRegisterResponse sgxRegisterRes = 14;
    if (has_sgxregisterres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->sgxregisterres_);
    }

    // optional .aesm.message.Response.InitQuoteExResponse initQuoteExRes = 15;
    if (has_initquoteexres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->initquoteexres_);
    }

    // optional .aesm.message.Response.GetQuoteSizeExResponse getQuoteSizeExRes = 16;
    if (has_getquotesizeexres()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->getquotesizeexres_);
    }

    // optional .aesm.message.Response.GetQuoteExResponse getQuoteExRes = 17;
    if (has_getquoteexres()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->getquoteexres_);
    }

    // optional .aesm.message.Response.CheckUpdateStatusResponse checkUpdateStatusRes = 18;
    if (has_checkupdatestatusres()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->checkupdatestatusres_);
    }

    // optional .aesm.message.Response.SelectAttKeyIDResponse selectAttKeyIDRes = 19;
    if (has_selectattkeyidres()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->selectattkeyidres_);
    }

    // optional .aesm.message.Response.UnsupportedRequestResponse unsupportedRequestResponse = 20;
    if (has_unsupportedrequestresponse()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->unsupportedrequestresponse_);
    }

    // optional .aesm.message.Response.GetSupportedAttKeyIDNumResponse getSupportedAttKeyIDNumRes = 21;
    if (has_getsupportedattkeyidnumres()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->getsupportedattkeyidnumres_);
    }

  }
  // optional .aesm.message.Response.GetSupportedAttKeyIDsResponse getSupportedAttKeyIDsRes = 22;
  if (has_getsupportedattkeyidsres()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->getsupportedattkeyidsres_);
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Response*>(&from));
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:aesm.message.Response)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_initquoteres()) {
      mutable_initquoteres()->::aesm::message::Response_InitQuoteResponse::MergeFrom(from.initquoteres());
    }
    if (from.has_getquoteres()) {
      mutable_getquoteres()->::aesm::message::Response_GetQuoteResponse::MergeFrom(from.getquoteres());
    }
    if (from.has_getlictokenres()) {
      mutable_getlictokenres()->::aesm::message::Response_GetLaunchTokenResponse::MergeFrom(from.getlictokenres());
    }
    if (from.has_reporterrres()) {
      mutable_reporterrres()->::aesm::message::Response_ReportAttestationErrorResponse::MergeFrom(from.reporterrres());
    }
    if (from.has_getwhitelistsizeres()) {
      mutable_getwhitelistsizeres()->::aesm::message::Response_GetWhiteListSizeResponse::MergeFrom(from.getwhitelistsizeres());
    }
    if (from.has_getwhitelistres()) {
      mutable_getwhitelistres()->::aesm::message::Response_GetWhiteListResponse::MergeFrom(from.getwhitelistres());
    }
    if (from.has_sgxgetextendedepidgroupidres()) {
      mutable_sgxgetextendedepidgroupidres()->::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse::MergeFrom(from.sgxgetextendedepidgroupidres());
    }
    if (from.has_sgxswitchextendedepidgroupres()) {
      mutable_sgxswitchextendedepidgroupres()->::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse::MergeFrom(from.sgxswitchextendedepidgroupres());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_sgxregisterres()) {
      mutable_sgxregisterres()->::aesm::message::Response_SGXRegisterResponse::MergeFrom(from.sgxregisterres());
    }
    if (from.has_initquoteexres()) {
      mutable_initquoteexres()->::aesm::message::Response_InitQuoteExResponse::MergeFrom(from.initquoteexres());
    }
    if (from.has_getquotesizeexres()) {
      mutable_getquotesizeexres()->::aesm::message::Response_GetQuoteSizeExResponse::MergeFrom(from.getquotesizeexres());
    }
    if (from.has_getquoteexres()) {
      mutable_getquoteexres()->::aesm::message::Response_GetQuoteExResponse::MergeFrom(from.getquoteexres());
    }
    if (from.has_checkupdatestatusres()) {
      mutable_checkupdatestatusres()->::aesm::message::Response_CheckUpdateStatusResponse::MergeFrom(from.checkupdatestatusres());
    }
    if (from.has_selectattkeyidres()) {
      mutable_selectattkeyidres()->::aesm::message::Response_SelectAttKeyIDResponse::MergeFrom(from.selectattkeyidres());
    }
    if (from.has_unsupportedrequestresponse()) {
      mutable_unsupportedrequestresponse()->::aesm::message::Response_UnsupportedRequestResponse::MergeFrom(from.unsupportedrequestresponse());
    }
    if (from.has_getsupportedattkeyidnumres()) {
      mutable_getsupportedattkeyidnumres()->::aesm::message::Response_GetSupportedAttKeyIDNumResponse::MergeFrom(from.getsupportedattkeyidnumres());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_getsupportedattkeyidsres()) {
      mutable_getsupportedattkeyidsres()->::aesm::message::Response_GetSupportedAttKeyIDsResponse::MergeFrom(from.getsupportedattkeyidsres());
    }
  }
  if (!from.unknown_fields().empty()) {
    mutable_unknown_fields()->append(from.unknown_fields());
  }
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:aesm.message.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {

  if (has_initquoteres()) {
    if (!this->initquoteres_->IsInitialized()) return false;
  }
  if (has_getquoteres()) {
    if (!this->getquoteres_->IsInitialized()) return false;
  }
  if (has_getlictokenres()) {
    if (!this->getlictokenres_->IsInitialized()) return false;
  }
  if (has_reporterrres()) {
    if (!this->reporterrres_->IsInitialized()) return false;
  }
  if (has_getwhitelistsizeres()) {
    if (!this->getwhitelistsizeres_->IsInitialized()) return false;
  }
  if (has_getwhitelistres()) {
    if (!this->getwhitelistres_->IsInitialized()) return false;
  }
  if (has_sgxgetextendedepidgroupidres()) {
    if (!this->sgxgetextendedepidgroupidres_->IsInitialized()) return false;
  }
  if (has_sgxswitchextendedepidgroupres()) {
    if (!this->sgxswitchextendedepidgroupres_->IsInitialized()) return false;
  }
  if (has_sgxregisterres()) {
    if (!this->sgxregisterres_->IsInitialized()) return false;
  }
  if (has_initquoteexres()) {
    if (!this->initquoteexres_->IsInitialized()) return false;
  }
  if (has_getquotesizeexres()) {
    if (!this->getquotesizeexres_->IsInitialized()) return false;
  }
  if (has_getquoteexres()) {
    if (!this->getquoteexres_->IsInitialized()) return false;
  }
  if (has_checkupdatestatusres()) {
    if (!this->checkupdatestatusres_->IsInitialized()) return false;
  }
  if (has_selectattkeyidres()) {
    if (!this->selectattkeyidres_->IsInitialized()) return false;
  }
  if (has_unsupportedrequestresponse()) {
    if (!this->unsupportedrequestresponse_->IsInitialized()) return false;
  }
  if (has_getsupportedattkeyidnumres()) {
    if (!this->getsupportedattkeyidnumres_->IsInitialized()) return false;
  }
  if (has_getsupportedattkeyidsres()) {
    if (!this->getsupportedattkeyidsres_->IsInitialized()) return false;
  }
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  std::swap(initquoteres_, other->initquoteres_);
  std::swap(getquoteres_, other->getquoteres_);
  std::swap(getlictokenres_, other->getlictokenres_);
  std::swap(reporterrres_, other->reporterrres_);
  std::swap(getwhitelistsizeres_, other->getwhitelistsizeres_);
  std::swap(getwhitelistres_, other->getwhitelistres_);
  std::swap(sgxgetextendedepidgroupidres_, other->sgxgetextendedepidgroupidres_);
  std::swap(sgxswitchextendedepidgroupres_, other->sgxswitchextendedepidgroupres_);
  std::swap(sgxregisterres_, other->sgxregisterres_);
  std::swap(initquoteexres_, other->initquoteexres_);
  std::swap(getquotesizeexres_, other->getquotesizeexres_);
  std::swap(getquoteexres_, other->getquoteexres_);
  std::swap(checkupdatestatusres_, other->checkupdatestatusres_);
  std::swap(selectattkeyidres_, other->selectattkeyidres_);
  std::swap(unsupportedrequestresponse_, other->unsupportedrequestresponse_);
  std::swap(getsupportedattkeyidnumres_, other->getsupportedattkeyidnumres_);
  std::swap(getsupportedattkeyidsres_, other->getsupportedattkeyidsres_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _unknown_fields_.Swap(&other->_unknown_fields_);
  std::swap(_cached_size_, other->_cached_size_);
}

::std::string Response::GetTypeName() const {
  return "aesm.message.Response";
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Response_InitQuoteResponse

// required uint32 errorCode = 1 [default = 1];
bool Response_InitQuoteResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_InitQuoteResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_InitQuoteResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_InitQuoteResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
 ::google::protobuf::uint32 Response_InitQuoteResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.InitQuoteResponse.errorCode)
  return errorcode_;
}
 void Response_InitQuoteResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.InitQuoteResponse.errorCode)
}

// optional bytes targetInfo = 2;
bool Response_InitQuoteResponse::has_targetinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_InitQuoteResponse::set_has_targetinfo() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_InitQuoteResponse::clear_has_targetinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_InitQuoteResponse::clear_targetinfo() {
  targetinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_targetinfo();
}
 const ::std::string& Response_InitQuoteResponse::targetinfo() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.InitQuoteResponse.targetInfo)
  return targetinfo_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_InitQuoteResponse::set_targetinfo(const ::std::string& value) {
  set_has_targetinfo();
  targetinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Response.InitQuoteResponse.targetInfo)
}
 void Response_InitQuoteResponse::set_targetinfo(const char* value) {
  set_has_targetinfo();
  targetinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Response.InitQuoteResponse.targetInfo)
}
 void Response_InitQuoteResponse::set_targetinfo(const void* value, size_t size) {
  set_has_targetinfo();
  targetinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Response.InitQuoteResponse.targetInfo)
}
 ::std::string* Response_InitQuoteResponse::mutable_targetinfo() {
  set_has_targetinfo();
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.InitQuoteResponse.targetInfo)
  return targetinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response_InitQuoteResponse::release_targetinfo() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.InitQuoteResponse.targetInfo)
  clear_has_targetinfo();
  return targetinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_InitQuoteResponse::set_allocated_targetinfo(::std::string* targetinfo) {
  if (targetinfo != NULL) {
    set_has_targetinfo();
  } else {
    clear_has_targetinfo();
  }
  targetinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), targetinfo);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.InitQuoteResponse.targetInfo)
}

// optional bytes gid = 3;
bool Response_InitQuoteResponse::has_gid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Response_InitQuoteResponse::set_has_gid() {
  _has_bits_[0] |= 0x00000004u;
}
void Response_InitQuoteResponse::clear_has_gid() {
  _has_bits_[0] &= ~0x00000004u;
}
void Response_InitQuoteResponse::clear_gid() {
  gid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gid();
}
 const ::std::string& Response_InitQuoteResponse::gid() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.InitQuoteResponse.gid)
  return gid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_InitQuoteResponse::set_gid(const ::std::string& value) {
  set_has_gid();
  gid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Response.InitQuoteResponse.gid)
}
 void Response_InitQuoteResponse::set_gid(const char* value) {
  set_has_gid();
  gid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Response.InitQuoteResponse.gid)
}
 void Response_InitQuoteResponse::set_gid(const void* value, size_t size) {
  set_has_gid();
  gid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Response.InitQuoteResponse.gid)
}
 ::std::string* Response_InitQuoteResponse::mutable_gid() {
  set_has_gid();
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.InitQuoteResponse.gid)
  return gid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response_InitQuoteResponse::release_gid() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.InitQuoteResponse.gid)
  clear_has_gid();
  return gid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_InitQuoteResponse::set_allocated_gid(::std::string* gid) {
  if (gid != NULL) {
    set_has_gid();
  } else {
    clear_has_gid();
  }
  gid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gid);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.InitQuoteResponse.gid)
}

// -------------------------------------------------------------------

// Response_GetQuoteResponse

// required uint32 errorCode = 1 [default = 1];
bool Response_GetQuoteResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_GetQuoteResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_GetQuoteResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_GetQuoteResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
 ::google::protobuf::uint32 Response_GetQuoteResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetQuoteResponse.errorCode)
  return errorcode_;
}
 void Response_GetQuoteResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetQuoteResponse.errorCode)
}

// optional bytes quote = 2;
bool Response_GetQuoteResponse::has_quote() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_GetQuoteResponse::set_has_quote() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_GetQuoteResponse::clear_has_quote() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_GetQuoteResponse::clear_quote() {
  quote_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_quote();
}
 const ::std::string& Response_GetQuoteResponse::quote() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetQuoteResponse.quote)
  return quote_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_GetQuoteResponse::set_quote(const ::std::string& value) {
  set_has_quote();
  quote_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetQuoteResponse.quote)
}
 void Response_GetQuoteResponse::set_quote(const char* value) {
  set_has_quote();
  quote_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Response.GetQuoteResponse.quote)
}
 void Response_GetQuoteResponse::set_quote(const void* value, size_t size) {
  set_has_quote();
  quote_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Response.GetQuoteResponse.quote)
}
 ::std::string* Response_GetQuoteResponse::mutable_quote() {
  set_has_quote();
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.GetQuoteResponse.quote)
  return quote_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response_GetQuoteResponse::release_quote() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.GetQuoteResponse.quote)
  clear_has_quote();
  return quote_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_GetQuoteResponse::set_allocated_quote(::std::string* quote) {
  if (quote != NULL) {
    set_has_quote();
  } else {
    clear_has_quote();
  }
  quote_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), quote);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.GetQuoteResponse.quote)
}

// optional bytes qe_report = 3;
bool Response_GetQuoteResponse::has_qe_report() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Response_GetQuoteResponse::set_has_qe_report() {
  _has_bits_[0] |= 0x00000004u;
}
void Response_GetQuoteResponse::clear_has_qe_report() {
  _has_bits_[0] &= ~0x00000004u;
}
void Response_GetQuoteResponse::clear_qe_report() {
  qe_report_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_qe_report();
}
 const ::std::string& Response_GetQuoteResponse::qe_report() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetQuoteResponse.qe_report)
  return qe_report_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_GetQuoteResponse::set_qe_report(const ::std::string& value) {
  set_has_qe_report();
  qe_report_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetQuoteResponse.qe_report)
}
 void Response_GetQuoteResponse::set_qe_report(const char* value) {
  set_has_qe_report();
  qe_report_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Response.GetQuoteResponse.qe_report)
}
 void Response_GetQuoteResponse::set_qe_report(const void* value, size_t size) {
  set_has_qe_report();
  qe_report_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Response.GetQuoteResponse.qe_report)
}
 ::std::string* Response_GetQuoteResponse::mutable_qe_report() {
  set_has_qe_report();
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.GetQuoteResponse.qe_report)
  return qe_report_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response_GetQuoteResponse::release_qe_report() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.GetQuoteResponse.qe_report)
  clear_has_qe_report();
  return qe_report_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_GetQuoteResponse::set_allocated_qe_report(::std::string* qe_report) {
  if (qe_report != NULL) {
    set_has_qe_report();
  } else {
    clear_has_qe_report();
  }
  qe_report_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qe_report);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.GetQuoteResponse.qe_report)
}

// -------------------------------------------------------------------

// Response_GetLaunchTokenResponse

// required uint32 errorCode = 1 [default = 1];
bool Response_GetLaunchTokenResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_GetLaunchTokenResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_GetLaunchTokenResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_GetLaunchTokenResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
 ::google::protobuf::uint32 Response_GetLaunchTokenResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetLaunchTokenResponse.errorCode)
  return errorcode_;
}
 void Response_GetLaunchTokenResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetLaunchTokenResponse.errorCode)
}

// optional bytes token = 2;
bool Response_GetLaunchTokenResponse::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_GetLaunchTokenResponse::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_GetLaunchTokenResponse::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_GetLaunchTokenResponse::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
 const ::std::string& Response_GetLaunchTokenResponse::token() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetLaunchTokenResponse.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_GetLaunchTokenResponse::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetLaunchTokenResponse.token)
}
 void Response_GetLaunchTokenResponse::set_token(const char* value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Response.GetLaunchTokenResponse.token)
}
 void Response_GetLaunchTokenResponse::set_token(const void* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Response.GetLaunchTokenResponse.token)
}
 ::std::string* Response_GetLaunchTokenResponse::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.GetLaunchTokenResponse.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response_GetLaunchTokenResponse::release_token() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.GetLaunchTokenResponse.token)
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_GetLaunchTokenResponse::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.GetLaunchTokenResponse.token)
}

// -------------------------------------------------------------------

// Response_ReportAttestationErrorResponse

// required uint32 errorCode = 1 [default = 1];
bool Response_ReportAttestationErrorResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_ReportAttestationErrorResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_ReportAttestationErrorResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_ReportAttestationErrorResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
 ::google::protobuf::uint32 Response_ReportAttestationErrorResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.ReportAttestationErrorResponse.errorCode)
  return errorcode_;
}
 void Response_ReportAttestationErrorResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.ReportAttestationErrorResponse.errorCode)
}

// optional bytes platform_update_info = 2;
bool Response_ReportAttestationErrorResponse::has_platform_update_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_ReportAttestationErrorResponse::set_has_platform_update_info() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_ReportAttestationErrorResponse::clear_has_platform_update_info() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_ReportAttestationErrorResponse::clear_platform_update_info() {
  platform_update_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platform_update_info();
}
 const ::std::string& Response_ReportAttestationErrorResponse::platform_update_info() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.ReportAttestationErrorResponse.platform_update_info)
  return platform_update_info_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_ReportAttestationErrorResponse::set_platform_update_info(const ::std::string& value) {
  set_has_platform_update_info();
  platform_update_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Response.ReportAttestationErrorResponse.platform_update_info)
}
 void Response_ReportAttestationErrorResponse::set_platform_update_info(const char* value) {
  set_has_platform_update_info();
  platform_update_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Response.ReportAttestationErrorResponse.platform_update_info)
}
 void Response_ReportAttestationErrorResponse::set_platform_update_info(const void* value, size_t size) {
  set_has_platform_update_info();
  platform_update_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Response.ReportAttestationErrorResponse.platform_update_info)
}
 ::std::string* Response_ReportAttestationErrorResponse::mutable_platform_update_info() {
  set_has_platform_update_info();
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.ReportAttestationErrorResponse.platform_update_info)
  return platform_update_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response_ReportAttestationErrorResponse::release_platform_update_info() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.ReportAttestationErrorResponse.platform_update_info)
  clear_has_platform_update_info();
  return platform_update_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_ReportAttestationErrorResponse::set_allocated_platform_update_info(::std::string* platform_update_info) {
  if (platform_update_info != NULL) {
    set_has_platform_update_info();
  } else {
    clear_has_platform_update_info();
  }
  platform_update_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform_update_info);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.ReportAttestationErrorResponse.platform_update_info)
}

// -------------------------------------------------------------------

// Response_CheckUpdateStatusResponse

// required uint32 errorCode = 1 [default = 1];
bool Response_CheckUpdateStatusResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_CheckUpdateStatusResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_CheckUpdateStatusResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_CheckUpdateStatusResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
 ::google::protobuf::uint32 Response_CheckUpdateStatusResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.CheckUpdateStatusResponse.errorCode)
  return errorcode_;
}
 void Response_CheckUpdateStatusResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.CheckUpdateStatusResponse.errorCode)
}

// optional bytes platform_update_info = 2;
bool Response_CheckUpdateStatusResponse::has_platform_update_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_CheckUpdateStatusResponse::set_has_platform_update_info() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_CheckUpdateStatusResponse::clear_has_platform_update_info() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_CheckUpdateStatusResponse::clear_platform_update_info() {
  platform_update_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platform_update_info();
}
 const ::std::string& Response_CheckUpdateStatusResponse::platform_update_info() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.CheckUpdateStatusResponse.platform_update_info)
  return platform_update_info_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_CheckUpdateStatusResponse::set_platform_update_info(const ::std::string& value) {
  set_has_platform_update_info();
  platform_update_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Response.CheckUpdateStatusResponse.platform_update_info)
}
 void Response_CheckUpdateStatusResponse::set_platform_update_info(const char* value) {
  set_has_platform_update_info();
  platform_update_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Response.CheckUpdateStatusResponse.platform_update_info)
}
 void Response_CheckUpdateStatusResponse::set_platform_update_info(const void* value, size_t size) {
  set_has_platform_update_info();
  platform_update_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Response.CheckUpdateStatusResponse.platform_update_info)
}
 ::std::string* Response_CheckUpdateStatusResponse::mutable_platform_update_info() {
  set_has_platform_update_info();
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.CheckUpdateStatusResponse.platform_update_info)
  return platform_update_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response_CheckUpdateStatusResponse::release_platform_update_info() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.CheckUpdateStatusResponse.platform_update_info)
  clear_has_platform_update_info();
  return platform_update_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_CheckUpdateStatusResponse::set_allocated_platform_update_info(::std::string* platform_update_info) {
  if (platform_update_info != NULL) {
    set_has_platform_update_info();
  } else {
    clear_has_platform_update_info();
  }
  platform_update_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform_update_info);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.CheckUpdateStatusResponse.platform_update_info)
}

// optional uint32 status = 3;
bool Response_CheckUpdateStatusResponse::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Response_CheckUpdateStatusResponse::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
void Response_CheckUpdateStatusResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
void Response_CheckUpdateStatusResponse::clear_status() {
  status_ = 0u;
  clear_has_status();
}
 ::google::protobuf::uint32 Response_CheckUpdateStatusResponse::status() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.CheckUpdateStatusResponse.status)
  return status_;
}
 void Response_CheckUpdateStatusResponse::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.CheckUpdateStatusResponse.status)
}

// -------------------------------------------------------------------

// Response_GetWhiteListSizeResponse

// required uint32 errorCode = 1 [default = 1];
bool Response_GetWhiteListSizeResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_GetWhiteListSizeResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_GetWhiteListSizeResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_GetWhiteListSizeResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
 ::google::protobuf::uint32 Response_GetWhiteListSizeResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetWhiteListSizeResponse.errorCode)
  return errorcode_;
}
 void Response_GetWhiteListSizeResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetWhiteListSizeResponse.errorCode)
}

// optional uint32 white_list_size = 2;
bool Response_GetWhiteListSizeResponse::has_white_list_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_GetWhiteListSizeResponse::set_has_white_list_size() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_GetWhiteListSizeResponse::clear_has_white_list_size() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_GetWhiteListSizeResponse::clear_white_list_size() {
  white_list_size_ = 0u;
  clear_has_white_list_size();
}
 ::google::protobuf::uint32 Response_GetWhiteListSizeResponse::white_list_size() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetWhiteListSizeResponse.white_list_size)
  return white_list_size_;
}
 void Response_GetWhiteListSizeResponse::set_white_list_size(::google::protobuf::uint32 value) {
  set_has_white_list_size();
  white_list_size_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetWhiteListSizeResponse.white_list_size)
}

// -------------------------------------------------------------------

// Response_GetWhiteListResponse

// required uint32 errorCode = 1 [default = 1];
bool Response_GetWhiteListResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_GetWhiteListResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_GetWhiteListResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_GetWhiteListResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
 ::google::protobuf::uint32 Response_GetWhiteListResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetWhiteListResponse.errorCode)
  return errorcode_;
}
 void Response_GetWhiteListResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetWhiteListResponse.errorCode)
}

// optional bytes white_list = 2;
bool Response_GetWhiteListResponse::has_white_list() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_GetWhiteListResponse::set_has_white_list() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_GetWhiteListResponse::clear_has_white_list() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_GetWhiteListResponse::clear_white_list() {
  white_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_white_list();
}
 const ::std::string& Response_GetWhiteListResponse::white_list() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetWhiteListResponse.white_list)
  return white_list_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_GetWhiteListResponse::set_white_list(const ::std::string& value) {
  set_has_white_list();
  white_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetWhiteListResponse.white_list)
}
 void Response_GetWhiteListResponse::set_white_list(const char* value) {
  set_has_white_list();
  white_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Response.GetWhiteListResponse.white_list)
}
 void Response_GetWhiteListResponse::set_white_list(const void* value, size_t size) {
  set_has_white_list();
  white_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Response.GetWhiteListResponse.white_list)
}
 ::std::string* Response_GetWhiteListResponse::mutable_white_list() {
  set_has_white_list();
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.GetWhiteListResponse.white_list)
  return white_list_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response_GetWhiteListResponse::release_white_list() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.GetWhiteListResponse.white_list)
  clear_has_white_list();
  return white_list_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_GetWhiteListResponse::set_allocated_white_list(::std::string* white_list) {
  if (white_list != NULL) {
    set_has_white_list();
  } else {
    clear_has_white_list();
  }
  white_list_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), white_list);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.GetWhiteListResponse.white_list)
}

// -------------------------------------------------------------------

// Response_SGXGetExtendedEpidGroupIdResponse

// required uint32 errorCode = 1 [default = 1];
bool Response_SGXGetExtendedEpidGroupIdResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_SGXGetExtendedEpidGroupIdResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_SGXGetExtendedEpidGroupIdResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_SGXGetExtendedEpidGroupIdResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
 ::google::protobuf::uint32 Response_SGXGetExtendedEpidGroupIdResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse.errorCode)
  return errorcode_;
}
 void Response_SGXGetExtendedEpidGroupIdResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse.errorCode)
}

// optional uint32 x_group_id = 2;
bool Response_SGXGetExtendedEpidGroupIdResponse::has_x_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_SGXGetExtendedEpidGroupIdResponse::set_has_x_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_SGXGetExtendedEpidGroupIdResponse::clear_has_x_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_SGXGetExtendedEpidGroupIdResponse::clear_x_group_id() {
  x_group_id_ = 0u;
  clear_has_x_group_id();
}
 ::google::protobuf::uint32 Response_SGXGetExtendedEpidGroupIdResponse::x_group_id() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse.x_group_id)
  return x_group_id_;
}
 void Response_SGXGetExtendedEpidGroupIdResponse::set_x_group_id(::google::protobuf::uint32 value) {
  set_has_x_group_id();
  x_group_id_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.SGXGetExtendedEpidGroupIdResponse.x_group_id)
}

// -------------------------------------------------------------------

// Response_SGXSwitchExtendedEpidGroupResponse

// required uint32 errorCode = 1 [default = 1];
bool Response_SGXSwitchExtendedEpidGroupResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_SGXSwitchExtendedEpidGroupResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_SGXSwitchExtendedEpidGroupResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_SGXSwitchExtendedEpidGroupResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
 ::google::protobuf::uint32 Response_SGXSwitchExtendedEpidGroupResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse.errorCode)
  return errorcode_;
}
 void Response_SGXSwitchExtendedEpidGroupResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.SGXSwitchExtendedEpidGroupResponse.errorCode)
}

// -------------------------------------------------------------------

// Response_SGXRegisterResponse

// required uint32 errorCode = 1 [default = 1];
bool Response_SGXRegisterResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_SGXRegisterResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_SGXRegisterResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_SGXRegisterResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
 ::google::protobuf::uint32 Response_SGXRegisterResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.SGXRegisterResponse.errorCode)
  return errorcode_;
}
 void Response_SGXRegisterResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.SGXRegisterResponse.errorCode)
}

// -------------------------------------------------------------------

// Response_SelectAttKeyIDResponse

// required uint32 errorCode = 1 [default = 1];
bool Response_SelectAttKeyIDResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_SelectAttKeyIDResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_SelectAttKeyIDResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_SelectAttKeyIDResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
 ::google::protobuf::uint32 Response_SelectAttKeyIDResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.SelectAttKeyIDResponse.errorCode)
  return errorcode_;
}
 void Response_SelectAttKeyIDResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.SelectAttKeyIDResponse.errorCode)
}

// optional bytes selected_att_key_id = 2;
bool Response_SelectAttKeyIDResponse::has_selected_att_key_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_SelectAttKeyIDResponse::set_has_selected_att_key_id() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_SelectAttKeyIDResponse::clear_has_selected_att_key_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_SelectAttKeyIDResponse::clear_selected_att_key_id() {
  selected_att_key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_selected_att_key_id();
}
 const ::std::string& Response_SelectAttKeyIDResponse::selected_att_key_id() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.SelectAttKeyIDResponse.selected_att_key_id)
  return selected_att_key_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_SelectAttKeyIDResponse::set_selected_att_key_id(const ::std::string& value) {
  set_has_selected_att_key_id();
  selected_att_key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Response.SelectAttKeyIDResponse.selected_att_key_id)
}
 void Response_SelectAttKeyIDResponse::set_selected_att_key_id(const char* value) {
  set_has_selected_att_key_id();
  selected_att_key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Response.SelectAttKeyIDResponse.selected_att_key_id)
}
 void Response_SelectAttKeyIDResponse::set_selected_att_key_id(const void* value, size_t size) {
  set_has_selected_att_key_id();
  selected_att_key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Response.SelectAttKeyIDResponse.selected_att_key_id)
}
 ::std::string* Response_SelectAttKeyIDResponse::mutable_selected_att_key_id() {
  set_has_selected_att_key_id();
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.SelectAttKeyIDResponse.selected_att_key_id)
  return selected_att_key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response_SelectAttKeyIDResponse::release_selected_att_key_id() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.SelectAttKeyIDResponse.selected_att_key_id)
  clear_has_selected_att_key_id();
  return selected_att_key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_SelectAttKeyIDResponse::set_allocated_selected_att_key_id(::std::string* selected_att_key_id) {
  if (selected_att_key_id != NULL) {
    set_has_selected_att_key_id();
  } else {
    clear_has_selected_att_key_id();
  }
  selected_att_key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), selected_att_key_id);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.SelectAttKeyIDResponse.selected_att_key_id)
}

// -------------------------------------------------------------------

// Response_InitQuoteExResponse

// required uint32 errorCode = 1 [default = 1];
bool Response_InitQuoteExResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_InitQuoteExResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_InitQuoteExResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_InitQuoteExResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
 ::google::protobuf::uint32 Response_InitQuoteExResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.InitQuoteExResponse.errorCode)
  return errorcode_;
}
 void Response_InitQuoteExResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.InitQuoteExResponse.errorCode)
}

// optional bytes target_info = 2;
bool Response_InitQuoteExResponse::has_target_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_InitQuoteExResponse::set_has_target_info() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_InitQuoteExResponse::clear_has_target_info() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_InitQuoteExResponse::clear_target_info() {
  target_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_target_info();
}
 const ::std::string& Response_InitQuoteExResponse::target_info() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.InitQuoteExResponse.target_info)
  return target_info_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_InitQuoteExResponse::set_target_info(const ::std::string& value) {
  set_has_target_info();
  target_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Response.InitQuoteExResponse.target_info)
}
 void Response_InitQuoteExResponse::set_target_info(const char* value) {
  set_has_target_info();
  target_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Response.InitQuoteExResponse.target_info)
}
 void Response_InitQuoteExResponse::set_target_info(const void* value, size_t size) {
  set_has_target_info();
  target_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Response.InitQuoteExResponse.target_info)
}
 ::std::string* Response_InitQuoteExResponse::mutable_target_info() {
  set_has_target_info();
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.InitQuoteExResponse.target_info)
  return target_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response_InitQuoteExResponse::release_target_info() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.InitQuoteExResponse.target_info)
  clear_has_target_info();
  return target_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_InitQuoteExResponse::set_allocated_target_info(::std::string* target_info) {
  if (target_info != NULL) {
    set_has_target_info();
  } else {
    clear_has_target_info();
  }
  target_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_info);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.InitQuoteExResponse.target_info)
}

// optional uint64 pub_key_id_size = 3;
bool Response_InitQuoteExResponse::has_pub_key_id_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Response_InitQuoteExResponse::set_has_pub_key_id_size() {
  _has_bits_[0] |= 0x00000004u;
}
void Response_InitQuoteExResponse::clear_has_pub_key_id_size() {
  _has_bits_[0] &= ~0x00000004u;
}
void Response_InitQuoteExResponse::clear_pub_key_id_size() {
  pub_key_id_size_ = GOOGLE_ULONGLONG(0);
  clear_has_pub_key_id_size();
}
 ::google::protobuf::uint64 Response_InitQuoteExResponse::pub_key_id_size() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.InitQuoteExResponse.pub_key_id_size)
  return pub_key_id_size_;
}
 void Response_InitQuoteExResponse::set_pub_key_id_size(::google::protobuf::uint64 value) {
  set_has_pub_key_id_size();
  pub_key_id_size_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.InitQuoteExResponse.pub_key_id_size)
}

// optional bytes pub_key_id = 4;
bool Response_InitQuoteExResponse::has_pub_key_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Response_InitQuoteExResponse::set_has_pub_key_id() {
  _has_bits_[0] |= 0x00000008u;
}
void Response_InitQuoteExResponse::clear_has_pub_key_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void Response_InitQuoteExResponse::clear_pub_key_id() {
  pub_key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pub_key_id();
}
 const ::std::string& Response_InitQuoteExResponse::pub_key_id() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.InitQuoteExResponse.pub_key_id)
  return pub_key_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_InitQuoteExResponse::set_pub_key_id(const ::std::string& value) {
  set_has_pub_key_id();
  pub_key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Response.InitQuoteExResponse.pub_key_id)
}
 void Response_InitQuoteExResponse::set_pub_key_id(const char* value) {
  set_has_pub_key_id();
  pub_key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Response.InitQuoteExResponse.pub_key_id)
}
 void Response_InitQuoteExResponse::set_pub_key_id(const void* value, size_t size) {
  set_has_pub_key_id();
  pub_key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Response.InitQuoteExResponse.pub_key_id)
}
 ::std::string* Response_InitQuoteExResponse::mutable_pub_key_id() {
  set_has_pub_key_id();
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.InitQuoteExResponse.pub_key_id)
  return pub_key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response_InitQuoteExResponse::release_pub_key_id() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.InitQuoteExResponse.pub_key_id)
  clear_has_pub_key_id();
  return pub_key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_InitQuoteExResponse::set_allocated_pub_key_id(::std::string* pub_key_id) {
  if (pub_key_id != NULL) {
    set_has_pub_key_id();
  } else {
    clear_has_pub_key_id();
  }
  pub_key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pub_key_id);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.InitQuoteExResponse.pub_key_id)
}

// -------------------------------------------------------------------

// Response_GetQuoteSizeExResponse

// required uint32 errorCode = 1 [default = 1];
bool Response_GetQuoteSizeExResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_GetQuoteSizeExResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_GetQuoteSizeExResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_GetQuoteSizeExResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
 ::google::protobuf::uint32 Response_GetQuoteSizeExResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetQuoteSizeExResponse.errorCode)
  return errorcode_;
}
 void Response_GetQuoteSizeExResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetQuoteSizeExResponse.errorCode)
}

// optional uint32 quote_size = 2;
bool Response_GetQuoteSizeExResponse::has_quote_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_GetQuoteSizeExResponse::set_has_quote_size() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_GetQuoteSizeExResponse::clear_has_quote_size() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_GetQuoteSizeExResponse::clear_quote_size() {
  quote_size_ = 0u;
  clear_has_quote_size();
}
 ::google::protobuf::uint32 Response_GetQuoteSizeExResponse::quote_size() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetQuoteSizeExResponse.quote_size)
  return quote_size_;
}
 void Response_GetQuoteSizeExResponse::set_quote_size(::google::protobuf::uint32 value) {
  set_has_quote_size();
  quote_size_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetQuoteSizeExResponse.quote_size)
}

// -------------------------------------------------------------------

// Response_GetQuoteExResponse

// required uint32 errorCode = 1 [default = 1];
bool Response_GetQuoteExResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_GetQuoteExResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_GetQuoteExResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_GetQuoteExResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
 ::google::protobuf::uint32 Response_GetQuoteExResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetQuoteExResponse.errorCode)
  return errorcode_;
}
 void Response_GetQuoteExResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetQuoteExResponse.errorCode)
}

// optional bytes quote = 2;
bool Response_GetQuoteExResponse::has_quote() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_GetQuoteExResponse::set_has_quote() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_GetQuoteExResponse::clear_has_quote() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_GetQuoteExResponse::clear_quote() {
  quote_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_quote();
}
 const ::std::string& Response_GetQuoteExResponse::quote() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetQuoteExResponse.quote)
  return quote_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_GetQuoteExResponse::set_quote(const ::std::string& value) {
  set_has_quote();
  quote_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetQuoteExResponse.quote)
}
 void Response_GetQuoteExResponse::set_quote(const char* value) {
  set_has_quote();
  quote_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Response.GetQuoteExResponse.quote)
}
 void Response_GetQuoteExResponse::set_quote(const void* value, size_t size) {
  set_has_quote();
  quote_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Response.GetQuoteExResponse.quote)
}
 ::std::string* Response_GetQuoteExResponse::mutable_quote() {
  set_has_quote();
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.GetQuoteExResponse.quote)
  return quote_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response_GetQuoteExResponse::release_quote() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.GetQuoteExResponse.quote)
  clear_has_quote();
  return quote_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_GetQuoteExResponse::set_allocated_quote(::std::string* quote) {
  if (quote != NULL) {
    set_has_quote();
  } else {
    clear_has_quote();
  }
  quote_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), quote);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.GetQuoteExResponse.quote)
}

// optional bytes qe_report_info = 3;
bool Response_GetQuoteExResponse::has_qe_report_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Response_GetQuoteExResponse::set_has_qe_report_info() {
  _has_bits_[0] |= 0x00000004u;
}
void Response_GetQuoteExResponse::clear_has_qe_report_info() {
  _has_bits_[0] &= ~0x00000004u;
}
void Response_GetQuoteExResponse::clear_qe_report_info() {
  qe_report_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_qe_report_info();
}
 const ::std::string& Response_GetQuoteExResponse::qe_report_info() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetQuoteExResponse.qe_report_info)
  return qe_report_info_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_GetQuoteExResponse::set_qe_report_info(const ::std::string& value) {
  set_has_qe_report_info();
  qe_report_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetQuoteExResponse.qe_report_info)
}
 void Response_GetQuoteExResponse::set_qe_report_info(const char* value) {
  set_has_qe_report_info();
  qe_report_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Response.GetQuoteExResponse.qe_report_info)
}
 void Response_GetQuoteExResponse::set_qe_report_info(const void* value, size_t size) {
  set_has_qe_report_info();
  qe_report_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Response.GetQuoteExResponse.qe_report_info)
}
 ::std::string* Response_GetQuoteExResponse::mutable_qe_report_info() {
  set_has_qe_report_info();
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.GetQuoteExResponse.qe_report_info)
  return qe_report_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response_GetQuoteExResponse::release_qe_report_info() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.GetQuoteExResponse.qe_report_info)
  clear_has_qe_report_info();
  return qe_report_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_GetQuoteExResponse::set_allocated_qe_report_info(::std::string* qe_report_info) {
  if (qe_report_info != NULL) {
    set_has_qe_report_info();
  } else {
    clear_has_qe_report_info();
  }
  qe_report_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qe_report_info);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.GetQuoteExResponse.qe_report_info)
}

// -------------------------------------------------------------------

// Response_UnsupportedRequestResponse

// required uint32 errorCode = 1 [default = 1];
bool Response_UnsupportedRequestResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_UnsupportedRequestResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_UnsupportedRequestResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_UnsupportedRequestResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
 ::google::protobuf::uint32 Response_UnsupportedRequestResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.UnsupportedRequestResponse.errorCode)
  return errorcode_;
}
 void Response_UnsupportedRequestResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.UnsupportedRequestResponse.errorCode)
}

// -------------------------------------------------------------------

// Response_GetSupportedAttKeyIDNumResponse

// required uint32 errorCode = 1 [default = 1];
bool Response_GetSupportedAttKeyIDNumResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_GetSupportedAttKeyIDNumResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_GetSupportedAttKeyIDNumResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_GetSupportedAttKeyIDNumResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
 ::google::protobuf::uint32 Response_GetSupportedAttKeyIDNumResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetSupportedAttKeyIDNumResponse.errorCode)
  return errorcode_;
}
 void Response_GetSupportedAttKeyIDNumResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetSupportedAttKeyIDNumResponse.errorCode)
}

// optional uint32 att_key_id_num = 2;
bool Response_GetSupportedAttKeyIDNumResponse::has_att_key_id_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_GetSupportedAttKeyIDNumResponse::set_has_att_key_id_num() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_GetSupportedAttKeyIDNumResponse::clear_has_att_key_id_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_GetSupportedAttKeyIDNumResponse::clear_att_key_id_num() {
  att_key_id_num_ = 0u;
  clear_has_att_key_id_num();
}
 ::google::protobuf::uint32 Response_GetSupportedAttKeyIDNumResponse::att_key_id_num() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetSupportedAttKeyIDNumResponse.att_key_id_num)
  return att_key_id_num_;
}
 void Response_GetSupportedAttKeyIDNumResponse::set_att_key_id_num(::google::protobuf::uint32 value) {
  set_has_att_key_id_num();
  att_key_id_num_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetSupportedAttKeyIDNumResponse.att_key_id_num)
}

// -------------------------------------------------------------------

// Response_GetSupportedAttKeyIDsResponse

// required uint32 errorCode = 1 [default = 1];
bool Response_GetSupportedAttKeyIDsResponse::has_errorcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_GetSupportedAttKeyIDsResponse::set_has_errorcode() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_GetSupportedAttKeyIDsResponse::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_GetSupportedAttKeyIDsResponse::clear_errorcode() {
  errorcode_ = 1u;
  clear_has_errorcode();
}
 ::google::protobuf::uint32 Response_GetSupportedAttKeyIDsResponse::errorcode() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetSupportedAttKeyIDsResponse.errorCode)
  return errorcode_;
}
 void Response_GetSupportedAttKeyIDsResponse::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetSupportedAttKeyIDsResponse.errorCode)
}

// optional bytes att_key_ids = 2;
bool Response_GetSupportedAttKeyIDsResponse::has_att_key_ids() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_GetSupportedAttKeyIDsResponse::set_has_att_key_ids() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_GetSupportedAttKeyIDsResponse::clear_has_att_key_ids() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_GetSupportedAttKeyIDsResponse::clear_att_key_ids() {
  att_key_ids_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_att_key_ids();
}
 const ::std::string& Response_GetSupportedAttKeyIDsResponse::att_key_ids() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.GetSupportedAttKeyIDsResponse.att_key_ids)
  return att_key_ids_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_GetSupportedAttKeyIDsResponse::set_att_key_ids(const ::std::string& value) {
  set_has_att_key_ids();
  att_key_ids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:aesm.message.Response.GetSupportedAttKeyIDsResponse.att_key_ids)
}
 void Response_GetSupportedAttKeyIDsResponse::set_att_key_ids(const char* value) {
  set_has_att_key_ids();
  att_key_ids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:aesm.message.Response.GetSupportedAttKeyIDsResponse.att_key_ids)
}
 void Response_GetSupportedAttKeyIDsResponse::set_att_key_ids(const void* value, size_t size) {
  set_has_att_key_ids();
  att_key_ids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:aesm.message.Response.GetSupportedAttKeyIDsResponse.att_key_ids)
}
 ::std::string* Response_GetSupportedAttKeyIDsResponse::mutable_att_key_ids() {
  set_has_att_key_ids();
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.GetSupportedAttKeyIDsResponse.att_key_ids)
  return att_key_ids_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response_GetSupportedAttKeyIDsResponse::release_att_key_ids() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.GetSupportedAttKeyIDsResponse.att_key_ids)
  clear_has_att_key_ids();
  return att_key_ids_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_GetSupportedAttKeyIDsResponse::set_allocated_att_key_ids(::std::string* att_key_ids) {
  if (att_key_ids != NULL) {
    set_has_att_key_ids();
  } else {
    clear_has_att_key_ids();
  }
  att_key_ids_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), att_key_ids);
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.GetSupportedAttKeyIDsResponse.att_key_ids)
}

// -------------------------------------------------------------------

// Response

// optional .aesm.message.Response.InitQuoteResponse initQuoteRes = 1;
bool Response::has_initquoteres() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response::set_has_initquoteres() {
  _has_bits_[0] |= 0x00000001u;
}
void Response::clear_has_initquoteres() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response::clear_initquoteres() {
  if (initquoteres_ != NULL) initquoteres_->::aesm::message::Response_InitQuoteResponse::Clear();
  clear_has_initquoteres();
}
const ::aesm::message::Response_InitQuoteResponse& Response::initquoteres() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.initQuoteRes)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return initquoteres_ != NULL ? *initquoteres_ : *default_instance().initquoteres_;
#else
  return initquoteres_ != NULL ? *initquoteres_ : *default_instance_->initquoteres_;
#endif
}
::aesm::message::Response_InitQuoteResponse* Response::mutable_initquoteres() {
  set_has_initquoteres();
  if (initquoteres_ == NULL) {
    initquoteres_ = new ::aesm::message::Response_InitQuoteResponse;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.initQuoteRes)
  return initquoteres_;
}
::aesm::message::Response_InitQuoteResponse* Response::release_initquoteres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.initQuoteRes)
  clear_has_initquoteres();
  ::aesm::message::Response_InitQuoteResponse* temp = initquoteres_;
  initquoteres_ = NULL;
  return temp;
}
void Response::set_allocated_initquoteres(::aesm::message::Response_InitQuoteResponse* initquoteres) {
  delete initquoteres_;
  initquoteres_ = initquoteres;
  if (initquoteres) {
    set_has_initquoteres();
  } else {
    clear_has_initquoteres();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.initQuoteRes)
}

// optional .aesm.message.Response.GetQuoteResponse getQuoteRes = 2;
bool Response::has_getquoteres() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response::set_has_getquoteres() {
  _has_bits_[0] |= 0x00000002u;
}
void Response::clear_has_getquoteres() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response::clear_getquoteres() {
  if (getquoteres_ != NULL) getquoteres_->::aesm::message::Response_GetQuoteResponse::Clear();
  clear_has_getquoteres();
}
const ::aesm::message::Response_GetQuoteResponse& Response::getquoteres() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.getQuoteRes)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return getquoteres_ != NULL ? *getquoteres_ : *default_instance().getquoteres_;
#else
  return getquoteres_ != NULL ? *getquoteres_ : *default_instance_->getquoteres_;
#endif
}
::aesm::message::Response_GetQuoteResponse* Response::mutable_getquoteres() {
  set_has_getquoteres();
  if (getquoteres_ == NULL) {
    getquoteres_ = new ::aesm::message::Response_GetQuoteResponse;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.getQuoteRes)
  return getquoteres_;
}
::aesm::message::Response_GetQuoteResponse* Response::release_getquoteres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.getQuoteRes)
  clear_has_getquoteres();
  ::aesm::message::Response_GetQuoteResponse* temp = getquoteres_;
  getquoteres_ = NULL;
  return temp;
}
void Response::set_allocated_getquoteres(::aesm::message::Response_GetQuoteResponse* getquoteres) {
  delete getquoteres_;
  getquoteres_ = getquoteres;
  if (getquoteres) {
    set_has_getquoteres();
  } else {
    clear_has_getquoteres();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.getQuoteRes)
}

// optional .aesm.message.Response.GetLaunchTokenResponse getLicTokenRes = 3;
bool Response::has_getlictokenres() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Response::set_has_getlictokenres() {
  _has_bits_[0] |= 0x00000004u;
}
void Response::clear_has_getlictokenres() {
  _has_bits_[0] &= ~0x00000004u;
}
void Response::clear_getlictokenres() {
  if (getlictokenres_ != NULL) getlictokenres_->::aesm::message::Response_GetLaunchTokenResponse::Clear();
  clear_has_getlictokenres();
}
const ::aesm::message::Response_GetLaunchTokenResponse& Response::getlictokenres() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.getLicTokenRes)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return getlictokenres_ != NULL ? *getlictokenres_ : *default_instance().getlictokenres_;
#else
  return getlictokenres_ != NULL ? *getlictokenres_ : *default_instance_->getlictokenres_;
#endif
}
::aesm::message::Response_GetLaunchTokenResponse* Response::mutable_getlictokenres() {
  set_has_getlictokenres();
  if (getlictokenres_ == NULL) {
    getlictokenres_ = new ::aesm::message::Response_GetLaunchTokenResponse;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.getLicTokenRes)
  return getlictokenres_;
}
::aesm::message::Response_GetLaunchTokenResponse* Response::release_getlictokenres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.getLicTokenRes)
  clear_has_getlictokenres();
  ::aesm::message::Response_GetLaunchTokenResponse* temp = getlictokenres_;
  getlictokenres_ = NULL;
  return temp;
}
void Response::set_allocated_getlictokenres(::aesm::message::Response_GetLaunchTokenResponse* getlictokenres) {
  delete getlictokenres_;
  getlictokenres_ = getlictokenres;
  if (getlictokenres) {
    set_has_getlictokenres();
  } else {
    clear_has_getlictokenres();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.getLicTokenRes)
}

// optional .aesm.message.Response.ReportAttestationErrorResponse reportErrRes = 4;
bool Response::has_reporterrres() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Response::set_has_reporterrres() {
  _has_bits_[0] |= 0x00000008u;
}
void Response::clear_has_reporterrres() {
  _has_bits_[0] &= ~0x00000008u;
}
void Response::clear_reporterrres() {
  if (reporterrres_ != NULL) reporterrres_->::aesm::message::Response_ReportAttestationErrorResponse::Clear();
  clear_has_reporterrres();
}
const ::aesm::message::Response_ReportAttestationErrorResponse& Response::reporterrres() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.reportErrRes)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return reporterrres_ != NULL ? *reporterrres_ : *default_instance().reporterrres_;
#else
  return reporterrres_ != NULL ? *reporterrres_ : *default_instance_->reporterrres_;
#endif
}
::aesm::message::Response_ReportAttestationErrorResponse* Response::mutable_reporterrres() {
  set_has_reporterrres();
  if (reporterrres_ == NULL) {
    reporterrres_ = new ::aesm::message::Response_ReportAttestationErrorResponse;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.reportErrRes)
  return reporterrres_;
}
::aesm::message::Response_ReportAttestationErrorResponse* Response::release_reporterrres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.reportErrRes)
  clear_has_reporterrres();
  ::aesm::message::Response_ReportAttestationErrorResponse* temp = reporterrres_;
  reporterrres_ = NULL;
  return temp;
}
void Response::set_allocated_reporterrres(::aesm::message::Response_ReportAttestationErrorResponse* reporterrres) {
  delete reporterrres_;
  reporterrres_ = reporterrres;
  if (reporterrres) {
    set_has_reporterrres();
  } else {
    clear_has_reporterrres();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.reportErrRes)
}

// optional .aesm.message.Response.GetWhiteListSizeResponse getWhiteListSizeRes = 10;
bool Response::has_getwhitelistsizeres() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Response::set_has_getwhitelistsizeres() {
  _has_bits_[0] |= 0x00000010u;
}
void Response::clear_has_getwhitelistsizeres() {
  _has_bits_[0] &= ~0x00000010u;
}
void Response::clear_getwhitelistsizeres() {
  if (getwhitelistsizeres_ != NULL) getwhitelistsizeres_->::aesm::message::Response_GetWhiteListSizeResponse::Clear();
  clear_has_getwhitelistsizeres();
}
const ::aesm::message::Response_GetWhiteListSizeResponse& Response::getwhitelistsizeres() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.getWhiteListSizeRes)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return getwhitelistsizeres_ != NULL ? *getwhitelistsizeres_ : *default_instance().getwhitelistsizeres_;
#else
  return getwhitelistsizeres_ != NULL ? *getwhitelistsizeres_ : *default_instance_->getwhitelistsizeres_;
#endif
}
::aesm::message::Response_GetWhiteListSizeResponse* Response::mutable_getwhitelistsizeres() {
  set_has_getwhitelistsizeres();
  if (getwhitelistsizeres_ == NULL) {
    getwhitelistsizeres_ = new ::aesm::message::Response_GetWhiteListSizeResponse;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.getWhiteListSizeRes)
  return getwhitelistsizeres_;
}
::aesm::message::Response_GetWhiteListSizeResponse* Response::release_getwhitelistsizeres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.getWhiteListSizeRes)
  clear_has_getwhitelistsizeres();
  ::aesm::message::Response_GetWhiteListSizeResponse* temp = getwhitelistsizeres_;
  getwhitelistsizeres_ = NULL;
  return temp;
}
void Response::set_allocated_getwhitelistsizeres(::aesm::message::Response_GetWhiteListSizeResponse* getwhitelistsizeres) {
  delete getwhitelistsizeres_;
  getwhitelistsizeres_ = getwhitelistsizeres;
  if (getwhitelistsizeres) {
    set_has_getwhitelistsizeres();
  } else {
    clear_has_getwhitelistsizeres();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.getWhiteListSizeRes)
}

// optional .aesm.message.Response.GetWhiteListResponse getWhiteListRes = 11;
bool Response::has_getwhitelistres() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Response::set_has_getwhitelistres() {
  _has_bits_[0] |= 0x00000020u;
}
void Response::clear_has_getwhitelistres() {
  _has_bits_[0] &= ~0x00000020u;
}
void Response::clear_getwhitelistres() {
  if (getwhitelistres_ != NULL) getwhitelistres_->::aesm::message::Response_GetWhiteListResponse::Clear();
  clear_has_getwhitelistres();
}
const ::aesm::message::Response_GetWhiteListResponse& Response::getwhitelistres() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.getWhiteListRes)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return getwhitelistres_ != NULL ? *getwhitelistres_ : *default_instance().getwhitelistres_;
#else
  return getwhitelistres_ != NULL ? *getwhitelistres_ : *default_instance_->getwhitelistres_;
#endif
}
::aesm::message::Response_GetWhiteListResponse* Response::mutable_getwhitelistres() {
  set_has_getwhitelistres();
  if (getwhitelistres_ == NULL) {
    getwhitelistres_ = new ::aesm::message::Response_GetWhiteListResponse;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.getWhiteListRes)
  return getwhitelistres_;
}
::aesm::message::Response_GetWhiteListResponse* Response::release_getwhitelistres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.getWhiteListRes)
  clear_has_getwhitelistres();
  ::aesm::message::Response_GetWhiteListResponse* temp = getwhitelistres_;
  getwhitelistres_ = NULL;
  return temp;
}
void Response::set_allocated_getwhitelistres(::aesm::message::Response_GetWhiteListResponse* getwhitelistres) {
  delete getwhitelistres_;
  getwhitelistres_ = getwhitelistres;
  if (getwhitelistres) {
    set_has_getwhitelistres();
  } else {
    clear_has_getwhitelistres();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.getWhiteListRes)
}

// optional .aesm.message.Response.SGXGetExtendedEpidGroupIdResponse sgxGetExtendedEpidGroupIdRes = 12;
bool Response::has_sgxgetextendedepidgroupidres() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Response::set_has_sgxgetextendedepidgroupidres() {
  _has_bits_[0] |= 0x00000040u;
}
void Response::clear_has_sgxgetextendedepidgroupidres() {
  _has_bits_[0] &= ~0x00000040u;
}
void Response::clear_sgxgetextendedepidgroupidres() {
  if (sgxgetextendedepidgroupidres_ != NULL) sgxgetextendedepidgroupidres_->::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse::Clear();
  clear_has_sgxgetextendedepidgroupidres();
}
const ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse& Response::sgxgetextendedepidgroupidres() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.sgxGetExtendedEpidGroupIdRes)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return sgxgetextendedepidgroupidres_ != NULL ? *sgxgetextendedepidgroupidres_ : *default_instance().sgxgetextendedepidgroupidres_;
#else
  return sgxgetextendedepidgroupidres_ != NULL ? *sgxgetextendedepidgroupidres_ : *default_instance_->sgxgetextendedepidgroupidres_;
#endif
}
::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse* Response::mutable_sgxgetextendedepidgroupidres() {
  set_has_sgxgetextendedepidgroupidres();
  if (sgxgetextendedepidgroupidres_ == NULL) {
    sgxgetextendedepidgroupidres_ = new ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.sgxGetExtendedEpidGroupIdRes)
  return sgxgetextendedepidgroupidres_;
}
::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse* Response::release_sgxgetextendedepidgroupidres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.sgxGetExtendedEpidGroupIdRes)
  clear_has_sgxgetextendedepidgroupidres();
  ::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse* temp = sgxgetextendedepidgroupidres_;
  sgxgetextendedepidgroupidres_ = NULL;
  return temp;
}
void Response::set_allocated_sgxgetextendedepidgroupidres(::aesm::message::Response_SGXGetExtendedEpidGroupIdResponse* sgxgetextendedepidgroupidres) {
  delete sgxgetextendedepidgroupidres_;
  sgxgetextendedepidgroupidres_ = sgxgetextendedepidgroupidres;
  if (sgxgetextendedepidgroupidres) {
    set_has_sgxgetextendedepidgroupidres();
  } else {
    clear_has_sgxgetextendedepidgroupidres();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.sgxGetExtendedEpidGroupIdRes)
}

// optional .aesm.message.Response.SGXSwitchExtendedEpidGroupResponse sgxSwitchExtendedEpidGroupRes = 13;
bool Response::has_sgxswitchextendedepidgroupres() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Response::set_has_sgxswitchextendedepidgroupres() {
  _has_bits_[0] |= 0x00000080u;
}
void Response::clear_has_sgxswitchextendedepidgroupres() {
  _has_bits_[0] &= ~0x00000080u;
}
void Response::clear_sgxswitchextendedepidgroupres() {
  if (sgxswitchextendedepidgroupres_ != NULL) sgxswitchextendedepidgroupres_->::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse::Clear();
  clear_has_sgxswitchextendedepidgroupres();
}
const ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse& Response::sgxswitchextendedepidgroupres() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.sgxSwitchExtendedEpidGroupRes)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return sgxswitchextendedepidgroupres_ != NULL ? *sgxswitchextendedepidgroupres_ : *default_instance().sgxswitchextendedepidgroupres_;
#else
  return sgxswitchextendedepidgroupres_ != NULL ? *sgxswitchextendedepidgroupres_ : *default_instance_->sgxswitchextendedepidgroupres_;
#endif
}
::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse* Response::mutable_sgxswitchextendedepidgroupres() {
  set_has_sgxswitchextendedepidgroupres();
  if (sgxswitchextendedepidgroupres_ == NULL) {
    sgxswitchextendedepidgroupres_ = new ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.sgxSwitchExtendedEpidGroupRes)
  return sgxswitchextendedepidgroupres_;
}
::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse* Response::release_sgxswitchextendedepidgroupres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.sgxSwitchExtendedEpidGroupRes)
  clear_has_sgxswitchextendedepidgroupres();
  ::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse* temp = sgxswitchextendedepidgroupres_;
  sgxswitchextendedepidgroupres_ = NULL;
  return temp;
}
void Response::set_allocated_sgxswitchextendedepidgroupres(::aesm::message::Response_SGXSwitchExtendedEpidGroupResponse* sgxswitchextendedepidgroupres) {
  delete sgxswitchextendedepidgroupres_;
  sgxswitchextendedepidgroupres_ = sgxswitchextendedepidgroupres;
  if (sgxswitchextendedepidgroupres) {
    set_has_sgxswitchextendedepidgroupres();
  } else {
    clear_has_sgxswitchextendedepidgroupres();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.sgxSwitchExtendedEpidGroupRes)
}

// optional .aesm.message.Response.SGXRegisterResponse sgxRegisterRes = 14;
bool Response::has_sgxregisterres() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Response::set_has_sgxregisterres() {
  _has_bits_[0] |= 0x00000100u;
}
void Response::clear_has_sgxregisterres() {
  _has_bits_[0] &= ~0x00000100u;
}
void Response::clear_sgxregisterres() {
  if (sgxregisterres_ != NULL) sgxregisterres_->::aesm::message::Response_SGXRegisterResponse::Clear();
  clear_has_sgxregisterres();
}
const ::aesm::message::Response_SGXRegisterResponse& Response::sgxregisterres() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.sgxRegisterRes)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return sgxregisterres_ != NULL ? *sgxregisterres_ : *default_instance().sgxregisterres_;
#else
  return sgxregisterres_ != NULL ? *sgxregisterres_ : *default_instance_->sgxregisterres_;
#endif
}
::aesm::message::Response_SGXRegisterResponse* Response::mutable_sgxregisterres() {
  set_has_sgxregisterres();
  if (sgxregisterres_ == NULL) {
    sgxregisterres_ = new ::aesm::message::Response_SGXRegisterResponse;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.sgxRegisterRes)
  return sgxregisterres_;
}
::aesm::message::Response_SGXRegisterResponse* Response::release_sgxregisterres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.sgxRegisterRes)
  clear_has_sgxregisterres();
  ::aesm::message::Response_SGXRegisterResponse* temp = sgxregisterres_;
  sgxregisterres_ = NULL;
  return temp;
}
void Response::set_allocated_sgxregisterres(::aesm::message::Response_SGXRegisterResponse* sgxregisterres) {
  delete sgxregisterres_;
  sgxregisterres_ = sgxregisterres;
  if (sgxregisterres) {
    set_has_sgxregisterres();
  } else {
    clear_has_sgxregisterres();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.sgxRegisterRes)
}

// optional .aesm.message.Response.InitQuoteExResponse initQuoteExRes = 15;
bool Response::has_initquoteexres() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Response::set_has_initquoteexres() {
  _has_bits_[0] |= 0x00000200u;
}
void Response::clear_has_initquoteexres() {
  _has_bits_[0] &= ~0x00000200u;
}
void Response::clear_initquoteexres() {
  if (initquoteexres_ != NULL) initquoteexres_->::aesm::message::Response_InitQuoteExResponse::Clear();
  clear_has_initquoteexres();
}
const ::aesm::message::Response_InitQuoteExResponse& Response::initquoteexres() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.initQuoteExRes)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return initquoteexres_ != NULL ? *initquoteexres_ : *default_instance().initquoteexres_;
#else
  return initquoteexres_ != NULL ? *initquoteexres_ : *default_instance_->initquoteexres_;
#endif
}
::aesm::message::Response_InitQuoteExResponse* Response::mutable_initquoteexres() {
  set_has_initquoteexres();
  if (initquoteexres_ == NULL) {
    initquoteexres_ = new ::aesm::message::Response_InitQuoteExResponse;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.initQuoteExRes)
  return initquoteexres_;
}
::aesm::message::Response_InitQuoteExResponse* Response::release_initquoteexres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.initQuoteExRes)
  clear_has_initquoteexres();
  ::aesm::message::Response_InitQuoteExResponse* temp = initquoteexres_;
  initquoteexres_ = NULL;
  return temp;
}
void Response::set_allocated_initquoteexres(::aesm::message::Response_InitQuoteExResponse* initquoteexres) {
  delete initquoteexres_;
  initquoteexres_ = initquoteexres;
  if (initquoteexres) {
    set_has_initquoteexres();
  } else {
    clear_has_initquoteexres();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.initQuoteExRes)
}

// optional .aesm.message.Response.GetQuoteSizeExResponse getQuoteSizeExRes = 16;
bool Response::has_getquotesizeexres() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Response::set_has_getquotesizeexres() {
  _has_bits_[0] |= 0x00000400u;
}
void Response::clear_has_getquotesizeexres() {
  _has_bits_[0] &= ~0x00000400u;
}
void Response::clear_getquotesizeexres() {
  if (getquotesizeexres_ != NULL) getquotesizeexres_->::aesm::message::Response_GetQuoteSizeExResponse::Clear();
  clear_has_getquotesizeexres();
}
const ::aesm::message::Response_GetQuoteSizeExResponse& Response::getquotesizeexres() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.getQuoteSizeExRes)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return getquotesizeexres_ != NULL ? *getquotesizeexres_ : *default_instance().getquotesizeexres_;
#else
  return getquotesizeexres_ != NULL ? *getquotesizeexres_ : *default_instance_->getquotesizeexres_;
#endif
}
::aesm::message::Response_GetQuoteSizeExResponse* Response::mutable_getquotesizeexres() {
  set_has_getquotesizeexres();
  if (getquotesizeexres_ == NULL) {
    getquotesizeexres_ = new ::aesm::message::Response_GetQuoteSizeExResponse;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.getQuoteSizeExRes)
  return getquotesizeexres_;
}
::aesm::message::Response_GetQuoteSizeExResponse* Response::release_getquotesizeexres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.getQuoteSizeExRes)
  clear_has_getquotesizeexres();
  ::aesm::message::Response_GetQuoteSizeExResponse* temp = getquotesizeexres_;
  getquotesizeexres_ = NULL;
  return temp;
}
void Response::set_allocated_getquotesizeexres(::aesm::message::Response_GetQuoteSizeExResponse* getquotesizeexres) {
  delete getquotesizeexres_;
  getquotesizeexres_ = getquotesizeexres;
  if (getquotesizeexres) {
    set_has_getquotesizeexres();
  } else {
    clear_has_getquotesizeexres();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.getQuoteSizeExRes)
}

// optional .aesm.message.Response.GetQuoteExResponse getQuoteExRes = 17;
bool Response::has_getquoteexres() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Response::set_has_getquoteexres() {
  _has_bits_[0] |= 0x00000800u;
}
void Response::clear_has_getquoteexres() {
  _has_bits_[0] &= ~0x00000800u;
}
void Response::clear_getquoteexres() {
  if (getquoteexres_ != NULL) getquoteexres_->::aesm::message::Response_GetQuoteExResponse::Clear();
  clear_has_getquoteexres();
}
const ::aesm::message::Response_GetQuoteExResponse& Response::getquoteexres() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.getQuoteExRes)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return getquoteexres_ != NULL ? *getquoteexres_ : *default_instance().getquoteexres_;
#else
  return getquoteexres_ != NULL ? *getquoteexres_ : *default_instance_->getquoteexres_;
#endif
}
::aesm::message::Response_GetQuoteExResponse* Response::mutable_getquoteexres() {
  set_has_getquoteexres();
  if (getquoteexres_ == NULL) {
    getquoteexres_ = new ::aesm::message::Response_GetQuoteExResponse;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.getQuoteExRes)
  return getquoteexres_;
}
::aesm::message::Response_GetQuoteExResponse* Response::release_getquoteexres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.getQuoteExRes)
  clear_has_getquoteexres();
  ::aesm::message::Response_GetQuoteExResponse* temp = getquoteexres_;
  getquoteexres_ = NULL;
  return temp;
}
void Response::set_allocated_getquoteexres(::aesm::message::Response_GetQuoteExResponse* getquoteexres) {
  delete getquoteexres_;
  getquoteexres_ = getquoteexres;
  if (getquoteexres) {
    set_has_getquoteexres();
  } else {
    clear_has_getquoteexres();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.getQuoteExRes)
}

// optional .aesm.message.Response.CheckUpdateStatusResponse checkUpdateStatusRes = 18;
bool Response::has_checkupdatestatusres() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void Response::set_has_checkupdatestatusres() {
  _has_bits_[0] |= 0x00001000u;
}
void Response::clear_has_checkupdatestatusres() {
  _has_bits_[0] &= ~0x00001000u;
}
void Response::clear_checkupdatestatusres() {
  if (checkupdatestatusres_ != NULL) checkupdatestatusres_->::aesm::message::Response_CheckUpdateStatusResponse::Clear();
  clear_has_checkupdatestatusres();
}
const ::aesm::message::Response_CheckUpdateStatusResponse& Response::checkupdatestatusres() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.checkUpdateStatusRes)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return checkupdatestatusres_ != NULL ? *checkupdatestatusres_ : *default_instance().checkupdatestatusres_;
#else
  return checkupdatestatusres_ != NULL ? *checkupdatestatusres_ : *default_instance_->checkupdatestatusres_;
#endif
}
::aesm::message::Response_CheckUpdateStatusResponse* Response::mutable_checkupdatestatusres() {
  set_has_checkupdatestatusres();
  if (checkupdatestatusres_ == NULL) {
    checkupdatestatusres_ = new ::aesm::message::Response_CheckUpdateStatusResponse;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.checkUpdateStatusRes)
  return checkupdatestatusres_;
}
::aesm::message::Response_CheckUpdateStatusResponse* Response::release_checkupdatestatusres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.checkUpdateStatusRes)
  clear_has_checkupdatestatusres();
  ::aesm::message::Response_CheckUpdateStatusResponse* temp = checkupdatestatusres_;
  checkupdatestatusres_ = NULL;
  return temp;
}
void Response::set_allocated_checkupdatestatusres(::aesm::message::Response_CheckUpdateStatusResponse* checkupdatestatusres) {
  delete checkupdatestatusres_;
  checkupdatestatusres_ = checkupdatestatusres;
  if (checkupdatestatusres) {
    set_has_checkupdatestatusres();
  } else {
    clear_has_checkupdatestatusres();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.checkUpdateStatusRes)
}

// optional .aesm.message.Response.SelectAttKeyIDResponse selectAttKeyIDRes = 19;
bool Response::has_selectattkeyidres() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void Response::set_has_selectattkeyidres() {
  _has_bits_[0] |= 0x00002000u;
}
void Response::clear_has_selectattkeyidres() {
  _has_bits_[0] &= ~0x00002000u;
}
void Response::clear_selectattkeyidres() {
  if (selectattkeyidres_ != NULL) selectattkeyidres_->::aesm::message::Response_SelectAttKeyIDResponse::Clear();
  clear_has_selectattkeyidres();
}
const ::aesm::message::Response_SelectAttKeyIDResponse& Response::selectattkeyidres() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.selectAttKeyIDRes)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return selectattkeyidres_ != NULL ? *selectattkeyidres_ : *default_instance().selectattkeyidres_;
#else
  return selectattkeyidres_ != NULL ? *selectattkeyidres_ : *default_instance_->selectattkeyidres_;
#endif
}
::aesm::message::Response_SelectAttKeyIDResponse* Response::mutable_selectattkeyidres() {
  set_has_selectattkeyidres();
  if (selectattkeyidres_ == NULL) {
    selectattkeyidres_ = new ::aesm::message::Response_SelectAttKeyIDResponse;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.selectAttKeyIDRes)
  return selectattkeyidres_;
}
::aesm::message::Response_SelectAttKeyIDResponse* Response::release_selectattkeyidres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.selectAttKeyIDRes)
  clear_has_selectattkeyidres();
  ::aesm::message::Response_SelectAttKeyIDResponse* temp = selectattkeyidres_;
  selectattkeyidres_ = NULL;
  return temp;
}
void Response::set_allocated_selectattkeyidres(::aesm::message::Response_SelectAttKeyIDResponse* selectattkeyidres) {
  delete selectattkeyidres_;
  selectattkeyidres_ = selectattkeyidres;
  if (selectattkeyidres) {
    set_has_selectattkeyidres();
  } else {
    clear_has_selectattkeyidres();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.selectAttKeyIDRes)
}

// optional .aesm.message.Response.UnsupportedRequestResponse unsupportedRequestResponse = 20;
bool Response::has_unsupportedrequestresponse() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void Response::set_has_unsupportedrequestresponse() {
  _has_bits_[0] |= 0x00004000u;
}
void Response::clear_has_unsupportedrequestresponse() {
  _has_bits_[0] &= ~0x00004000u;
}
void Response::clear_unsupportedrequestresponse() {
  if (unsupportedrequestresponse_ != NULL) unsupportedrequestresponse_->::aesm::message::Response_UnsupportedRequestResponse::Clear();
  clear_has_unsupportedrequestresponse();
}
const ::aesm::message::Response_UnsupportedRequestResponse& Response::unsupportedrequestresponse() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.unsupportedRequestResponse)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return unsupportedrequestresponse_ != NULL ? *unsupportedrequestresponse_ : *default_instance().unsupportedrequestresponse_;
#else
  return unsupportedrequestresponse_ != NULL ? *unsupportedrequestresponse_ : *default_instance_->unsupportedrequestresponse_;
#endif
}
::aesm::message::Response_UnsupportedRequestResponse* Response::mutable_unsupportedrequestresponse() {
  set_has_unsupportedrequestresponse();
  if (unsupportedrequestresponse_ == NULL) {
    unsupportedrequestresponse_ = new ::aesm::message::Response_UnsupportedRequestResponse;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.unsupportedRequestResponse)
  return unsupportedrequestresponse_;
}
::aesm::message::Response_UnsupportedRequestResponse* Response::release_unsupportedrequestresponse() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.unsupportedRequestResponse)
  clear_has_unsupportedrequestresponse();
  ::aesm::message::Response_UnsupportedRequestResponse* temp = unsupportedrequestresponse_;
  unsupportedrequestresponse_ = NULL;
  return temp;
}
void Response::set_allocated_unsupportedrequestresponse(::aesm::message::Response_UnsupportedRequestResponse* unsupportedrequestresponse) {
  delete unsupportedrequestresponse_;
  unsupportedrequestresponse_ = unsupportedrequestresponse;
  if (unsupportedrequestresponse) {
    set_has_unsupportedrequestresponse();
  } else {
    clear_has_unsupportedrequestresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.unsupportedRequestResponse)
}

// optional .aesm.message.Response.GetSupportedAttKeyIDNumResponse getSupportedAttKeyIDNumRes = 21;
bool Response::has_getsupportedattkeyidnumres() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void Response::set_has_getsupportedattkeyidnumres() {
  _has_bits_[0] |= 0x00008000u;
}
void Response::clear_has_getsupportedattkeyidnumres() {
  _has_bits_[0] &= ~0x00008000u;
}
void Response::clear_getsupportedattkeyidnumres() {
  if (getsupportedattkeyidnumres_ != NULL) getsupportedattkeyidnumres_->::aesm::message::Response_GetSupportedAttKeyIDNumResponse::Clear();
  clear_has_getsupportedattkeyidnumres();
}
const ::aesm::message::Response_GetSupportedAttKeyIDNumResponse& Response::getsupportedattkeyidnumres() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.getSupportedAttKeyIDNumRes)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return getsupportedattkeyidnumres_ != NULL ? *getsupportedattkeyidnumres_ : *default_instance().getsupportedattkeyidnumres_;
#else
  return getsupportedattkeyidnumres_ != NULL ? *getsupportedattkeyidnumres_ : *default_instance_->getsupportedattkeyidnumres_;
#endif
}
::aesm::message::Response_GetSupportedAttKeyIDNumResponse* Response::mutable_getsupportedattkeyidnumres() {
  set_has_getsupportedattkeyidnumres();
  if (getsupportedattkeyidnumres_ == NULL) {
    getsupportedattkeyidnumres_ = new ::aesm::message::Response_GetSupportedAttKeyIDNumResponse;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.getSupportedAttKeyIDNumRes)
  return getsupportedattkeyidnumres_;
}
::aesm::message::Response_GetSupportedAttKeyIDNumResponse* Response::release_getsupportedattkeyidnumres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.getSupportedAttKeyIDNumRes)
  clear_has_getsupportedattkeyidnumres();
  ::aesm::message::Response_GetSupportedAttKeyIDNumResponse* temp = getsupportedattkeyidnumres_;
  getsupportedattkeyidnumres_ = NULL;
  return temp;
}
void Response::set_allocated_getsupportedattkeyidnumres(::aesm::message::Response_GetSupportedAttKeyIDNumResponse* getsupportedattkeyidnumres) {
  delete getsupportedattkeyidnumres_;
  getsupportedattkeyidnumres_ = getsupportedattkeyidnumres;
  if (getsupportedattkeyidnumres) {
    set_has_getsupportedattkeyidnumres();
  } else {
    clear_has_getsupportedattkeyidnumres();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.getSupportedAttKeyIDNumRes)
}

// optional .aesm.message.Response.GetSupportedAttKeyIDsResponse getSupportedAttKeyIDsRes = 22;
bool Response::has_getsupportedattkeyidsres() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void Response::set_has_getsupportedattkeyidsres() {
  _has_bits_[0] |= 0x00010000u;
}
void Response::clear_has_getsupportedattkeyidsres() {
  _has_bits_[0] &= ~0x00010000u;
}
void Response::clear_getsupportedattkeyidsres() {
  if (getsupportedattkeyidsres_ != NULL) getsupportedattkeyidsres_->::aesm::message::Response_GetSupportedAttKeyIDsResponse::Clear();
  clear_has_getsupportedattkeyidsres();
}
const ::aesm::message::Response_GetSupportedAttKeyIDsResponse& Response::getsupportedattkeyidsres() const {
  // @@protoc_insertion_point(field_get:aesm.message.Response.getSupportedAttKeyIDsRes)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return getsupportedattkeyidsres_ != NULL ? *getsupportedattkeyidsres_ : *default_instance().getsupportedattkeyidsres_;
#else
  return getsupportedattkeyidsres_ != NULL ? *getsupportedattkeyidsres_ : *default_instance_->getsupportedattkeyidsres_;
#endif
}
::aesm::message::Response_GetSupportedAttKeyIDsResponse* Response::mutable_getsupportedattkeyidsres() {
  set_has_getsupportedattkeyidsres();
  if (getsupportedattkeyidsres_ == NULL) {
    getsupportedattkeyidsres_ = new ::aesm::message::Response_GetSupportedAttKeyIDsResponse;
  }
  // @@protoc_insertion_point(field_mutable:aesm.message.Response.getSupportedAttKeyIDsRes)
  return getsupportedattkeyidsres_;
}
::aesm::message::Response_GetSupportedAttKeyIDsResponse* Response::release_getsupportedattkeyidsres() {
  // @@protoc_insertion_point(field_release:aesm.message.Response.getSupportedAttKeyIDsRes)
  clear_has_getsupportedattkeyidsres();
  ::aesm::message::Response_GetSupportedAttKeyIDsResponse* temp = getsupportedattkeyidsres_;
  getsupportedattkeyidsres_ = NULL;
  return temp;
}
void Response::set_allocated_getsupportedattkeyidsres(::aesm::message::Response_GetSupportedAttKeyIDsResponse* getsupportedattkeyidsres) {
  delete getsupportedattkeyidsres_;
  getsupportedattkeyidsres_ = getsupportedattkeyidsres;
  if (getsupportedattkeyidsres) {
    set_has_getsupportedattkeyidsres();
  } else {
    clear_has_getsupportedattkeyidsres();
  }
  // @@protoc_insertion_point(field_set_allocated:aesm.message.Response.getSupportedAttKeyIDsRes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace aesm

// @@protoc_insertion_point(global_scope)
